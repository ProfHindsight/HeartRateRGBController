
build/hrrgb.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
080000c4 l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000014 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /tmp/cczoEOns.o
f108f85f l       *ABS*	00000000 BootRAM
08000f84 l       .text	00000000 LoopCopyDataInit
08000f7c l       .text	00000000 CopyDataInit
08000f98 l       .text	00000000 LoopFillZerobss
08000f92 l       .text	00000000 FillZerobss
08000faa l       .text	00000000 LoopForever
08000fc4 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32f0xx_gpio.c
00000000 l    df *ABS*	00000000 stm32f0xx_rcc.c
20000000 l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32f0xx_usart.c
00000000 l    df *ABS*	00000000 _udivsi3.o
08000d28 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32f0xx.c
00000000 l    df *ABS*	00000000 gpio_driver.c
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000018 l       .bss	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000018 l       .bss	00000000 __exidx_start
00000000 l       *UND*	00000000 _sbrk
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
08000b48 g     F .text	00000014 USART_SetGuardTime
08000c28 g     F .text	00000018 USART_SetDEDeassertionTime
0800034c g     F .text	00000020 RCC_HSICmd
080003e0 g     F .text	00000018 RCC_LSEDriveConfig
0800099c g     F .text	0000001c USART_MSBFirstCmd
08000438 g     F .text	00000024 RCC_PLLCmd
08000714 g     F .text	00000018 RCC_AHBPeriphResetCmd
080002a4 g     F .text	00000024 GPIO_PinAFConfig
08000804 g     F .text	0000000c RCC_ClearITPendingBit
08000278 g     F .text	0000000c GPIO_ReadOutputDataBit
08000b8c g     F .text	00000018 USART_SetAutoRetryCount
08000fc4  w    F .text	00000002 TIM1_CC_IRQHandler
08000fc4  w    F .text	00000002 HardFault_Handler
08001010 g     O .text	00000068 gpio_pin_mapping
08000fc4  w    F .text	00000002 ADC1_COMP_IRQHandler
08000f10 g     F .text	00000010 SysTick_Handler
08000494 g     F .text	0000000c RCC_MCOConfig
08000fc4  w    F .text	00000002 PVD_IRQHandler
08000524 g     F .text	00000018 RCC_CECCLKConfig
08001090 g       .text	00000000 _sidata
08000fc4  w    F .text	00000002 PendSV_Handler
08000fc4  w    F .text	00000002 NMI_Handler
08000fc4  w    F .text	00000002 I2C1_IRQHandler
0800075c g     F .text	00000018 RCC_ITConfig
08000950 g     F .text	00000012 USART_DirectionModeCmd
08000b5c g     F .text	00000018 USART_SmartCardCmd
08000cc8 g     F .text	0000000c USART_GetFlagStatus
08000a20 g     F .text	00000010 USART_SetReceiverTimeOut
08001090 g       .text	00000000 _etext
20000014 g       .bss	00000000 _sbss
080004a0 g     F .text	00000014 RCC_SYSCLKConfig
08000ae0 g     F .text	00000014 USART_MuteModeWakeUpConfig
080007a8 g     F .text	00000034 RCC_WaitForHSEStartUp
08000ab0 g     F .text	00000012 USART_SetAddress
08000a8c g     F .text	00000014 USART_AutoBaudRateConfig
08000a30 g     F .text	00000014 USART_SetPrescaler
080006a8 g     F .text	00000024 RCC_BackupResetCmd
08000980 g     F .text	0000001c USART_OneBitMethodCmd
08000470 g     F .text	00000024 RCC_ClockSecuritySystemCmd
080007dc g     F .text	00000014 RCC_ClearFlag
20000010 g     O .data	00000004 SystemCoreClock
08000f20 g     F .text	00000054 utilities_init
08000aa8 g     F .text	00000008 USART_ReceiveData
08000328 g     F .text	00000010 RCC_HSEConfig
08000d24 g     F .text	00000088 .hidden __udivsi3
080006e4 g     F .text	00000018 RCC_APB2PeriphClockCmd
08000168 g     F .text	000000c0 GPIO_Init
08000418 g     F .text	00000020 RCC_PLLConfig
080004f0 g     F .text	00000034 RCC_ADCCLKConfig
20000000 g       .data	00000000 _sdata
08000fc4  w    F .text	00000002 SPI1_IRQHandler
08000938 g     F .text	00000018 USART_Cmd
08000bc8 g     F .text	00000018 USART_IrDACmd
080002a0 g     F .text	00000004 GPIO_Write
08000fc4  w    F .text	00000002 TIM6_DAC_IRQHandler
08000284 g     F .text	00000006 GPIO_ReadOutputData
080003c0 g     F .text	00000020 RCC_LSEConfig
08000d18 g     F .text	0000000a USART_ClearITPendingBit
08000684 g     F .text	00000024 RCC_RTCCLKCmd
080006fc g     F .text	00000018 RCC_APB1PeriphClockCmd
080007f0 g     F .text	00000014 RCC_GetITStatus
08000fc8 g     F .text	00000048 __libc_init_array
080006cc g     F .text	00000018 RCC_AHBPeriphClockCmd
08000fc4  w    F .text	00000002 EXTI2_3_IRQHandler
08000ac4 g     F .text	0000001c USART_MuteModeCmd
08000964 g     F .text	0000001c USART_OverSampling8Cmd
08001078 g     F .text	00000000 _init
08000fc4  w    F .text	00000002 I2C2_IRQHandler
08000fc4  w    F .text	00000002 TIM17_IRQHandler
08000fc4  w    F .text	00000002 RTC_IRQHandler
20000018 g       .bss	00000000 _ebss
08000cd8 g     F .text	00000040 USART_GetITStatus
08000f74  w    F .text	00000038 Reset_Handler
08000270 g     F .text	00000006 GPIO_ReadInputData
08000b04 g     F .text	00000010 USART_LINBreakDetectLengthConfig
08000774 g     F .text	00000034 RCC_GetFlagStatus
08000af4 g     F .text	00000010 USART_AddressDetectionConfig
0800028c g     F .text	00000004 GPIO_SetBits
080004b4 g     F .text	00000010 RCC_GetSYSCLKSource
08000294 g     F .text	0000000c GPIO_WriteBit
0800056c g     F .text	00000108 RCC_GetClocksFreq
08000fc4  w    F .text	00000002 TIM16_IRQHandler
08000854 g     F .text	000000a0 USART_Init
08000fc4  w    F .text	00000002 TIM3_IRQHandler
08000fc4  w    F .text	00000002 EXTI4_15_IRQHandler
08000fc4  w    F .text	00000002 RCC_IRQHandler
20000014 g       .bss	00000000 _bss
08000fc4  w    F .text	00000002 DMA1_Channel1_IRQHandler
08000be0 g     F .text	0000001c USART_DECmd
08000fc4 g       .text	00000002 Default_Handler
08000b30 g     F .text	00000018 USART_HalfDuplexCmd
08000674 g     F .text	00000010 RCC_RTCCLKConfig
08000fc4  w    F .text	00000002 CEC_IRQHandler
08000380 g     F .text	00000020 RCC_HSI14Cmd
08000fc4  w    F .text	00000002 TIM14_IRQHandler
08000c68 g     F .text	00000032 USART_ITConfig
08000fc4  w    F .text	00000002 DMA1_Channel4_5_IRQHandler
080009b8 g     F .text	0000001c USART_DataInvCmd
080009e8 g     F .text	0000001c USART_SWAPPinCmd
08000290 g     F .text	00000004 GPIO_ResetBits
08000bb8 g     F .text	00000010 USART_IrDAConfig
08000fc4  w    F .text	00000002 TIM15_IRQHandler
08000a44 g     F .text	00000018 USART_STOPModeCmd
08000fc4  w    F .text	00000002 EXTI0_1_IRQHandler
08000bfc g     F .text	00000014 USART_DEPolarityConfig
08000dc0  w    F .text	00000002 .hidden __aeabi_ldiv0
080003a0 g     F .text	00000020 RCC_HSI14ADCRequestCmd
08000cb4 g     F .text	00000014 USART_OverrunDetectionConfig
08000810 g     F .text	00000044 USART_DeInit
08000fc4  w    F .text	00000002 SPI2_IRQHandler
08000338 g     F .text	00000014 RCC_AdjustHSICalibrationValue
08000dc4 g     F .text	0000000c main
0800090c g     F .text	00000020 USART_ClockInit
08000d24 g     F .text	00000000 .hidden __aeabi_uidiv
08000fc4  w    F .text	00000002 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
08000cd4 g     F .text	00000004 USART_ClearFlag
08000dd0 g     F .text	000000b4 SystemInit
0800036c g     F .text	00000014 RCC_AdjustHSI14CalibrationValue
080000c4 g     F .text	000000a4 GPIO_DeInit
08001084 g     F .text	00000000 _fini
080002c8 g     F .text	00000060 RCC_DeInit
08000a5c g     F .text	00000014 USART_StopModeWakeUpSourceConfig
08000fc4  w    F .text	00000002 TS_IRQHandler
00000000  w      *UND*	00000000 __preinit_array_end
08000fc4  w    F .text	00000002 WWDG_IRQHandler
08000744 g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
20000014 g     O .bss	00000004 msTicks
0800045c g     F .text	00000014 RCC_PREDIV1Config
08000fc4  w    F .text	00000002 TIM2_IRQHandler
08000228 g     F .text	00000018 GPIO_StructInit
08000fc4  w    F .text	00000002 DMA1_Channel2_3_IRQHandler
08000c9c g     F .text	00000016 USART_RequestCmd
20002000 g       *ABS*	00000000 _estack
08000aa0 g     F .text	00000008 USART_SendData
08000dac g     F .text	00000012 .hidden __aeabi_uidivmod
20000014 g       .data	00000000 _edata
080008f4 g     F .text	00000016 USART_StructInit
08000a04 g     F .text	0000001c USART_ReceiverTimeOutCmd
08000fc4  w    F .text	00000002 USART2_IRQHandler
08000b74 g     F .text	00000018 USART_SmartCardNACKCmd
08000ba4 g     F .text	00000012 USART_SetBlockLength
08000000 g     O .isr_vector	00000000 g_pfnVectors
08000b14 g     F .text	0000001c USART_LINCmd
08000554 g     F .text	00000018 RCC_USARTCLKConfig
080009d4 g     F .text	00000012 USART_InvPinCmd
00000000  w      *UND*	00000000 __init_array_start
08000dc0  w    F .text	00000002 .hidden __aeabi_idiv0
0800053c g     F .text	00000018 RCC_I2CCLKConfig
080004d8 g     F .text	00000018 RCC_PCLKConfig
08000fc4  w    F .text	00000002 FLASH_IRQHandler
08000e9c g     F .text	00000074 gpio_driver_init
08000240 g     F .text	00000024 GPIO_PinLockConfig
08000fc4  w    F .text	00000002 USART1_IRQHandler
080003f8 g     F .text	00000020 RCC_LSICmd
0800092c g     F .text	0000000c USART_ClockStructInit
0800072c g     F .text	00000018 RCC_APB2PeriphResetCmd
08000a70 g     F .text	0000001c USART_AutoBaudRateCmd
08000fc4  w    F .text	00000002 TIM1_BRK_UP_TRG_COM_IRQHandler
00000000  w      *UND*	00000000 __preinit_array_start
08000264 g     F .text	0000000c GPIO_ReadInputDataBit
08000c40 g     F .text	00000012 USART_DMACmd
08000c10 g     F .text	00000018 USART_SetDEAssertionTime
08000e84 g     F .text	00000016 gpiopin_to_gpiopinsource
080004c4 g     F .text	00000014 RCC_HCLKConfig
08000c54 g     F .text	00000014 USART_DMAReceptionErrorConfig



Disassembly of section .text:

080000c4 <GPIO_DeInit>:
 80000c4:	b508      	push	{r3, lr}
 80000c6:	2390      	movs	r3, #144	; 0x90
 80000c8:	05db      	lsls	r3, r3, #23
 80000ca:	4298      	cmp	r0, r3
 80000cc:	d017      	beq.n	80000fe <GPIO_DeInit+0x3a>
 80000ce:	4b22      	ldr	r3, [pc, #136]	; (8000158 <GPIO_DeInit+0x94>)
 80000d0:	4298      	cmp	r0, r3
 80000d2:	d01f      	beq.n	8000114 <GPIO_DeInit+0x50>
 80000d4:	4b21      	ldr	r3, [pc, #132]	; (800015c <GPIO_DeInit+0x98>)
 80000d6:	4298      	cmp	r0, r3
 80000d8:	d027      	beq.n	800012a <GPIO_DeInit+0x66>
 80000da:	4b21      	ldr	r3, [pc, #132]	; (8000160 <GPIO_DeInit+0x9c>)
 80000dc:	4298      	cmp	r0, r3
 80000de:	d02f      	beq.n	8000140 <GPIO_DeInit+0x7c>
 80000e0:	4b20      	ldr	r3, [pc, #128]	; (8000164 <GPIO_DeInit+0xa0>)
 80000e2:	4298      	cmp	r0, r3
 80000e4:	d000      	beq.n	80000e8 <GPIO_DeInit+0x24>
 80000e6:	bd08      	pop	{r3, pc}
 80000e8:	2080      	movs	r0, #128	; 0x80
 80000ea:	03c0      	lsls	r0, r0, #15
 80000ec:	2101      	movs	r1, #1
 80000ee:	f000 fb11 	bl	8000714 <RCC_AHBPeriphResetCmd>
 80000f2:	2080      	movs	r0, #128	; 0x80
 80000f4:	03c0      	lsls	r0, r0, #15
 80000f6:	2100      	movs	r1, #0
 80000f8:	f000 fb0c 	bl	8000714 <RCC_AHBPeriphResetCmd>
 80000fc:	e7f3      	b.n	80000e6 <GPIO_DeInit+0x22>
 80000fe:	2080      	movs	r0, #128	; 0x80
 8000100:	0280      	lsls	r0, r0, #10
 8000102:	2101      	movs	r1, #1
 8000104:	f000 fb06 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000108:	2080      	movs	r0, #128	; 0x80
 800010a:	0280      	lsls	r0, r0, #10
 800010c:	2100      	movs	r1, #0
 800010e:	f000 fb01 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000112:	e7e8      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000114:	2080      	movs	r0, #128	; 0x80
 8000116:	02c0      	lsls	r0, r0, #11
 8000118:	2101      	movs	r1, #1
 800011a:	f000 fafb 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800011e:	2080      	movs	r0, #128	; 0x80
 8000120:	02c0      	lsls	r0, r0, #11
 8000122:	2100      	movs	r1, #0
 8000124:	f000 faf6 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000128:	e7dd      	b.n	80000e6 <GPIO_DeInit+0x22>
 800012a:	2080      	movs	r0, #128	; 0x80
 800012c:	0300      	lsls	r0, r0, #12
 800012e:	2101      	movs	r1, #1
 8000130:	f000 faf0 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000134:	2080      	movs	r0, #128	; 0x80
 8000136:	0300      	lsls	r0, r0, #12
 8000138:	2100      	movs	r1, #0
 800013a:	f000 faeb 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800013e:	e7d2      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000140:	2080      	movs	r0, #128	; 0x80
 8000142:	0340      	lsls	r0, r0, #13
 8000144:	2101      	movs	r1, #1
 8000146:	f000 fae5 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800014a:	2080      	movs	r0, #128	; 0x80
 800014c:	0340      	lsls	r0, r0, #13
 800014e:	2100      	movs	r1, #0
 8000150:	f000 fae0 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000154:	e7c7      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000156:	46c0      	nop			; (mov r8, r8)
 8000158:	48000400 	.word	0x48000400
 800015c:	48000800 	.word	0x48000800
 8000160:	48000c00 	.word	0x48000c00
 8000164:	48001400 	.word	0x48001400

08000168 <GPIO_Init>:
 8000168:	b5f0      	push	{r4, r5, r6, r7, lr}
 800016a:	465f      	mov	r7, fp
 800016c:	4656      	mov	r6, sl
 800016e:	4644      	mov	r4, r8
 8000170:	464d      	mov	r5, r9
 8000172:	b4f0      	push	{r4, r5, r6, r7}
 8000174:	b083      	sub	sp, #12
 8000176:	9101      	str	r1, [sp, #4]
 8000178:	680f      	ldr	r7, [r1, #0]
 800017a:	2103      	movs	r1, #3
 800017c:	2200      	movs	r2, #0
 800017e:	2300      	movs	r3, #0
 8000180:	2601      	movs	r6, #1
 8000182:	4688      	mov	r8, r1
 8000184:	e003      	b.n	800018e <GPIO_Init+0x26>
 8000186:	3301      	adds	r3, #1
 8000188:	3202      	adds	r2, #2
 800018a:	2b10      	cmp	r3, #16
 800018c:	d02c      	beq.n	80001e8 <GPIO_Init+0x80>
 800018e:	1c34      	adds	r4, r6, #0
 8000190:	409c      	lsls	r4, r3
 8000192:	1c3d      	adds	r5, r7, #0
 8000194:	4025      	ands	r5, r4
 8000196:	42a5      	cmp	r5, r4
 8000198:	d1f5      	bne.n	8000186 <GPIO_Init+0x1e>
 800019a:	9c01      	ldr	r4, [sp, #4]
 800019c:	2101      	movs	r1, #1
 800019e:	7924      	ldrb	r4, [r4, #4]
 80001a0:	4249      	negs	r1, r1
 80001a2:	46a3      	mov	fp, r4
 80001a4:	468c      	mov	ip, r1
 80001a6:	44dc      	add	ip, fp
 80001a8:	4664      	mov	r4, ip
 80001aa:	b2e4      	uxtb	r4, r4
 80001ac:	2c01      	cmp	r4, #1
 80001ae:	d922      	bls.n	80001f6 <GPIO_Init+0x8e>
 80001b0:	4645      	mov	r5, r8
 80001b2:	4095      	lsls	r5, r2
 80001b4:	43ed      	mvns	r5, r5
 80001b6:	46ac      	mov	ip, r5
 80001b8:	6805      	ldr	r5, [r0, #0]
 80001ba:	4664      	mov	r4, ip
 80001bc:	4025      	ands	r5, r4
 80001be:	6005      	str	r5, [r0, #0]
 80001c0:	6805      	ldr	r5, [r0, #0]
 80001c2:	465c      	mov	r4, fp
 80001c4:	4094      	lsls	r4, r2
 80001c6:	432c      	orrs	r4, r5
 80001c8:	6004      	str	r4, [r0, #0]
 80001ca:	68c4      	ldr	r4, [r0, #12]
 80001cc:	4645      	mov	r5, r8
 80001ce:	4095      	lsls	r5, r2
 80001d0:	9901      	ldr	r1, [sp, #4]
 80001d2:	43ac      	bics	r4, r5
 80001d4:	60c4      	str	r4, [r0, #12]
 80001d6:	79cc      	ldrb	r4, [r1, #7]
 80001d8:	68c5      	ldr	r5, [r0, #12]
 80001da:	4094      	lsls	r4, r2
 80001dc:	432c      	orrs	r4, r5
 80001de:	3301      	adds	r3, #1
 80001e0:	60c4      	str	r4, [r0, #12]
 80001e2:	3202      	adds	r2, #2
 80001e4:	2b10      	cmp	r3, #16
 80001e6:	d1d2      	bne.n	800018e <GPIO_Init+0x26>
 80001e8:	b003      	add	sp, #12
 80001ea:	bc3c      	pop	{r2, r3, r4, r5}
 80001ec:	4690      	mov	r8, r2
 80001ee:	4699      	mov	r9, r3
 80001f0:	46a2      	mov	sl, r4
 80001f2:	46ab      	mov	fp, r5
 80001f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80001f6:	4644      	mov	r4, r8
 80001f8:	6881      	ldr	r1, [r0, #8]
 80001fa:	4094      	lsls	r4, r2
 80001fc:	43e4      	mvns	r4, r4
 80001fe:	4021      	ands	r1, r4
 8000200:	6081      	str	r1, [r0, #8]
 8000202:	9901      	ldr	r1, [sp, #4]
 8000204:	46a4      	mov	ip, r4
 8000206:	7949      	ldrb	r1, [r1, #5]
 8000208:	6884      	ldr	r4, [r0, #8]
 800020a:	4091      	lsls	r1, r2
 800020c:	4321      	orrs	r1, r4
 800020e:	6081      	str	r1, [r0, #8]
 8000210:	6841      	ldr	r1, [r0, #4]
 8000212:	b28c      	uxth	r4, r1
 8000214:	9901      	ldr	r1, [sp, #4]
 8000216:	43ac      	bics	r4, r5
 8000218:	8084      	strh	r4, [r0, #4]
 800021a:	7989      	ldrb	r1, [r1, #6]
 800021c:	6845      	ldr	r5, [r0, #4]
 800021e:	4099      	lsls	r1, r3
 8000220:	430d      	orrs	r5, r1
 8000222:	b2ad      	uxth	r5, r5
 8000224:	8085      	strh	r5, [r0, #4]
 8000226:	e7c7      	b.n	80001b8 <GPIO_Init+0x50>

08000228 <GPIO_StructInit>:
 8000228:	4b04      	ldr	r3, [pc, #16]	; (800023c <GPIO_StructInit+0x14>)
 800022a:	2202      	movs	r2, #2
 800022c:	6003      	str	r3, [r0, #0]
 800022e:	2300      	movs	r3, #0
 8000230:	7103      	strb	r3, [r0, #4]
 8000232:	7142      	strb	r2, [r0, #5]
 8000234:	7183      	strb	r3, [r0, #6]
 8000236:	71c3      	strb	r3, [r0, #7]
 8000238:	4770      	bx	lr
 800023a:	46c0      	nop			; (mov r8, r8)
 800023c:	0000ffff 	.word	0x0000ffff

08000240 <GPIO_PinLockConfig>:
 8000240:	2380      	movs	r3, #128	; 0x80
 8000242:	b082      	sub	sp, #8
 8000244:	025b      	lsls	r3, r3, #9
 8000246:	9301      	str	r3, [sp, #4]
 8000248:	9b01      	ldr	r3, [sp, #4]
 800024a:	430b      	orrs	r3, r1
 800024c:	9301      	str	r3, [sp, #4]
 800024e:	9b01      	ldr	r3, [sp, #4]
 8000250:	61c3      	str	r3, [r0, #28]
 8000252:	61c1      	str	r1, [r0, #28]
 8000254:	9b01      	ldr	r3, [sp, #4]
 8000256:	61c3      	str	r3, [r0, #28]
 8000258:	69c3      	ldr	r3, [r0, #28]
 800025a:	9301      	str	r3, [sp, #4]
 800025c:	69c3      	ldr	r3, [r0, #28]
 800025e:	9301      	str	r3, [sp, #4]
 8000260:	b002      	add	sp, #8
 8000262:	4770      	bx	lr

08000264 <GPIO_ReadInputDataBit>:
 8000264:	6900      	ldr	r0, [r0, #16]
 8000266:	4008      	ands	r0, r1
 8000268:	1e43      	subs	r3, r0, #1
 800026a:	4198      	sbcs	r0, r3
 800026c:	b2c0      	uxtb	r0, r0
 800026e:	4770      	bx	lr

08000270 <GPIO_ReadInputData>:
 8000270:	6900      	ldr	r0, [r0, #16]
 8000272:	b280      	uxth	r0, r0
 8000274:	4770      	bx	lr
 8000276:	46c0      	nop			; (mov r8, r8)

08000278 <GPIO_ReadOutputDataBit>:
 8000278:	6940      	ldr	r0, [r0, #20]
 800027a:	4008      	ands	r0, r1
 800027c:	1e43      	subs	r3, r0, #1
 800027e:	4198      	sbcs	r0, r3
 8000280:	b2c0      	uxtb	r0, r0
 8000282:	4770      	bx	lr

08000284 <GPIO_ReadOutputData>:
 8000284:	6940      	ldr	r0, [r0, #20]
 8000286:	b280      	uxth	r0, r0
 8000288:	4770      	bx	lr
 800028a:	46c0      	nop			; (mov r8, r8)

0800028c <GPIO_SetBits>:
 800028c:	6181      	str	r1, [r0, #24]
 800028e:	4770      	bx	lr

08000290 <GPIO_ResetBits>:
 8000290:	8501      	strh	r1, [r0, #40]	; 0x28
 8000292:	4770      	bx	lr

08000294 <GPIO_WriteBit>:
 8000294:	2a00      	cmp	r2, #0
 8000296:	d101      	bne.n	800029c <GPIO_WriteBit+0x8>
 8000298:	8501      	strh	r1, [r0, #40]	; 0x28
 800029a:	4770      	bx	lr
 800029c:	6181      	str	r1, [r0, #24]
 800029e:	e7fc      	b.n	800029a <GPIO_WriteBit+0x6>

080002a0 <GPIO_Write>:
 80002a0:	8281      	strh	r1, [r0, #20]
 80002a2:	4770      	bx	lr

080002a4 <GPIO_PinAFConfig>:
 80002a4:	2307      	movs	r3, #7
 80002a6:	400b      	ands	r3, r1
 80002a8:	08c9      	lsrs	r1, r1, #3
 80002aa:	0089      	lsls	r1, r1, #2
 80002ac:	1840      	adds	r0, r0, r1
 80002ae:	b510      	push	{r4, lr}
 80002b0:	6a01      	ldr	r1, [r0, #32]
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	240f      	movs	r4, #15
 80002b6:	409c      	lsls	r4, r3
 80002b8:	43a1      	bics	r1, r4
 80002ba:	6201      	str	r1, [r0, #32]
 80002bc:	6a01      	ldr	r1, [r0, #32]
 80002be:	409a      	lsls	r2, r3
 80002c0:	1c13      	adds	r3, r2, #0
 80002c2:	430b      	orrs	r3, r1
 80002c4:	6203      	str	r3, [r0, #32]
 80002c6:	bd10      	pop	{r4, pc}

080002c8 <RCC_DeInit>:
 80002c8:	4b11      	ldr	r3, [pc, #68]	; (8000310 <RCC_DeInit+0x48>)
 80002ca:	2201      	movs	r2, #1
 80002cc:	6819      	ldr	r1, [r3, #0]
 80002ce:	4311      	orrs	r1, r2
 80002d0:	6019      	str	r1, [r3, #0]
 80002d2:	6858      	ldr	r0, [r3, #4]
 80002d4:	490f      	ldr	r1, [pc, #60]	; (8000314 <RCC_DeInit+0x4c>)
 80002d6:	4001      	ands	r1, r0
 80002d8:	6059      	str	r1, [r3, #4]
 80002da:	6818      	ldr	r0, [r3, #0]
 80002dc:	490e      	ldr	r1, [pc, #56]	; (8000318 <RCC_DeInit+0x50>)
 80002de:	4001      	ands	r1, r0
 80002e0:	6019      	str	r1, [r3, #0]
 80002e2:	6818      	ldr	r0, [r3, #0]
 80002e4:	490d      	ldr	r1, [pc, #52]	; (800031c <RCC_DeInit+0x54>)
 80002e6:	4001      	ands	r1, r0
 80002e8:	6019      	str	r1, [r3, #0]
 80002ea:	6858      	ldr	r0, [r3, #4]
 80002ec:	490c      	ldr	r1, [pc, #48]	; (8000320 <RCC_DeInit+0x58>)
 80002ee:	4001      	ands	r1, r0
 80002f0:	6059      	str	r1, [r3, #4]
 80002f2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80002f4:	200f      	movs	r0, #15
 80002f6:	4381      	bics	r1, r0
 80002f8:	62d9      	str	r1, [r3, #44]	; 0x2c
 80002fa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80002fc:	4909      	ldr	r1, [pc, #36]	; (8000324 <RCC_DeInit+0x5c>)
 80002fe:	4001      	ands	r1, r0
 8000300:	6319      	str	r1, [r3, #48]	; 0x30
 8000302:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000304:	4391      	bics	r1, r2
 8000306:	2200      	movs	r2, #0
 8000308:	6359      	str	r1, [r3, #52]	; 0x34
 800030a:	609a      	str	r2, [r3, #8]
 800030c:	4770      	bx	lr
 800030e:	46c0      	nop			; (mov r8, r8)
 8000310:	40021000 	.word	0x40021000
 8000314:	f8ffb80c 	.word	0xf8ffb80c
 8000318:	fef6ffff 	.word	0xfef6ffff
 800031c:	fffbffff 	.word	0xfffbffff
 8000320:	ffc0ffff 	.word	0xffc0ffff
 8000324:	fffffeac 	.word	0xfffffeac

08000328 <RCC_HSEConfig>:
 8000328:	4b02      	ldr	r3, [pc, #8]	; (8000334 <RCC_HSEConfig+0xc>)
 800032a:	2200      	movs	r2, #0
 800032c:	701a      	strb	r2, [r3, #0]
 800032e:	7018      	strb	r0, [r3, #0]
 8000330:	4770      	bx	lr
 8000332:	46c0      	nop			; (mov r8, r8)
 8000334:	40021002 	.word	0x40021002

08000338 <RCC_AdjustHSICalibrationValue>:
 8000338:	4b03      	ldr	r3, [pc, #12]	; (8000348 <RCC_AdjustHSICalibrationValue+0x10>)
 800033a:	21f8      	movs	r1, #248	; 0xf8
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	00c0      	lsls	r0, r0, #3
 8000340:	438a      	bics	r2, r1
 8000342:	4310      	orrs	r0, r2
 8000344:	6018      	str	r0, [r3, #0]
 8000346:	4770      	bx	lr
 8000348:	40021000 	.word	0x40021000

0800034c <RCC_HSICmd>:
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <RCC_HSICmd+0x1c>)
 800034e:	2800      	cmp	r0, #0
 8000350:	d104      	bne.n	800035c <RCC_HSICmd+0x10>
 8000352:	681a      	ldr	r2, [r3, #0]
 8000354:	2101      	movs	r1, #1
 8000356:	438a      	bics	r2, r1
 8000358:	601a      	str	r2, [r3, #0]
 800035a:	4770      	bx	lr
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	2201      	movs	r2, #1
 8000360:	430a      	orrs	r2, r1
 8000362:	601a      	str	r2, [r3, #0]
 8000364:	e7f9      	b.n	800035a <RCC_HSICmd+0xe>
 8000366:	46c0      	nop			; (mov r8, r8)
 8000368:	40021000 	.word	0x40021000

0800036c <RCC_AdjustHSI14CalibrationValue>:
 800036c:	4b03      	ldr	r3, [pc, #12]	; (800037c <RCC_AdjustHSI14CalibrationValue+0x10>)
 800036e:	21f8      	movs	r1, #248	; 0xf8
 8000370:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000372:	00c0      	lsls	r0, r0, #3
 8000374:	438a      	bics	r2, r1
 8000376:	4310      	orrs	r0, r2
 8000378:	6358      	str	r0, [r3, #52]	; 0x34
 800037a:	4770      	bx	lr
 800037c:	40021000 	.word	0x40021000

08000380 <RCC_HSI14Cmd>:
 8000380:	4b06      	ldr	r3, [pc, #24]	; (800039c <RCC_HSI14Cmd+0x1c>)
 8000382:	2800      	cmp	r0, #0
 8000384:	d104      	bne.n	8000390 <RCC_HSI14Cmd+0x10>
 8000386:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000388:	2101      	movs	r1, #1
 800038a:	438a      	bics	r2, r1
 800038c:	635a      	str	r2, [r3, #52]	; 0x34
 800038e:	4770      	bx	lr
 8000390:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000392:	2201      	movs	r2, #1
 8000394:	430a      	orrs	r2, r1
 8000396:	635a      	str	r2, [r3, #52]	; 0x34
 8000398:	e7f9      	b.n	800038e <RCC_HSI14Cmd+0xe>
 800039a:	46c0      	nop			; (mov r8, r8)
 800039c:	40021000 	.word	0x40021000

080003a0 <RCC_HSI14ADCRequestCmd>:
 80003a0:	4b06      	ldr	r3, [pc, #24]	; (80003bc <RCC_HSI14ADCRequestCmd+0x1c>)
 80003a2:	2800      	cmp	r0, #0
 80003a4:	d104      	bne.n	80003b0 <RCC_HSI14ADCRequestCmd+0x10>
 80003a6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80003a8:	2204      	movs	r2, #4
 80003aa:	430a      	orrs	r2, r1
 80003ac:	635a      	str	r2, [r3, #52]	; 0x34
 80003ae:	4770      	bx	lr
 80003b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80003b2:	2104      	movs	r1, #4
 80003b4:	438a      	bics	r2, r1
 80003b6:	635a      	str	r2, [r3, #52]	; 0x34
 80003b8:	e7f9      	b.n	80003ae <RCC_HSI14ADCRequestCmd+0xe>
 80003ba:	46c0      	nop			; (mov r8, r8)
 80003bc:	40021000 	.word	0x40021000

080003c0 <RCC_LSEConfig>:
 80003c0:	4b06      	ldr	r3, [pc, #24]	; (80003dc <RCC_LSEConfig+0x1c>)
 80003c2:	2101      	movs	r1, #1
 80003c4:	6a1a      	ldr	r2, [r3, #32]
 80003c6:	438a      	bics	r2, r1
 80003c8:	621a      	str	r2, [r3, #32]
 80003ca:	6a1a      	ldr	r2, [r3, #32]
 80003cc:	2104      	movs	r1, #4
 80003ce:	438a      	bics	r2, r1
 80003d0:	621a      	str	r2, [r3, #32]
 80003d2:	6a1a      	ldr	r2, [r3, #32]
 80003d4:	4310      	orrs	r0, r2
 80003d6:	6218      	str	r0, [r3, #32]
 80003d8:	4770      	bx	lr
 80003da:	46c0      	nop			; (mov r8, r8)
 80003dc:	40021000 	.word	0x40021000

080003e0 <RCC_LSEDriveConfig>:
 80003e0:	4b04      	ldr	r3, [pc, #16]	; (80003f4 <RCC_LSEDriveConfig+0x14>)
 80003e2:	2118      	movs	r1, #24
 80003e4:	6a1a      	ldr	r2, [r3, #32]
 80003e6:	438a      	bics	r2, r1
 80003e8:	621a      	str	r2, [r3, #32]
 80003ea:	6a1a      	ldr	r2, [r3, #32]
 80003ec:	4310      	orrs	r0, r2
 80003ee:	6218      	str	r0, [r3, #32]
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			; (mov r8, r8)
 80003f4:	40021000 	.word	0x40021000

080003f8 <RCC_LSICmd>:
 80003f8:	4b06      	ldr	r3, [pc, #24]	; (8000414 <RCC_LSICmd+0x1c>)
 80003fa:	2800      	cmp	r0, #0
 80003fc:	d104      	bne.n	8000408 <RCC_LSICmd+0x10>
 80003fe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000400:	2101      	movs	r1, #1
 8000402:	438a      	bics	r2, r1
 8000404:	625a      	str	r2, [r3, #36]	; 0x24
 8000406:	4770      	bx	lr
 8000408:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800040a:	2201      	movs	r2, #1
 800040c:	430a      	orrs	r2, r1
 800040e:	625a      	str	r2, [r3, #36]	; 0x24
 8000410:	e7f9      	b.n	8000406 <RCC_LSICmd+0xe>
 8000412:	46c0      	nop			; (mov r8, r8)
 8000414:	40021000 	.word	0x40021000

08000418 <RCC_PLLConfig>:
 8000418:	4b05      	ldr	r3, [pc, #20]	; (8000430 <RCC_PLLConfig+0x18>)
 800041a:	b510      	push	{r4, lr}
 800041c:	4a05      	ldr	r2, [pc, #20]	; (8000434 <RCC_PLLConfig+0x1c>)
 800041e:	685c      	ldr	r4, [r3, #4]
 8000420:	4022      	ands	r2, r4
 8000422:	605a      	str	r2, [r3, #4]
 8000424:	685a      	ldr	r2, [r3, #4]
 8000426:	4311      	orrs	r1, r2
 8000428:	4308      	orrs	r0, r1
 800042a:	6058      	str	r0, [r3, #4]
 800042c:	bd10      	pop	{r4, pc}
 800042e:	46c0      	nop			; (mov r8, r8)
 8000430:	40021000 	.word	0x40021000
 8000434:	ffc2ffff 	.word	0xffc2ffff

08000438 <RCC_PLLCmd>:
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <RCC_PLLCmd+0x1c>)
 800043a:	6819      	ldr	r1, [r3, #0]
 800043c:	2800      	cmp	r0, #0
 800043e:	d103      	bne.n	8000448 <RCC_PLLCmd+0x10>
 8000440:	4a05      	ldr	r2, [pc, #20]	; (8000458 <RCC_PLLCmd+0x20>)
 8000442:	400a      	ands	r2, r1
 8000444:	601a      	str	r2, [r3, #0]
 8000446:	4770      	bx	lr
 8000448:	2280      	movs	r2, #128	; 0x80
 800044a:	0452      	lsls	r2, r2, #17
 800044c:	430a      	orrs	r2, r1
 800044e:	601a      	str	r2, [r3, #0]
 8000450:	e7f9      	b.n	8000446 <RCC_PLLCmd+0xe>
 8000452:	46c0      	nop			; (mov r8, r8)
 8000454:	40021000 	.word	0x40021000
 8000458:	feffffff 	.word	0xfeffffff

0800045c <RCC_PREDIV1Config>:
 800045c:	4b03      	ldr	r3, [pc, #12]	; (800046c <RCC_PREDIV1Config+0x10>)
 800045e:	210f      	movs	r1, #15
 8000460:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000462:	438a      	bics	r2, r1
 8000464:	4310      	orrs	r0, r2
 8000466:	62d8      	str	r0, [r3, #44]	; 0x2c
 8000468:	4770      	bx	lr
 800046a:	46c0      	nop			; (mov r8, r8)
 800046c:	40021000 	.word	0x40021000

08000470 <RCC_ClockSecuritySystemCmd>:
 8000470:	4b06      	ldr	r3, [pc, #24]	; (800048c <RCC_ClockSecuritySystemCmd+0x1c>)
 8000472:	6819      	ldr	r1, [r3, #0]
 8000474:	2800      	cmp	r0, #0
 8000476:	d103      	bne.n	8000480 <RCC_ClockSecuritySystemCmd+0x10>
 8000478:	4a05      	ldr	r2, [pc, #20]	; (8000490 <RCC_ClockSecuritySystemCmd+0x20>)
 800047a:	400a      	ands	r2, r1
 800047c:	601a      	str	r2, [r3, #0]
 800047e:	4770      	bx	lr
 8000480:	2280      	movs	r2, #128	; 0x80
 8000482:	0312      	lsls	r2, r2, #12
 8000484:	430a      	orrs	r2, r1
 8000486:	601a      	str	r2, [r3, #0]
 8000488:	e7f9      	b.n	800047e <RCC_ClockSecuritySystemCmd+0xe>
 800048a:	46c0      	nop			; (mov r8, r8)
 800048c:	40021000 	.word	0x40021000
 8000490:	fff7ffff 	.word	0xfff7ffff

08000494 <RCC_MCOConfig>:
 8000494:	4b01      	ldr	r3, [pc, #4]	; (800049c <RCC_MCOConfig+0x8>)
 8000496:	7018      	strb	r0, [r3, #0]
 8000498:	4770      	bx	lr
 800049a:	46c0      	nop			; (mov r8, r8)
 800049c:	40021007 	.word	0x40021007

080004a0 <RCC_SYSCLKConfig>:
 80004a0:	4b03      	ldr	r3, [pc, #12]	; (80004b0 <RCC_SYSCLKConfig+0x10>)
 80004a2:	2103      	movs	r1, #3
 80004a4:	685a      	ldr	r2, [r3, #4]
 80004a6:	438a      	bics	r2, r1
 80004a8:	4310      	orrs	r0, r2
 80004aa:	6058      	str	r0, [r3, #4]
 80004ac:	4770      	bx	lr
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	40021000 	.word	0x40021000

080004b4 <RCC_GetSYSCLKSource>:
 80004b4:	4b02      	ldr	r3, [pc, #8]	; (80004c0 <RCC_GetSYSCLKSource+0xc>)
 80004b6:	200c      	movs	r0, #12
 80004b8:	685b      	ldr	r3, [r3, #4]
 80004ba:	4018      	ands	r0, r3
 80004bc:	4770      	bx	lr
 80004be:	46c0      	nop			; (mov r8, r8)
 80004c0:	40021000 	.word	0x40021000

080004c4 <RCC_HCLKConfig>:
 80004c4:	4b03      	ldr	r3, [pc, #12]	; (80004d4 <RCC_HCLKConfig+0x10>)
 80004c6:	21f0      	movs	r1, #240	; 0xf0
 80004c8:	685a      	ldr	r2, [r3, #4]
 80004ca:	438a      	bics	r2, r1
 80004cc:	4310      	orrs	r0, r2
 80004ce:	6058      	str	r0, [r3, #4]
 80004d0:	4770      	bx	lr
 80004d2:	46c0      	nop			; (mov r8, r8)
 80004d4:	40021000 	.word	0x40021000

080004d8 <RCC_PCLKConfig>:
 80004d8:	4b03      	ldr	r3, [pc, #12]	; (80004e8 <RCC_PCLKConfig+0x10>)
 80004da:	4a04      	ldr	r2, [pc, #16]	; (80004ec <RCC_PCLKConfig+0x14>)
 80004dc:	6859      	ldr	r1, [r3, #4]
 80004de:	400a      	ands	r2, r1
 80004e0:	4310      	orrs	r0, r2
 80004e2:	6058      	str	r0, [r3, #4]
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)
 80004e8:	40021000 	.word	0x40021000
 80004ec:	fffff8ff 	.word	0xfffff8ff

080004f0 <RCC_ADCCLKConfig>:
 80004f0:	4b09      	ldr	r3, [pc, #36]	; (8000518 <RCC_ADCCLKConfig+0x28>)
 80004f2:	4a0a      	ldr	r2, [pc, #40]	; (800051c <RCC_ADCCLKConfig+0x2c>)
 80004f4:	6859      	ldr	r1, [r3, #4]
 80004f6:	400a      	ands	r2, r1
 80004f8:	605a      	str	r2, [r3, #4]
 80004fa:	6859      	ldr	r1, [r3, #4]
 80004fc:	0402      	lsls	r2, r0, #16
 80004fe:	0c12      	lsrs	r2, r2, #16
 8000500:	430a      	orrs	r2, r1
 8000502:	605a      	str	r2, [r3, #4]
 8000504:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000506:	4a06      	ldr	r2, [pc, #24]	; (8000520 <RCC_ADCCLKConfig+0x30>)
 8000508:	0c00      	lsrs	r0, r0, #16
 800050a:	400a      	ands	r2, r1
 800050c:	631a      	str	r2, [r3, #48]	; 0x30
 800050e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000510:	4310      	orrs	r0, r2
 8000512:	6318      	str	r0, [r3, #48]	; 0x30
 8000514:	4770      	bx	lr
 8000516:	46c0      	nop			; (mov r8, r8)
 8000518:	40021000 	.word	0x40021000
 800051c:	ffffbfff 	.word	0xffffbfff
 8000520:	fffffeff 	.word	0xfffffeff

08000524 <RCC_CECCLKConfig>:
 8000524:	4b04      	ldr	r3, [pc, #16]	; (8000538 <RCC_CECCLKConfig+0x14>)
 8000526:	2140      	movs	r1, #64	; 0x40
 8000528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800052a:	438a      	bics	r2, r1
 800052c:	631a      	str	r2, [r3, #48]	; 0x30
 800052e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000530:	4310      	orrs	r0, r2
 8000532:	6318      	str	r0, [r3, #48]	; 0x30
 8000534:	4770      	bx	lr
 8000536:	46c0      	nop			; (mov r8, r8)
 8000538:	40021000 	.word	0x40021000

0800053c <RCC_I2CCLKConfig>:
 800053c:	4b04      	ldr	r3, [pc, #16]	; (8000550 <RCC_I2CCLKConfig+0x14>)
 800053e:	2110      	movs	r1, #16
 8000540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000542:	438a      	bics	r2, r1
 8000544:	631a      	str	r2, [r3, #48]	; 0x30
 8000546:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000548:	4310      	orrs	r0, r2
 800054a:	6318      	str	r0, [r3, #48]	; 0x30
 800054c:	4770      	bx	lr
 800054e:	46c0      	nop			; (mov r8, r8)
 8000550:	40021000 	.word	0x40021000

08000554 <RCC_USARTCLKConfig>:
 8000554:	4b04      	ldr	r3, [pc, #16]	; (8000568 <RCC_USARTCLKConfig+0x14>)
 8000556:	2103      	movs	r1, #3
 8000558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800055a:	438a      	bics	r2, r1
 800055c:	631a      	str	r2, [r3, #48]	; 0x30
 800055e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000560:	4310      	orrs	r0, r2
 8000562:	6318      	str	r0, [r3, #48]	; 0x30
 8000564:	4770      	bx	lr
 8000566:	46c0      	nop			; (mov r8, r8)
 8000568:	40021000 	.word	0x40021000

0800056c <RCC_GetClocksFreq>:
 800056c:	4a3b      	ldr	r2, [pc, #236]	; (800065c <RCC_GetClocksFreq+0xf0>)
 800056e:	b538      	push	{r3, r4, r5, lr}
 8000570:	6853      	ldr	r3, [r2, #4]
 8000572:	210c      	movs	r1, #12
 8000574:	1c04      	adds	r4, r0, #0
 8000576:	400b      	ands	r3, r1
 8000578:	2b04      	cmp	r3, #4
 800057a:	d001      	beq.n	8000580 <RCC_GetClocksFreq+0x14>
 800057c:	2b08      	cmp	r3, #8
 800057e:	d052      	beq.n	8000626 <RCC_GetClocksFreq+0xba>
 8000580:	4837      	ldr	r0, [pc, #220]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 8000582:	6020      	str	r0, [r4, #0]
 8000584:	4b35      	ldr	r3, [pc, #212]	; (800065c <RCC_GetClocksFreq+0xf0>)
 8000586:	4937      	ldr	r1, [pc, #220]	; (8000664 <RCC_GetClocksFreq+0xf8>)
 8000588:	685a      	ldr	r2, [r3, #4]
 800058a:	1c05      	adds	r5, r0, #0
 800058c:	0612      	lsls	r2, r2, #24
 800058e:	0f12      	lsrs	r2, r2, #28
 8000590:	5c8a      	ldrb	r2, [r1, r2]
 8000592:	40d5      	lsrs	r5, r2
 8000594:	6065      	str	r5, [r4, #4]
 8000596:	1c2a      	adds	r2, r5, #0
 8000598:	685d      	ldr	r5, [r3, #4]
 800059a:	056d      	lsls	r5, r5, #21
 800059c:	0f6d      	lsrs	r5, r5, #29
 800059e:	5d49      	ldrb	r1, [r1, r5]
 80005a0:	40ca      	lsrs	r2, r1
 80005a2:	60a2      	str	r2, [r4, #8]
 80005a4:	1c11      	adds	r1, r2, #0
 80005a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005a8:	05d5      	lsls	r5, r2, #23
 80005aa:	d421      	bmi.n	80005f0 <RCC_GetClocksFreq+0x84>
 80005ac:	4b2e      	ldr	r3, [pc, #184]	; (8000668 <RCC_GetClocksFreq+0xfc>)
 80005ae:	60e3      	str	r3, [r4, #12]
 80005b0:	4b2a      	ldr	r3, [pc, #168]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005b4:	065d      	lsls	r5, r3, #25
 80005b6:	d424      	bmi.n	8000602 <RCC_GetClocksFreq+0x96>
 80005b8:	4b2c      	ldr	r3, [pc, #176]	; (800066c <RCC_GetClocksFreq+0x100>)
 80005ba:	6123      	str	r3, [r4, #16]
 80005bc:	4b27      	ldr	r3, [pc, #156]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c0:	06da      	lsls	r2, r3, #27
 80005c2:	d425      	bmi.n	8000610 <RCC_GetClocksFreq+0xa4>
 80005c4:	4b26      	ldr	r3, [pc, #152]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 80005c6:	4a25      	ldr	r2, [pc, #148]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005c8:	6163      	str	r3, [r4, #20]
 80005ca:	6b15      	ldr	r5, [r2, #48]	; 0x30
 80005cc:	2303      	movs	r3, #3
 80005ce:	422b      	tst	r3, r5
 80005d0:	d024      	beq.n	800061c <RCC_GetClocksFreq+0xb0>
 80005d2:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80005d4:	4019      	ands	r1, r3
 80005d6:	2901      	cmp	r1, #1
 80005d8:	d03a      	beq.n	8000650 <RCC_GetClocksFreq+0xe4>
 80005da:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80005dc:	4019      	ands	r1, r3
 80005de:	2902      	cmp	r1, #2
 80005e0:	d038      	beq.n	8000654 <RCC_GetClocksFreq+0xe8>
 80005e2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80005e4:	4013      	ands	r3, r2
 80005e6:	2b03      	cmp	r3, #3
 80005e8:	d101      	bne.n	80005ee <RCC_GetClocksFreq+0x82>
 80005ea:	4b1d      	ldr	r3, [pc, #116]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 80005ec:	61a3      	str	r3, [r4, #24]
 80005ee:	bd38      	pop	{r3, r4, r5, pc}
 80005f0:	685b      	ldr	r3, [r3, #4]
 80005f2:	045a      	lsls	r2, r3, #17
 80005f4:	d414      	bmi.n	8000620 <RCC_GetClocksFreq+0xb4>
 80005f6:	084b      	lsrs	r3, r1, #1
 80005f8:	60e3      	str	r3, [r4, #12]
 80005fa:	4b18      	ldr	r3, [pc, #96]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005fe:	065d      	lsls	r5, r3, #25
 8000600:	d5da      	bpl.n	80005b8 <RCC_GetClocksFreq+0x4c>
 8000602:	2380      	movs	r3, #128	; 0x80
 8000604:	021b      	lsls	r3, r3, #8
 8000606:	6123      	str	r3, [r4, #16]
 8000608:	4b14      	ldr	r3, [pc, #80]	; (800065c <RCC_GetClocksFreq+0xf0>)
 800060a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060c:	06da      	lsls	r2, r3, #27
 800060e:	d5d9      	bpl.n	80005c4 <RCC_GetClocksFreq+0x58>
 8000610:	4a12      	ldr	r2, [pc, #72]	; (800065c <RCC_GetClocksFreq+0xf0>)
 8000612:	6160      	str	r0, [r4, #20]
 8000614:	6b15      	ldr	r5, [r2, #48]	; 0x30
 8000616:	2303      	movs	r3, #3
 8000618:	422b      	tst	r3, r5
 800061a:	d1da      	bne.n	80005d2 <RCC_GetClocksFreq+0x66>
 800061c:	61a1      	str	r1, [r4, #24]
 800061e:	e7e6      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 8000620:	088b      	lsrs	r3, r1, #2
 8000622:	60e3      	str	r3, [r4, #12]
 8000624:	e7c4      	b.n	80005b0 <RCC_GetClocksFreq+0x44>
 8000626:	6855      	ldr	r5, [r2, #4]
 8000628:	6853      	ldr	r3, [r2, #4]
 800062a:	02ad      	lsls	r5, r5, #10
 800062c:	0f2d      	lsrs	r5, r5, #28
 800062e:	3502      	adds	r5, #2
 8000630:	03d9      	lsls	r1, r3, #15
 8000632:	d403      	bmi.n	800063c <RCC_GetClocksFreq+0xd0>
 8000634:	480e      	ldr	r0, [pc, #56]	; (8000670 <RCC_GetClocksFreq+0x104>)
 8000636:	4368      	muls	r0, r5
 8000638:	6020      	str	r0, [r4, #0]
 800063a:	e7a3      	b.n	8000584 <RCC_GetClocksFreq+0x18>
 800063c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800063e:	210f      	movs	r1, #15
 8000640:	4019      	ands	r1, r3
 8000642:	3101      	adds	r1, #1
 8000644:	4806      	ldr	r0, [pc, #24]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 8000646:	f000 fb6d 	bl	8000d24 <__aeabi_uidiv>
 800064a:	4368      	muls	r0, r5
 800064c:	6020      	str	r0, [r4, #0]
 800064e:	e799      	b.n	8000584 <RCC_GetClocksFreq+0x18>
 8000650:	61a0      	str	r0, [r4, #24]
 8000652:	e7cc      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 8000654:	2380      	movs	r3, #128	; 0x80
 8000656:	021b      	lsls	r3, r3, #8
 8000658:	61a3      	str	r3, [r4, #24]
 800065a:	e7c8      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 800065c:	40021000 	.word	0x40021000
 8000660:	007a1200 	.word	0x007a1200
 8000664:	20000000 	.word	0x20000000
 8000668:	00d59f80 	.word	0x00d59f80
 800066c:	00008012 	.word	0x00008012
 8000670:	003d0900 	.word	0x003d0900

08000674 <RCC_RTCCLKConfig>:
 8000674:	4b02      	ldr	r3, [pc, #8]	; (8000680 <RCC_RTCCLKConfig+0xc>)
 8000676:	6a1a      	ldr	r2, [r3, #32]
 8000678:	4310      	orrs	r0, r2
 800067a:	6218      	str	r0, [r3, #32]
 800067c:	4770      	bx	lr
 800067e:	46c0      	nop			; (mov r8, r8)
 8000680:	40021000 	.word	0x40021000

08000684 <RCC_RTCCLKCmd>:
 8000684:	4b06      	ldr	r3, [pc, #24]	; (80006a0 <RCC_RTCCLKCmd+0x1c>)
 8000686:	6a19      	ldr	r1, [r3, #32]
 8000688:	2800      	cmp	r0, #0
 800068a:	d103      	bne.n	8000694 <RCC_RTCCLKCmd+0x10>
 800068c:	4a05      	ldr	r2, [pc, #20]	; (80006a4 <RCC_RTCCLKCmd+0x20>)
 800068e:	400a      	ands	r2, r1
 8000690:	621a      	str	r2, [r3, #32]
 8000692:	4770      	bx	lr
 8000694:	2280      	movs	r2, #128	; 0x80
 8000696:	0212      	lsls	r2, r2, #8
 8000698:	430a      	orrs	r2, r1
 800069a:	621a      	str	r2, [r3, #32]
 800069c:	e7f9      	b.n	8000692 <RCC_RTCCLKCmd+0xe>
 800069e:	46c0      	nop			; (mov r8, r8)
 80006a0:	40021000 	.word	0x40021000
 80006a4:	ffff7fff 	.word	0xffff7fff

080006a8 <RCC_BackupResetCmd>:
 80006a8:	4b06      	ldr	r3, [pc, #24]	; (80006c4 <RCC_BackupResetCmd+0x1c>)
 80006aa:	6a19      	ldr	r1, [r3, #32]
 80006ac:	2800      	cmp	r0, #0
 80006ae:	d103      	bne.n	80006b8 <RCC_BackupResetCmd+0x10>
 80006b0:	4a05      	ldr	r2, [pc, #20]	; (80006c8 <RCC_BackupResetCmd+0x20>)
 80006b2:	400a      	ands	r2, r1
 80006b4:	621a      	str	r2, [r3, #32]
 80006b6:	4770      	bx	lr
 80006b8:	2280      	movs	r2, #128	; 0x80
 80006ba:	0252      	lsls	r2, r2, #9
 80006bc:	430a      	orrs	r2, r1
 80006be:	621a      	str	r2, [r3, #32]
 80006c0:	e7f9      	b.n	80006b6 <RCC_BackupResetCmd+0xe>
 80006c2:	46c0      	nop			; (mov r8, r8)
 80006c4:	40021000 	.word	0x40021000
 80006c8:	fffeffff 	.word	0xfffeffff

080006cc <RCC_AHBPeriphClockCmd>:
 80006cc:	4b04      	ldr	r3, [pc, #16]	; (80006e0 <RCC_AHBPeriphClockCmd+0x14>)
 80006ce:	695a      	ldr	r2, [r3, #20]
 80006d0:	2900      	cmp	r1, #0
 80006d2:	d102      	bne.n	80006da <RCC_AHBPeriphClockCmd+0xe>
 80006d4:	4382      	bics	r2, r0
 80006d6:	615a      	str	r2, [r3, #20]
 80006d8:	4770      	bx	lr
 80006da:	4310      	orrs	r0, r2
 80006dc:	6158      	str	r0, [r3, #20]
 80006de:	e7fb      	b.n	80006d8 <RCC_AHBPeriphClockCmd+0xc>
 80006e0:	40021000 	.word	0x40021000

080006e4 <RCC_APB2PeriphClockCmd>:
 80006e4:	4b04      	ldr	r3, [pc, #16]	; (80006f8 <RCC_APB2PeriphClockCmd+0x14>)
 80006e6:	699a      	ldr	r2, [r3, #24]
 80006e8:	2900      	cmp	r1, #0
 80006ea:	d102      	bne.n	80006f2 <RCC_APB2PeriphClockCmd+0xe>
 80006ec:	4382      	bics	r2, r0
 80006ee:	619a      	str	r2, [r3, #24]
 80006f0:	4770      	bx	lr
 80006f2:	4310      	orrs	r0, r2
 80006f4:	6198      	str	r0, [r3, #24]
 80006f6:	e7fb      	b.n	80006f0 <RCC_APB2PeriphClockCmd+0xc>
 80006f8:	40021000 	.word	0x40021000

080006fc <RCC_APB1PeriphClockCmd>:
 80006fc:	4b04      	ldr	r3, [pc, #16]	; (8000710 <RCC_APB1PeriphClockCmd+0x14>)
 80006fe:	69da      	ldr	r2, [r3, #28]
 8000700:	2900      	cmp	r1, #0
 8000702:	d102      	bne.n	800070a <RCC_APB1PeriphClockCmd+0xe>
 8000704:	4382      	bics	r2, r0
 8000706:	61da      	str	r2, [r3, #28]
 8000708:	4770      	bx	lr
 800070a:	4310      	orrs	r0, r2
 800070c:	61d8      	str	r0, [r3, #28]
 800070e:	e7fb      	b.n	8000708 <RCC_APB1PeriphClockCmd+0xc>
 8000710:	40021000 	.word	0x40021000

08000714 <RCC_AHBPeriphResetCmd>:
 8000714:	4b04      	ldr	r3, [pc, #16]	; (8000728 <RCC_AHBPeriphResetCmd+0x14>)
 8000716:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000718:	2900      	cmp	r1, #0
 800071a:	d102      	bne.n	8000722 <RCC_AHBPeriphResetCmd+0xe>
 800071c:	4382      	bics	r2, r0
 800071e:	629a      	str	r2, [r3, #40]	; 0x28
 8000720:	4770      	bx	lr
 8000722:	4310      	orrs	r0, r2
 8000724:	6298      	str	r0, [r3, #40]	; 0x28
 8000726:	e7fb      	b.n	8000720 <RCC_AHBPeriphResetCmd+0xc>
 8000728:	40021000 	.word	0x40021000

0800072c <RCC_APB2PeriphResetCmd>:
 800072c:	4b04      	ldr	r3, [pc, #16]	; (8000740 <RCC_APB2PeriphResetCmd+0x14>)
 800072e:	68da      	ldr	r2, [r3, #12]
 8000730:	2900      	cmp	r1, #0
 8000732:	d102      	bne.n	800073a <RCC_APB2PeriphResetCmd+0xe>
 8000734:	4382      	bics	r2, r0
 8000736:	60da      	str	r2, [r3, #12]
 8000738:	4770      	bx	lr
 800073a:	4310      	orrs	r0, r2
 800073c:	60d8      	str	r0, [r3, #12]
 800073e:	e7fb      	b.n	8000738 <RCC_APB2PeriphResetCmd+0xc>
 8000740:	40021000 	.word	0x40021000

08000744 <RCC_APB1PeriphResetCmd>:
 8000744:	4b04      	ldr	r3, [pc, #16]	; (8000758 <RCC_APB1PeriphResetCmd+0x14>)
 8000746:	691a      	ldr	r2, [r3, #16]
 8000748:	2900      	cmp	r1, #0
 800074a:	d102      	bne.n	8000752 <RCC_APB1PeriphResetCmd+0xe>
 800074c:	4382      	bics	r2, r0
 800074e:	611a      	str	r2, [r3, #16]
 8000750:	4770      	bx	lr
 8000752:	4310      	orrs	r0, r2
 8000754:	6118      	str	r0, [r3, #16]
 8000756:	e7fb      	b.n	8000750 <RCC_APB1PeriphResetCmd+0xc>
 8000758:	40021000 	.word	0x40021000

0800075c <RCC_ITConfig>:
 800075c:	4b04      	ldr	r3, [pc, #16]	; (8000770 <RCC_ITConfig+0x14>)
 800075e:	781a      	ldrb	r2, [r3, #0]
 8000760:	2900      	cmp	r1, #0
 8000762:	d102      	bne.n	800076a <RCC_ITConfig+0xe>
 8000764:	4382      	bics	r2, r0
 8000766:	701a      	strb	r2, [r3, #0]
 8000768:	4770      	bx	lr
 800076a:	4310      	orrs	r0, r2
 800076c:	7018      	strb	r0, [r3, #0]
 800076e:	e7fb      	b.n	8000768 <RCC_ITConfig+0xc>
 8000770:	40021009 	.word	0x40021009

08000774 <RCC_GetFlagStatus>:
 8000774:	0943      	lsrs	r3, r0, #5
 8000776:	d108      	bne.n	800078a <RCC_GetFlagStatus+0x16>
 8000778:	4b0a      	ldr	r3, [pc, #40]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 800077a:	681a      	ldr	r2, [r3, #0]
 800077c:	231f      	movs	r3, #31
 800077e:	4018      	ands	r0, r3
 8000780:	40c2      	lsrs	r2, r0
 8000782:	1c10      	adds	r0, r2, #0
 8000784:	2301      	movs	r3, #1
 8000786:	4018      	ands	r0, r3
 8000788:	4770      	bx	lr
 800078a:	2b01      	cmp	r3, #1
 800078c:	d004      	beq.n	8000798 <RCC_GetFlagStatus+0x24>
 800078e:	2b02      	cmp	r3, #2
 8000790:	d005      	beq.n	800079e <RCC_GetFlagStatus+0x2a>
 8000792:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 8000794:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000796:	e7f1      	b.n	800077c <RCC_GetFlagStatus+0x8>
 8000798:	4b02      	ldr	r3, [pc, #8]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 800079a:	6a1a      	ldr	r2, [r3, #32]
 800079c:	e7ee      	b.n	800077c <RCC_GetFlagStatus+0x8>
 800079e:	4b01      	ldr	r3, [pc, #4]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 80007a0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80007a2:	e7eb      	b.n	800077c <RCC_GetFlagStatus+0x8>
 80007a4:	40021000 	.word	0x40021000

080007a8 <RCC_WaitForHSEStartUp>:
 80007a8:	b510      	push	{r4, lr}
 80007aa:	2300      	movs	r3, #0
 80007ac:	b082      	sub	sp, #8
 80007ae:	24a0      	movs	r4, #160	; 0xa0
 80007b0:	9301      	str	r3, [sp, #4]
 80007b2:	00e4      	lsls	r4, r4, #3
 80007b4:	e001      	b.n	80007ba <RCC_WaitForHSEStartUp+0x12>
 80007b6:	2800      	cmp	r0, #0
 80007b8:	d108      	bne.n	80007cc <RCC_WaitForHSEStartUp+0x24>
 80007ba:	2011      	movs	r0, #17
 80007bc:	f7ff ffda 	bl	8000774 <RCC_GetFlagStatus>
 80007c0:	9b01      	ldr	r3, [sp, #4]
 80007c2:	3301      	adds	r3, #1
 80007c4:	9301      	str	r3, [sp, #4]
 80007c6:	9b01      	ldr	r3, [sp, #4]
 80007c8:	42a3      	cmp	r3, r4
 80007ca:	d1f4      	bne.n	80007b6 <RCC_WaitForHSEStartUp+0xe>
 80007cc:	2011      	movs	r0, #17
 80007ce:	f7ff ffd1 	bl	8000774 <RCC_GetFlagStatus>
 80007d2:	1e43      	subs	r3, r0, #1
 80007d4:	4198      	sbcs	r0, r3
 80007d6:	b2c0      	uxtb	r0, r0
 80007d8:	b002      	add	sp, #8
 80007da:	bd10      	pop	{r4, pc}

080007dc <RCC_ClearFlag>:
 80007dc:	4b03      	ldr	r3, [pc, #12]	; (80007ec <RCC_ClearFlag+0x10>)
 80007de:	2280      	movs	r2, #128	; 0x80
 80007e0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80007e2:	0452      	lsls	r2, r2, #17
 80007e4:	430a      	orrs	r2, r1
 80007e6:	625a      	str	r2, [r3, #36]	; 0x24
 80007e8:	4770      	bx	lr
 80007ea:	46c0      	nop			; (mov r8, r8)
 80007ec:	40021000 	.word	0x40021000

080007f0 <RCC_GetITStatus>:
 80007f0:	4b03      	ldr	r3, [pc, #12]	; (8000800 <RCC_GetITStatus+0x10>)
 80007f2:	689b      	ldr	r3, [r3, #8]
 80007f4:	4018      	ands	r0, r3
 80007f6:	1e43      	subs	r3, r0, #1
 80007f8:	4198      	sbcs	r0, r3
 80007fa:	b2c0      	uxtb	r0, r0
 80007fc:	4770      	bx	lr
 80007fe:	46c0      	nop			; (mov r8, r8)
 8000800:	40021000 	.word	0x40021000

08000804 <RCC_ClearITPendingBit>:
 8000804:	4b01      	ldr	r3, [pc, #4]	; (800080c <RCC_ClearITPendingBit+0x8>)
 8000806:	7018      	strb	r0, [r3, #0]
 8000808:	4770      	bx	lr
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	4002100a 	.word	0x4002100a

08000810 <USART_DeInit>:
 8000810:	b508      	push	{r3, lr}
 8000812:	4b0e      	ldr	r3, [pc, #56]	; (800084c <USART_DeInit+0x3c>)
 8000814:	4298      	cmp	r0, r3
 8000816:	d00e      	beq.n	8000836 <USART_DeInit+0x26>
 8000818:	4b0d      	ldr	r3, [pc, #52]	; (8000850 <USART_DeInit+0x40>)
 800081a:	4298      	cmp	r0, r3
 800081c:	d000      	beq.n	8000820 <USART_DeInit+0x10>
 800081e:	bd08      	pop	{r3, pc}
 8000820:	2080      	movs	r0, #128	; 0x80
 8000822:	0280      	lsls	r0, r0, #10
 8000824:	2101      	movs	r1, #1
 8000826:	f7ff ff8d 	bl	8000744 <RCC_APB1PeriphResetCmd>
 800082a:	2080      	movs	r0, #128	; 0x80
 800082c:	0280      	lsls	r0, r0, #10
 800082e:	2100      	movs	r1, #0
 8000830:	f7ff ff88 	bl	8000744 <RCC_APB1PeriphResetCmd>
 8000834:	e7f3      	b.n	800081e <USART_DeInit+0xe>
 8000836:	2080      	movs	r0, #128	; 0x80
 8000838:	01c0      	lsls	r0, r0, #7
 800083a:	2101      	movs	r1, #1
 800083c:	f7ff ff76 	bl	800072c <RCC_APB2PeriphResetCmd>
 8000840:	2080      	movs	r0, #128	; 0x80
 8000842:	01c0      	lsls	r0, r0, #7
 8000844:	2100      	movs	r1, #0
 8000846:	f7ff ff71 	bl	800072c <RCC_APB2PeriphResetCmd>
 800084a:	e7e8      	b.n	800081e <USART_DeInit+0xe>
 800084c:	40013800 	.word	0x40013800
 8000850:	40004400 	.word	0x40004400

08000854 <USART_Init>:
 8000854:	6803      	ldr	r3, [r0, #0]
 8000856:	2201      	movs	r2, #1
 8000858:	4393      	bics	r3, r2
 800085a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800085c:	6003      	str	r3, [r0, #0]
 800085e:	6842      	ldr	r2, [r0, #4]
 8000860:	4b1f      	ldr	r3, [pc, #124]	; (80008e0 <USART_Init+0x8c>)
 8000862:	1c0d      	adds	r5, r1, #0
 8000864:	6889      	ldr	r1, [r1, #8]
 8000866:	4013      	ands	r3, r2
 8000868:	430b      	orrs	r3, r1
 800086a:	6043      	str	r3, [r0, #4]
 800086c:	6802      	ldr	r2, [r0, #0]
 800086e:	4b1d      	ldr	r3, [pc, #116]	; (80008e4 <USART_Init+0x90>)
 8000870:	6869      	ldr	r1, [r5, #4]
 8000872:	401a      	ands	r2, r3
 8000874:	68eb      	ldr	r3, [r5, #12]
 8000876:	b089      	sub	sp, #36	; 0x24
 8000878:	430b      	orrs	r3, r1
 800087a:	6929      	ldr	r1, [r5, #16]
 800087c:	1c04      	adds	r4, r0, #0
 800087e:	430b      	orrs	r3, r1
 8000880:	4313      	orrs	r3, r2
 8000882:	6003      	str	r3, [r0, #0]
 8000884:	6882      	ldr	r2, [r0, #8]
 8000886:	4b18      	ldr	r3, [pc, #96]	; (80008e8 <USART_Init+0x94>)
 8000888:	4013      	ands	r3, r2
 800088a:	696a      	ldr	r2, [r5, #20]
 800088c:	4313      	orrs	r3, r2
 800088e:	6083      	str	r3, [r0, #8]
 8000890:	a801      	add	r0, sp, #4
 8000892:	f7ff fe6b 	bl	800056c <RCC_GetClocksFreq>
 8000896:	4b15      	ldr	r3, [pc, #84]	; (80008ec <USART_Init+0x98>)
 8000898:	429c      	cmp	r4, r3
 800089a:	d01f      	beq.n	80008dc <USART_Init+0x88>
 800089c:	9e03      	ldr	r6, [sp, #12]
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	0419      	lsls	r1, r3, #16
 80008a2:	d500      	bpl.n	80008a6 <USART_Init+0x52>
 80008a4:	0076      	lsls	r6, r6, #1
 80008a6:	682f      	ldr	r7, [r5, #0]
 80008a8:	1c30      	adds	r0, r6, #0
 80008aa:	1c39      	adds	r1, r7, #0
 80008ac:	f000 fa3a 	bl	8000d24 <__aeabi_uidiv>
 80008b0:	1c39      	adds	r1, r7, #0
 80008b2:	1c05      	adds	r5, r0, #0
 80008b4:	1c30      	adds	r0, r6, #0
 80008b6:	f000 fa79 	bl	8000dac <__aeabi_uidivmod>
 80008ba:	087f      	lsrs	r7, r7, #1
 80008bc:	2300      	movs	r3, #0
 80008be:	42b9      	cmp	r1, r7
 80008c0:	415b      	adcs	r3, r3
 80008c2:	18ed      	adds	r5, r5, r3
 80008c4:	6823      	ldr	r3, [r4, #0]
 80008c6:	041a      	lsls	r2, r3, #16
 80008c8:	d504      	bpl.n	80008d4 <USART_Init+0x80>
 80008ca:	4a09      	ldr	r2, [pc, #36]	; (80008f0 <USART_Init+0x9c>)
 80008cc:	072b      	lsls	r3, r5, #28
 80008ce:	0f5b      	lsrs	r3, r3, #29
 80008d0:	4015      	ands	r5, r2
 80008d2:	431d      	orrs	r5, r3
 80008d4:	b2ad      	uxth	r5, r5
 80008d6:	81a5      	strh	r5, [r4, #12]
 80008d8:	b009      	add	sp, #36	; 0x24
 80008da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008dc:	9e07      	ldr	r6, [sp, #28]
 80008de:	e7de      	b.n	800089e <USART_Init+0x4a>
 80008e0:	ffffcfff 	.word	0xffffcfff
 80008e4:	ffffe9f3 	.word	0xffffe9f3
 80008e8:	fffffcff 	.word	0xfffffcff
 80008ec:	40013800 	.word	0x40013800
 80008f0:	0000fff0 	.word	0x0000fff0

080008f4 <USART_StructInit>:
 80008f4:	2396      	movs	r3, #150	; 0x96
 80008f6:	019b      	lsls	r3, r3, #6
 80008f8:	6003      	str	r3, [r0, #0]
 80008fa:	220c      	movs	r2, #12
 80008fc:	2300      	movs	r3, #0
 80008fe:	6043      	str	r3, [r0, #4]
 8000900:	6083      	str	r3, [r0, #8]
 8000902:	60c3      	str	r3, [r0, #12]
 8000904:	6102      	str	r2, [r0, #16]
 8000906:	6143      	str	r3, [r0, #20]
 8000908:	4770      	bx	lr
 800090a:	46c0      	nop			; (mov r8, r8)

0800090c <USART_ClockInit>:
 800090c:	6842      	ldr	r2, [r0, #4]
 800090e:	4b06      	ldr	r3, [pc, #24]	; (8000928 <USART_ClockInit+0x1c>)
 8000910:	b510      	push	{r4, lr}
 8000912:	401a      	ands	r2, r3
 8000914:	680c      	ldr	r4, [r1, #0]
 8000916:	684b      	ldr	r3, [r1, #4]
 8000918:	4323      	orrs	r3, r4
 800091a:	688c      	ldr	r4, [r1, #8]
 800091c:	68c9      	ldr	r1, [r1, #12]
 800091e:	4323      	orrs	r3, r4
 8000920:	430b      	orrs	r3, r1
 8000922:	4313      	orrs	r3, r2
 8000924:	6043      	str	r3, [r0, #4]
 8000926:	bd10      	pop	{r4, pc}
 8000928:	fffff0ff 	.word	0xfffff0ff

0800092c <USART_ClockStructInit>:
 800092c:	2300      	movs	r3, #0
 800092e:	6003      	str	r3, [r0, #0]
 8000930:	6043      	str	r3, [r0, #4]
 8000932:	6083      	str	r3, [r0, #8]
 8000934:	60c3      	str	r3, [r0, #12]
 8000936:	4770      	bx	lr

08000938 <USART_Cmd>:
 8000938:	2900      	cmp	r1, #0
 800093a:	d104      	bne.n	8000946 <USART_Cmd+0xe>
 800093c:	6803      	ldr	r3, [r0, #0]
 800093e:	2201      	movs	r2, #1
 8000940:	4393      	bics	r3, r2
 8000942:	6003      	str	r3, [r0, #0]
 8000944:	4770      	bx	lr
 8000946:	6802      	ldr	r2, [r0, #0]
 8000948:	2301      	movs	r3, #1
 800094a:	4313      	orrs	r3, r2
 800094c:	6003      	str	r3, [r0, #0]
 800094e:	e7f9      	b.n	8000944 <USART_Cmd+0xc>

08000950 <USART_DirectionModeCmd>:
 8000950:	6803      	ldr	r3, [r0, #0]
 8000952:	2a00      	cmp	r2, #0
 8000954:	d102      	bne.n	800095c <USART_DirectionModeCmd+0xc>
 8000956:	438b      	bics	r3, r1
 8000958:	6003      	str	r3, [r0, #0]
 800095a:	4770      	bx	lr
 800095c:	4319      	orrs	r1, r3
 800095e:	6001      	str	r1, [r0, #0]
 8000960:	e7fb      	b.n	800095a <USART_DirectionModeCmd+0xa>
 8000962:	46c0      	nop			; (mov r8, r8)

08000964 <USART_OverSampling8Cmd>:
 8000964:	6802      	ldr	r2, [r0, #0]
 8000966:	2900      	cmp	r1, #0
 8000968:	d103      	bne.n	8000972 <USART_OverSampling8Cmd+0xe>
 800096a:	4b04      	ldr	r3, [pc, #16]	; (800097c <USART_OverSampling8Cmd+0x18>)
 800096c:	4013      	ands	r3, r2
 800096e:	6003      	str	r3, [r0, #0]
 8000970:	4770      	bx	lr
 8000972:	2380      	movs	r3, #128	; 0x80
 8000974:	021b      	lsls	r3, r3, #8
 8000976:	4313      	orrs	r3, r2
 8000978:	6003      	str	r3, [r0, #0]
 800097a:	e7f9      	b.n	8000970 <USART_OverSampling8Cmd+0xc>
 800097c:	ffff7fff 	.word	0xffff7fff

08000980 <USART_OneBitMethodCmd>:
 8000980:	6882      	ldr	r2, [r0, #8]
 8000982:	2900      	cmp	r1, #0
 8000984:	d103      	bne.n	800098e <USART_OneBitMethodCmd+0xe>
 8000986:	4b04      	ldr	r3, [pc, #16]	; (8000998 <USART_OneBitMethodCmd+0x18>)
 8000988:	4013      	ands	r3, r2
 800098a:	6083      	str	r3, [r0, #8]
 800098c:	4770      	bx	lr
 800098e:	2380      	movs	r3, #128	; 0x80
 8000990:	011b      	lsls	r3, r3, #4
 8000992:	4313      	orrs	r3, r2
 8000994:	6083      	str	r3, [r0, #8]
 8000996:	e7f9      	b.n	800098c <USART_OneBitMethodCmd+0xc>
 8000998:	fffff7ff 	.word	0xfffff7ff

0800099c <USART_MSBFirstCmd>:
 800099c:	6842      	ldr	r2, [r0, #4]
 800099e:	2900      	cmp	r1, #0
 80009a0:	d103      	bne.n	80009aa <USART_MSBFirstCmd+0xe>
 80009a2:	4b04      	ldr	r3, [pc, #16]	; (80009b4 <USART_MSBFirstCmd+0x18>)
 80009a4:	4013      	ands	r3, r2
 80009a6:	6043      	str	r3, [r0, #4]
 80009a8:	4770      	bx	lr
 80009aa:	2380      	movs	r3, #128	; 0x80
 80009ac:	031b      	lsls	r3, r3, #12
 80009ae:	4313      	orrs	r3, r2
 80009b0:	6043      	str	r3, [r0, #4]
 80009b2:	e7f9      	b.n	80009a8 <USART_MSBFirstCmd+0xc>
 80009b4:	fff7ffff 	.word	0xfff7ffff

080009b8 <USART_DataInvCmd>:
 80009b8:	6842      	ldr	r2, [r0, #4]
 80009ba:	2900      	cmp	r1, #0
 80009bc:	d103      	bne.n	80009c6 <USART_DataInvCmd+0xe>
 80009be:	4b04      	ldr	r3, [pc, #16]	; (80009d0 <USART_DataInvCmd+0x18>)
 80009c0:	4013      	ands	r3, r2
 80009c2:	6043      	str	r3, [r0, #4]
 80009c4:	4770      	bx	lr
 80009c6:	2380      	movs	r3, #128	; 0x80
 80009c8:	02db      	lsls	r3, r3, #11
 80009ca:	4313      	orrs	r3, r2
 80009cc:	6043      	str	r3, [r0, #4]
 80009ce:	e7f9      	b.n	80009c4 <USART_DataInvCmd+0xc>
 80009d0:	fffbffff 	.word	0xfffbffff

080009d4 <USART_InvPinCmd>:
 80009d4:	6843      	ldr	r3, [r0, #4]
 80009d6:	2a00      	cmp	r2, #0
 80009d8:	d102      	bne.n	80009e0 <USART_InvPinCmd+0xc>
 80009da:	438b      	bics	r3, r1
 80009dc:	6043      	str	r3, [r0, #4]
 80009de:	4770      	bx	lr
 80009e0:	4319      	orrs	r1, r3
 80009e2:	6041      	str	r1, [r0, #4]
 80009e4:	e7fb      	b.n	80009de <USART_InvPinCmd+0xa>
 80009e6:	46c0      	nop			; (mov r8, r8)

080009e8 <USART_SWAPPinCmd>:
 80009e8:	6842      	ldr	r2, [r0, #4]
 80009ea:	2900      	cmp	r1, #0
 80009ec:	d103      	bne.n	80009f6 <USART_SWAPPinCmd+0xe>
 80009ee:	4b04      	ldr	r3, [pc, #16]	; (8000a00 <USART_SWAPPinCmd+0x18>)
 80009f0:	4013      	ands	r3, r2
 80009f2:	6043      	str	r3, [r0, #4]
 80009f4:	4770      	bx	lr
 80009f6:	2380      	movs	r3, #128	; 0x80
 80009f8:	021b      	lsls	r3, r3, #8
 80009fa:	4313      	orrs	r3, r2
 80009fc:	6043      	str	r3, [r0, #4]
 80009fe:	e7f9      	b.n	80009f4 <USART_SWAPPinCmd+0xc>
 8000a00:	ffff7fff 	.word	0xffff7fff

08000a04 <USART_ReceiverTimeOutCmd>:
 8000a04:	6842      	ldr	r2, [r0, #4]
 8000a06:	2900      	cmp	r1, #0
 8000a08:	d103      	bne.n	8000a12 <USART_ReceiverTimeOutCmd+0xe>
 8000a0a:	4b04      	ldr	r3, [pc, #16]	; (8000a1c <USART_ReceiverTimeOutCmd+0x18>)
 8000a0c:	4013      	ands	r3, r2
 8000a0e:	6043      	str	r3, [r0, #4]
 8000a10:	4770      	bx	lr
 8000a12:	2380      	movs	r3, #128	; 0x80
 8000a14:	041b      	lsls	r3, r3, #16
 8000a16:	4313      	orrs	r3, r2
 8000a18:	6043      	str	r3, [r0, #4]
 8000a1a:	e7f9      	b.n	8000a10 <USART_ReceiverTimeOutCmd+0xc>
 8000a1c:	ff7fffff 	.word	0xff7fffff

08000a20 <USART_SetReceiverTimeOut>:
 8000a20:	6943      	ldr	r3, [r0, #20]
 8000a22:	0e1b      	lsrs	r3, r3, #24
 8000a24:	061b      	lsls	r3, r3, #24
 8000a26:	6143      	str	r3, [r0, #20]
 8000a28:	6943      	ldr	r3, [r0, #20]
 8000a2a:	4319      	orrs	r1, r3
 8000a2c:	6141      	str	r1, [r0, #20]
 8000a2e:	4770      	bx	lr

08000a30 <USART_SetPrescaler>:
 8000a30:	6902      	ldr	r2, [r0, #16]
 8000a32:	23ff      	movs	r3, #255	; 0xff
 8000a34:	021b      	lsls	r3, r3, #8
 8000a36:	4013      	ands	r3, r2
 8000a38:	8203      	strh	r3, [r0, #16]
 8000a3a:	6903      	ldr	r3, [r0, #16]
 8000a3c:	b29b      	uxth	r3, r3
 8000a3e:	4319      	orrs	r1, r3
 8000a40:	8201      	strh	r1, [r0, #16]
 8000a42:	4770      	bx	lr

08000a44 <USART_STOPModeCmd>:
 8000a44:	2900      	cmp	r1, #0
 8000a46:	d104      	bne.n	8000a52 <USART_STOPModeCmd+0xe>
 8000a48:	6803      	ldr	r3, [r0, #0]
 8000a4a:	2202      	movs	r2, #2
 8000a4c:	4393      	bics	r3, r2
 8000a4e:	6003      	str	r3, [r0, #0]
 8000a50:	4770      	bx	lr
 8000a52:	6802      	ldr	r2, [r0, #0]
 8000a54:	2302      	movs	r3, #2
 8000a56:	4313      	orrs	r3, r2
 8000a58:	6003      	str	r3, [r0, #0]
 8000a5a:	e7f9      	b.n	8000a50 <USART_STOPModeCmd+0xc>

08000a5c <USART_StopModeWakeUpSourceConfig>:
 8000a5c:	6882      	ldr	r2, [r0, #8]
 8000a5e:	4b03      	ldr	r3, [pc, #12]	; (8000a6c <USART_StopModeWakeUpSourceConfig+0x10>)
 8000a60:	4013      	ands	r3, r2
 8000a62:	6083      	str	r3, [r0, #8]
 8000a64:	6883      	ldr	r3, [r0, #8]
 8000a66:	4319      	orrs	r1, r3
 8000a68:	6081      	str	r1, [r0, #8]
 8000a6a:	4770      	bx	lr
 8000a6c:	ffcfffff 	.word	0xffcfffff

08000a70 <USART_AutoBaudRateCmd>:
 8000a70:	6842      	ldr	r2, [r0, #4]
 8000a72:	2900      	cmp	r1, #0
 8000a74:	d103      	bne.n	8000a7e <USART_AutoBaudRateCmd+0xe>
 8000a76:	4b04      	ldr	r3, [pc, #16]	; (8000a88 <USART_AutoBaudRateCmd+0x18>)
 8000a78:	4013      	ands	r3, r2
 8000a7a:	6043      	str	r3, [r0, #4]
 8000a7c:	4770      	bx	lr
 8000a7e:	2380      	movs	r3, #128	; 0x80
 8000a80:	035b      	lsls	r3, r3, #13
 8000a82:	4313      	orrs	r3, r2
 8000a84:	6043      	str	r3, [r0, #4]
 8000a86:	e7f9      	b.n	8000a7c <USART_AutoBaudRateCmd+0xc>
 8000a88:	ffefffff 	.word	0xffefffff

08000a8c <USART_AutoBaudRateConfig>:
 8000a8c:	6842      	ldr	r2, [r0, #4]
 8000a8e:	4b03      	ldr	r3, [pc, #12]	; (8000a9c <USART_AutoBaudRateConfig+0x10>)
 8000a90:	4013      	ands	r3, r2
 8000a92:	6043      	str	r3, [r0, #4]
 8000a94:	6843      	ldr	r3, [r0, #4]
 8000a96:	4319      	orrs	r1, r3
 8000a98:	6041      	str	r1, [r0, #4]
 8000a9a:	4770      	bx	lr
 8000a9c:	ff9fffff 	.word	0xff9fffff

08000aa0 <USART_SendData>:
 8000aa0:	05c9      	lsls	r1, r1, #23
 8000aa2:	0dc9      	lsrs	r1, r1, #23
 8000aa4:	8501      	strh	r1, [r0, #40]	; 0x28
 8000aa6:	4770      	bx	lr

08000aa8 <USART_ReceiveData>:
 8000aa8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8000aaa:	05c0      	lsls	r0, r0, #23
 8000aac:	0dc0      	lsrs	r0, r0, #23
 8000aae:	4770      	bx	lr

08000ab0 <USART_SetAddress>:
 8000ab0:	6843      	ldr	r3, [r0, #4]
 8000ab2:	0609      	lsls	r1, r1, #24
 8000ab4:	021b      	lsls	r3, r3, #8
 8000ab6:	0a1b      	lsrs	r3, r3, #8
 8000ab8:	6043      	str	r3, [r0, #4]
 8000aba:	6843      	ldr	r3, [r0, #4]
 8000abc:	4319      	orrs	r1, r3
 8000abe:	6041      	str	r1, [r0, #4]
 8000ac0:	4770      	bx	lr
 8000ac2:	46c0      	nop			; (mov r8, r8)

08000ac4 <USART_MuteModeCmd>:
 8000ac4:	6802      	ldr	r2, [r0, #0]
 8000ac6:	2900      	cmp	r1, #0
 8000ac8:	d103      	bne.n	8000ad2 <USART_MuteModeCmd+0xe>
 8000aca:	4b04      	ldr	r3, [pc, #16]	; (8000adc <USART_MuteModeCmd+0x18>)
 8000acc:	4013      	ands	r3, r2
 8000ace:	6003      	str	r3, [r0, #0]
 8000ad0:	4770      	bx	lr
 8000ad2:	2380      	movs	r3, #128	; 0x80
 8000ad4:	019b      	lsls	r3, r3, #6
 8000ad6:	4313      	orrs	r3, r2
 8000ad8:	6003      	str	r3, [r0, #0]
 8000ada:	e7f9      	b.n	8000ad0 <USART_MuteModeCmd+0xc>
 8000adc:	ffffdfff 	.word	0xffffdfff

08000ae0 <USART_MuteModeWakeUpConfig>:
 8000ae0:	6802      	ldr	r2, [r0, #0]
 8000ae2:	4b03      	ldr	r3, [pc, #12]	; (8000af0 <USART_MuteModeWakeUpConfig+0x10>)
 8000ae4:	4013      	ands	r3, r2
 8000ae6:	6003      	str	r3, [r0, #0]
 8000ae8:	6803      	ldr	r3, [r0, #0]
 8000aea:	4319      	orrs	r1, r3
 8000aec:	6001      	str	r1, [r0, #0]
 8000aee:	4770      	bx	lr
 8000af0:	fffff7ff 	.word	0xfffff7ff

08000af4 <USART_AddressDetectionConfig>:
 8000af4:	6843      	ldr	r3, [r0, #4]
 8000af6:	2210      	movs	r2, #16
 8000af8:	4393      	bics	r3, r2
 8000afa:	6043      	str	r3, [r0, #4]
 8000afc:	6843      	ldr	r3, [r0, #4]
 8000afe:	4319      	orrs	r1, r3
 8000b00:	6041      	str	r1, [r0, #4]
 8000b02:	4770      	bx	lr

08000b04 <USART_LINBreakDetectLengthConfig>:
 8000b04:	6843      	ldr	r3, [r0, #4]
 8000b06:	2220      	movs	r2, #32
 8000b08:	4393      	bics	r3, r2
 8000b0a:	6043      	str	r3, [r0, #4]
 8000b0c:	6843      	ldr	r3, [r0, #4]
 8000b0e:	4319      	orrs	r1, r3
 8000b10:	6041      	str	r1, [r0, #4]
 8000b12:	4770      	bx	lr

08000b14 <USART_LINCmd>:
 8000b14:	6842      	ldr	r2, [r0, #4]
 8000b16:	2900      	cmp	r1, #0
 8000b18:	d103      	bne.n	8000b22 <USART_LINCmd+0xe>
 8000b1a:	4b04      	ldr	r3, [pc, #16]	; (8000b2c <USART_LINCmd+0x18>)
 8000b1c:	4013      	ands	r3, r2
 8000b1e:	6043      	str	r3, [r0, #4]
 8000b20:	4770      	bx	lr
 8000b22:	2380      	movs	r3, #128	; 0x80
 8000b24:	01db      	lsls	r3, r3, #7
 8000b26:	4313      	orrs	r3, r2
 8000b28:	6043      	str	r3, [r0, #4]
 8000b2a:	e7f9      	b.n	8000b20 <USART_LINCmd+0xc>
 8000b2c:	ffffbfff 	.word	0xffffbfff

08000b30 <USART_HalfDuplexCmd>:
 8000b30:	2900      	cmp	r1, #0
 8000b32:	d104      	bne.n	8000b3e <USART_HalfDuplexCmd+0xe>
 8000b34:	6883      	ldr	r3, [r0, #8]
 8000b36:	2208      	movs	r2, #8
 8000b38:	4393      	bics	r3, r2
 8000b3a:	6083      	str	r3, [r0, #8]
 8000b3c:	4770      	bx	lr
 8000b3e:	6882      	ldr	r2, [r0, #8]
 8000b40:	2308      	movs	r3, #8
 8000b42:	4313      	orrs	r3, r2
 8000b44:	6083      	str	r3, [r0, #8]
 8000b46:	e7f9      	b.n	8000b3c <USART_HalfDuplexCmd+0xc>

08000b48 <USART_SetGuardTime>:
 8000b48:	6902      	ldr	r2, [r0, #16]
 8000b4a:	23ff      	movs	r3, #255	; 0xff
 8000b4c:	4013      	ands	r3, r2
 8000b4e:	8203      	strh	r3, [r0, #16]
 8000b50:	6903      	ldr	r3, [r0, #16]
 8000b52:	0209      	lsls	r1, r1, #8
 8000b54:	b29b      	uxth	r3, r3
 8000b56:	4319      	orrs	r1, r3
 8000b58:	8201      	strh	r1, [r0, #16]
 8000b5a:	4770      	bx	lr

08000b5c <USART_SmartCardCmd>:
 8000b5c:	2900      	cmp	r1, #0
 8000b5e:	d104      	bne.n	8000b6a <USART_SmartCardCmd+0xe>
 8000b60:	6883      	ldr	r3, [r0, #8]
 8000b62:	2220      	movs	r2, #32
 8000b64:	4393      	bics	r3, r2
 8000b66:	6083      	str	r3, [r0, #8]
 8000b68:	4770      	bx	lr
 8000b6a:	6882      	ldr	r2, [r0, #8]
 8000b6c:	2320      	movs	r3, #32
 8000b6e:	4313      	orrs	r3, r2
 8000b70:	6083      	str	r3, [r0, #8]
 8000b72:	e7f9      	b.n	8000b68 <USART_SmartCardCmd+0xc>

08000b74 <USART_SmartCardNACKCmd>:
 8000b74:	2900      	cmp	r1, #0
 8000b76:	d104      	bne.n	8000b82 <USART_SmartCardNACKCmd+0xe>
 8000b78:	6883      	ldr	r3, [r0, #8]
 8000b7a:	2210      	movs	r2, #16
 8000b7c:	4393      	bics	r3, r2
 8000b7e:	6083      	str	r3, [r0, #8]
 8000b80:	4770      	bx	lr
 8000b82:	6882      	ldr	r2, [r0, #8]
 8000b84:	2310      	movs	r3, #16
 8000b86:	4313      	orrs	r3, r2
 8000b88:	6083      	str	r3, [r0, #8]
 8000b8a:	e7f9      	b.n	8000b80 <USART_SmartCardNACKCmd+0xc>

08000b8c <USART_SetAutoRetryCount>:
 8000b8c:	6882      	ldr	r2, [r0, #8]
 8000b8e:	4b04      	ldr	r3, [pc, #16]	; (8000ba0 <USART_SetAutoRetryCount+0x14>)
 8000b90:	0449      	lsls	r1, r1, #17
 8000b92:	4013      	ands	r3, r2
 8000b94:	6083      	str	r3, [r0, #8]
 8000b96:	6883      	ldr	r3, [r0, #8]
 8000b98:	4319      	orrs	r1, r3
 8000b9a:	6081      	str	r1, [r0, #8]
 8000b9c:	4770      	bx	lr
 8000b9e:	46c0      	nop			; (mov r8, r8)
 8000ba0:	fff1ffff 	.word	0xfff1ffff

08000ba4 <USART_SetBlockLength>:
 8000ba4:	6943      	ldr	r3, [r0, #20]
 8000ba6:	0609      	lsls	r1, r1, #24
 8000ba8:	021b      	lsls	r3, r3, #8
 8000baa:	0a1b      	lsrs	r3, r3, #8
 8000bac:	6143      	str	r3, [r0, #20]
 8000bae:	6943      	ldr	r3, [r0, #20]
 8000bb0:	4319      	orrs	r1, r3
 8000bb2:	6141      	str	r1, [r0, #20]
 8000bb4:	4770      	bx	lr
 8000bb6:	46c0      	nop			; (mov r8, r8)

08000bb8 <USART_IrDAConfig>:
 8000bb8:	6883      	ldr	r3, [r0, #8]
 8000bba:	2204      	movs	r2, #4
 8000bbc:	4393      	bics	r3, r2
 8000bbe:	6083      	str	r3, [r0, #8]
 8000bc0:	6883      	ldr	r3, [r0, #8]
 8000bc2:	4319      	orrs	r1, r3
 8000bc4:	6081      	str	r1, [r0, #8]
 8000bc6:	4770      	bx	lr

08000bc8 <USART_IrDACmd>:
 8000bc8:	2900      	cmp	r1, #0
 8000bca:	d104      	bne.n	8000bd6 <USART_IrDACmd+0xe>
 8000bcc:	6883      	ldr	r3, [r0, #8]
 8000bce:	2202      	movs	r2, #2
 8000bd0:	4393      	bics	r3, r2
 8000bd2:	6083      	str	r3, [r0, #8]
 8000bd4:	4770      	bx	lr
 8000bd6:	6882      	ldr	r2, [r0, #8]
 8000bd8:	2302      	movs	r3, #2
 8000bda:	4313      	orrs	r3, r2
 8000bdc:	6083      	str	r3, [r0, #8]
 8000bde:	e7f9      	b.n	8000bd4 <USART_IrDACmd+0xc>

08000be0 <USART_DECmd>:
 8000be0:	6882      	ldr	r2, [r0, #8]
 8000be2:	2900      	cmp	r1, #0
 8000be4:	d103      	bne.n	8000bee <USART_DECmd+0xe>
 8000be6:	4b04      	ldr	r3, [pc, #16]	; (8000bf8 <USART_DECmd+0x18>)
 8000be8:	4013      	ands	r3, r2
 8000bea:	6083      	str	r3, [r0, #8]
 8000bec:	4770      	bx	lr
 8000bee:	2380      	movs	r3, #128	; 0x80
 8000bf0:	01db      	lsls	r3, r3, #7
 8000bf2:	4313      	orrs	r3, r2
 8000bf4:	6083      	str	r3, [r0, #8]
 8000bf6:	e7f9      	b.n	8000bec <USART_DECmd+0xc>
 8000bf8:	ffffbfff 	.word	0xffffbfff

08000bfc <USART_DEPolarityConfig>:
 8000bfc:	6882      	ldr	r2, [r0, #8]
 8000bfe:	4b03      	ldr	r3, [pc, #12]	; (8000c0c <USART_DEPolarityConfig+0x10>)
 8000c00:	4013      	ands	r3, r2
 8000c02:	6083      	str	r3, [r0, #8]
 8000c04:	6883      	ldr	r3, [r0, #8]
 8000c06:	4319      	orrs	r1, r3
 8000c08:	6081      	str	r1, [r0, #8]
 8000c0a:	4770      	bx	lr
 8000c0c:	ffff7fff 	.word	0xffff7fff

08000c10 <USART_SetDEAssertionTime>:
 8000c10:	6802      	ldr	r2, [r0, #0]
 8000c12:	4b04      	ldr	r3, [pc, #16]	; (8000c24 <USART_SetDEAssertionTime+0x14>)
 8000c14:	0549      	lsls	r1, r1, #21
 8000c16:	4013      	ands	r3, r2
 8000c18:	6003      	str	r3, [r0, #0]
 8000c1a:	6803      	ldr	r3, [r0, #0]
 8000c1c:	4319      	orrs	r1, r3
 8000c1e:	6001      	str	r1, [r0, #0]
 8000c20:	4770      	bx	lr
 8000c22:	46c0      	nop			; (mov r8, r8)
 8000c24:	fc1fffff 	.word	0xfc1fffff

08000c28 <USART_SetDEDeassertionTime>:
 8000c28:	6802      	ldr	r2, [r0, #0]
 8000c2a:	4b04      	ldr	r3, [pc, #16]	; (8000c3c <USART_SetDEDeassertionTime+0x14>)
 8000c2c:	0409      	lsls	r1, r1, #16
 8000c2e:	4013      	ands	r3, r2
 8000c30:	6003      	str	r3, [r0, #0]
 8000c32:	6803      	ldr	r3, [r0, #0]
 8000c34:	4319      	orrs	r1, r3
 8000c36:	6001      	str	r1, [r0, #0]
 8000c38:	4770      	bx	lr
 8000c3a:	46c0      	nop			; (mov r8, r8)
 8000c3c:	ffe0ffff 	.word	0xffe0ffff

08000c40 <USART_DMACmd>:
 8000c40:	6883      	ldr	r3, [r0, #8]
 8000c42:	2a00      	cmp	r2, #0
 8000c44:	d102      	bne.n	8000c4c <USART_DMACmd+0xc>
 8000c46:	438b      	bics	r3, r1
 8000c48:	6083      	str	r3, [r0, #8]
 8000c4a:	4770      	bx	lr
 8000c4c:	4319      	orrs	r1, r3
 8000c4e:	6081      	str	r1, [r0, #8]
 8000c50:	e7fb      	b.n	8000c4a <USART_DMACmd+0xa>
 8000c52:	46c0      	nop			; (mov r8, r8)

08000c54 <USART_DMAReceptionErrorConfig>:
 8000c54:	6882      	ldr	r2, [r0, #8]
 8000c56:	4b03      	ldr	r3, [pc, #12]	; (8000c64 <USART_DMAReceptionErrorConfig+0x10>)
 8000c58:	4013      	ands	r3, r2
 8000c5a:	6083      	str	r3, [r0, #8]
 8000c5c:	6883      	ldr	r3, [r0, #8]
 8000c5e:	4319      	orrs	r1, r3
 8000c60:	6081      	str	r1, [r0, #8]
 8000c62:	4770      	bx	lr
 8000c64:	ffffdfff 	.word	0xffffdfff

08000c68 <USART_ITConfig>:
 8000c68:	b510      	push	{r4, lr}
 8000c6a:	24ff      	movs	r4, #255	; 0xff
 8000c6c:	b28b      	uxth	r3, r1
 8000c6e:	4021      	ands	r1, r4
 8000c70:	2401      	movs	r4, #1
 8000c72:	408c      	lsls	r4, r1
 8000c74:	0a1b      	lsrs	r3, r3, #8
 8000c76:	1c21      	adds	r1, r4, #0
 8000c78:	2b02      	cmp	r3, #2
 8000c7a:	d00a      	beq.n	8000c92 <USART_ITConfig+0x2a>
 8000c7c:	2b03      	cmp	r3, #3
 8000c7e:	d00a      	beq.n	8000c96 <USART_ITConfig+0x2e>
 8000c80:	6803      	ldr	r3, [r0, #0]
 8000c82:	2a00      	cmp	r2, #0
 8000c84:	d102      	bne.n	8000c8c <USART_ITConfig+0x24>
 8000c86:	438b      	bics	r3, r1
 8000c88:	6003      	str	r3, [r0, #0]
 8000c8a:	bd10      	pop	{r4, pc}
 8000c8c:	4319      	orrs	r1, r3
 8000c8e:	6001      	str	r1, [r0, #0]
 8000c90:	e7fb      	b.n	8000c8a <USART_ITConfig+0x22>
 8000c92:	3004      	adds	r0, #4
 8000c94:	e7f4      	b.n	8000c80 <USART_ITConfig+0x18>
 8000c96:	3008      	adds	r0, #8
 8000c98:	e7f2      	b.n	8000c80 <USART_ITConfig+0x18>
 8000c9a:	46c0      	nop			; (mov r8, r8)

08000c9c <USART_RequestCmd>:
 8000c9c:	6983      	ldr	r3, [r0, #24]
 8000c9e:	2a00      	cmp	r2, #0
 8000ca0:	d103      	bne.n	8000caa <USART_RequestCmd+0xe>
 8000ca2:	b29b      	uxth	r3, r3
 8000ca4:	438b      	bics	r3, r1
 8000ca6:	8303      	strh	r3, [r0, #24]
 8000ca8:	4770      	bx	lr
 8000caa:	4319      	orrs	r1, r3
 8000cac:	b289      	uxth	r1, r1
 8000cae:	8301      	strh	r1, [r0, #24]
 8000cb0:	e7fa      	b.n	8000ca8 <USART_RequestCmd+0xc>
 8000cb2:	46c0      	nop			; (mov r8, r8)

08000cb4 <USART_OverrunDetectionConfig>:
 8000cb4:	6882      	ldr	r2, [r0, #8]
 8000cb6:	4b03      	ldr	r3, [pc, #12]	; (8000cc4 <USART_OverrunDetectionConfig+0x10>)
 8000cb8:	4013      	ands	r3, r2
 8000cba:	6083      	str	r3, [r0, #8]
 8000cbc:	6883      	ldr	r3, [r0, #8]
 8000cbe:	4319      	orrs	r1, r3
 8000cc0:	6081      	str	r1, [r0, #8]
 8000cc2:	4770      	bx	lr
 8000cc4:	ffffefff 	.word	0xffffefff

08000cc8 <USART_GetFlagStatus>:
 8000cc8:	69c0      	ldr	r0, [r0, #28]
 8000cca:	4008      	ands	r0, r1
 8000ccc:	1e43      	subs	r3, r0, #1
 8000cce:	4198      	sbcs	r0, r3
 8000cd0:	b2c0      	uxtb	r0, r0
 8000cd2:	4770      	bx	lr

08000cd4 <USART_ClearFlag>:
 8000cd4:	6201      	str	r1, [r0, #32]
 8000cd6:	4770      	bx	lr

08000cd8 <USART_GetITStatus>:
 8000cd8:	22ff      	movs	r2, #255	; 0xff
 8000cda:	400a      	ands	r2, r1
 8000cdc:	b510      	push	{r4, lr}
 8000cde:	2401      	movs	r4, #1
 8000ce0:	b28b      	uxth	r3, r1
 8000ce2:	4094      	lsls	r4, r2
 8000ce4:	0a1b      	lsrs	r3, r3, #8
 8000ce6:	1c22      	adds	r2, r4, #0
 8000ce8:	2b01      	cmp	r3, #1
 8000cea:	d00f      	beq.n	8000d0c <USART_GetITStatus+0x34>
 8000cec:	2b02      	cmp	r3, #2
 8000cee:	d010      	beq.n	8000d12 <USART_GetITStatus+0x3a>
 8000cf0:	6884      	ldr	r4, [r0, #8]
 8000cf2:	4022      	ands	r2, r4
 8000cf4:	69c3      	ldr	r3, [r0, #28]
 8000cf6:	2000      	movs	r0, #0
 8000cf8:	2a00      	cmp	r2, #0
 8000cfa:	d006      	beq.n	8000d0a <USART_GetITStatus+0x32>
 8000cfc:	0c09      	lsrs	r1, r1, #16
 8000cfe:	2001      	movs	r0, #1
 8000d00:	4088      	lsls	r0, r1
 8000d02:	4003      	ands	r3, r0
 8000d04:	1e58      	subs	r0, r3, #1
 8000d06:	4183      	sbcs	r3, r0
 8000d08:	b2d8      	uxtb	r0, r3
 8000d0a:	bd10      	pop	{r4, pc}
 8000d0c:	6804      	ldr	r4, [r0, #0]
 8000d0e:	4022      	ands	r2, r4
 8000d10:	e7f0      	b.n	8000cf4 <USART_GetITStatus+0x1c>
 8000d12:	6844      	ldr	r4, [r0, #4]
 8000d14:	4022      	ands	r2, r4
 8000d16:	e7ed      	b.n	8000cf4 <USART_GetITStatus+0x1c>

08000d18 <USART_ClearITPendingBit>:
 8000d18:	0c09      	lsrs	r1, r1, #16
 8000d1a:	2301      	movs	r3, #1
 8000d1c:	408b      	lsls	r3, r1
 8000d1e:	6203      	str	r3, [r0, #32]
 8000d20:	4770      	bx	lr
 8000d22:	46c0      	nop			; (mov r8, r8)

08000d24 <__aeabi_uidiv>:
 8000d24:	2900      	cmp	r1, #0
 8000d26:	d034      	beq.n	8000d92 <.udivsi3_skip_div0_test+0x6a>

08000d28 <.udivsi3_skip_div0_test>:
 8000d28:	2301      	movs	r3, #1
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	b410      	push	{r4}
 8000d2e:	4288      	cmp	r0, r1
 8000d30:	d32c      	bcc.n	8000d8c <.udivsi3_skip_div0_test+0x64>
 8000d32:	2401      	movs	r4, #1
 8000d34:	0724      	lsls	r4, r4, #28
 8000d36:	42a1      	cmp	r1, r4
 8000d38:	d204      	bcs.n	8000d44 <.udivsi3_skip_div0_test+0x1c>
 8000d3a:	4281      	cmp	r1, r0
 8000d3c:	d202      	bcs.n	8000d44 <.udivsi3_skip_div0_test+0x1c>
 8000d3e:	0109      	lsls	r1, r1, #4
 8000d40:	011b      	lsls	r3, r3, #4
 8000d42:	e7f8      	b.n	8000d36 <.udivsi3_skip_div0_test+0xe>
 8000d44:	00e4      	lsls	r4, r4, #3
 8000d46:	42a1      	cmp	r1, r4
 8000d48:	d204      	bcs.n	8000d54 <.udivsi3_skip_div0_test+0x2c>
 8000d4a:	4281      	cmp	r1, r0
 8000d4c:	d202      	bcs.n	8000d54 <.udivsi3_skip_div0_test+0x2c>
 8000d4e:	0049      	lsls	r1, r1, #1
 8000d50:	005b      	lsls	r3, r3, #1
 8000d52:	e7f8      	b.n	8000d46 <.udivsi3_skip_div0_test+0x1e>
 8000d54:	4288      	cmp	r0, r1
 8000d56:	d301      	bcc.n	8000d5c <.udivsi3_skip_div0_test+0x34>
 8000d58:	1a40      	subs	r0, r0, r1
 8000d5a:	431a      	orrs	r2, r3
 8000d5c:	084c      	lsrs	r4, r1, #1
 8000d5e:	42a0      	cmp	r0, r4
 8000d60:	d302      	bcc.n	8000d68 <.udivsi3_skip_div0_test+0x40>
 8000d62:	1b00      	subs	r0, r0, r4
 8000d64:	085c      	lsrs	r4, r3, #1
 8000d66:	4322      	orrs	r2, r4
 8000d68:	088c      	lsrs	r4, r1, #2
 8000d6a:	42a0      	cmp	r0, r4
 8000d6c:	d302      	bcc.n	8000d74 <.udivsi3_skip_div0_test+0x4c>
 8000d6e:	1b00      	subs	r0, r0, r4
 8000d70:	089c      	lsrs	r4, r3, #2
 8000d72:	4322      	orrs	r2, r4
 8000d74:	08cc      	lsrs	r4, r1, #3
 8000d76:	42a0      	cmp	r0, r4
 8000d78:	d302      	bcc.n	8000d80 <.udivsi3_skip_div0_test+0x58>
 8000d7a:	1b00      	subs	r0, r0, r4
 8000d7c:	08dc      	lsrs	r4, r3, #3
 8000d7e:	4322      	orrs	r2, r4
 8000d80:	2800      	cmp	r0, #0
 8000d82:	d003      	beq.n	8000d8c <.udivsi3_skip_div0_test+0x64>
 8000d84:	091b      	lsrs	r3, r3, #4
 8000d86:	d001      	beq.n	8000d8c <.udivsi3_skip_div0_test+0x64>
 8000d88:	0909      	lsrs	r1, r1, #4
 8000d8a:	e7e3      	b.n	8000d54 <.udivsi3_skip_div0_test+0x2c>
 8000d8c:	1c10      	adds	r0, r2, #0
 8000d8e:	bc10      	pop	{r4}
 8000d90:	4770      	bx	lr
 8000d92:	2800      	cmp	r0, #0
 8000d94:	d001      	beq.n	8000d9a <.udivsi3_skip_div0_test+0x72>
 8000d96:	2000      	movs	r0, #0
 8000d98:	43c0      	mvns	r0, r0
 8000d9a:	b407      	push	{r0, r1, r2}
 8000d9c:	4802      	ldr	r0, [pc, #8]	; (8000da8 <.udivsi3_skip_div0_test+0x80>)
 8000d9e:	a102      	add	r1, pc, #8	; (adr r1, 8000da8 <.udivsi3_skip_div0_test+0x80>)
 8000da0:	1840      	adds	r0, r0, r1
 8000da2:	9002      	str	r0, [sp, #8]
 8000da4:	bd03      	pop	{r0, r1, pc}
 8000da6:	46c0      	nop			; (mov r8, r8)
 8000da8:	00000019 	.word	0x00000019

08000dac <__aeabi_uidivmod>:
 8000dac:	2900      	cmp	r1, #0
 8000dae:	d0f0      	beq.n	8000d92 <.udivsi3_skip_div0_test+0x6a>
 8000db0:	b503      	push	{r0, r1, lr}
 8000db2:	f7ff ffb9 	bl	8000d28 <.udivsi3_skip_div0_test>
 8000db6:	bc0e      	pop	{r1, r2, r3}
 8000db8:	4342      	muls	r2, r0
 8000dba:	1a89      	subs	r1, r1, r2
 8000dbc:	4718      	bx	r3
 8000dbe:	46c0      	nop			; (mov r8, r8)

08000dc0 <__aeabi_idiv0>:
 8000dc0:	4770      	bx	lr
 8000dc2:	46c0      	nop			; (mov r8, r8)

08000dc4 <main>:
#include "utilities.h"

void extern delayMs(uint32_t ms);

int main(void)
{
 8000dc4:	b508      	push	{r3, lr}

  gpio_driver_init();
 8000dc6:	f000 f869 	bl	8000e9c <gpio_driver_init>

  utilities_init();
 8000dca:	f000 f8a9 	bl	8000f20 <utilities_init>
 8000dce:	e7fe      	b.n	8000dce <main+0xa>

08000dd0 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{    
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000dd0:	4b25      	ldr	r3, [pc, #148]	; (8000e68 <SystemInit+0x98>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{    
 8000dd2:	b513      	push	{r0, r1, r4, lr}
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000dd4:	6819      	ldr	r1, [r3, #0]
 8000dd6:	2201      	movs	r2, #1
 8000dd8:	4311      	orrs	r1, r2
 8000dda:	6019      	str	r1, [r3, #0]

  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 8000ddc:	6858      	ldr	r0, [r3, #4]
 8000dde:	4923      	ldr	r1, [pc, #140]	; (8000e6c <SystemInit+0x9c>)

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8000de0:	240f      	movs	r4, #15
{    
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 8000de2:	4001      	ands	r1, r0
 8000de4:	6059      	str	r1, [r3, #4]
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000de6:	6818      	ldr	r0, [r3, #0]
 8000de8:	4921      	ldr	r1, [pc, #132]	; (8000e70 <SystemInit+0xa0>)
 8000dea:	4001      	ands	r1, r0
 8000dec:	6019      	str	r1, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000dee:	6818      	ldr	r0, [r3, #0]
 8000df0:	4920      	ldr	r1, [pc, #128]	; (8000e74 <SystemInit+0xa4>)
 8000df2:	4001      	ands	r1, r0
 8000df4:	6019      	str	r1, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;
 8000df6:	6858      	ldr	r0, [r3, #4]
 8000df8:	491f      	ldr	r1, [pc, #124]	; (8000e78 <SystemInit+0xa8>)
 8000dfa:	4008      	ands	r0, r1
 8000dfc:	6058      	str	r0, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8000dfe:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8000e00:	43a0      	bics	r0, r4
 8000e02:	62d8      	str	r0, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
 8000e04:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8000e06:	481d      	ldr	r0, [pc, #116]	; (8000e7c <SystemInit+0xac>)
 8000e08:	4020      	ands	r0, r4
 8000e0a:	6318      	str	r0, [r3, #48]	; 0x30

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 8000e0c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8000e0e:	4390      	bics	r0, r2

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000e10:	2200      	movs	r2, #0

  /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 8000e12:	6358      	str	r0, [r3, #52]	; 0x34

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000e14:	609a      	str	r2, [r3, #8]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000e16:	9200      	str	r2, [sp, #0]
 8000e18:	9201      	str	r2, [sp, #4]
  /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 8000e1a:	4a19      	ldr	r2, [pc, #100]	; (8000e80 <SystemInit+0xb0>)
 8000e1c:	2011      	movs	r0, #17
 8000e1e:	6010      	str	r0, [r2, #0]
 
  /* HCLK = SYSCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000e20:	685a      	ldr	r2, [r3, #4]
 8000e22:	605a      	str	r2, [r3, #4]
      
  /* PCLK = HCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 8000e24:	685a      	ldr	r2, [r3, #4]
 8000e26:	605a      	str	r2, [r3, #4]

  /* PLL configuration = (HSI/2) * 12 = ~48 MHz */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 8000e28:	685a      	ldr	r2, [r3, #4]
 8000e2a:	4011      	ands	r1, r2
 8000e2c:	6059      	str	r1, [r3, #4]
  RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL12);
 8000e2e:	6859      	ldr	r1, [r3, #4]
 8000e30:	22a0      	movs	r2, #160	; 0xa0
 8000e32:	0392      	lsls	r2, r2, #14
 8000e34:	430a      	orrs	r2, r1
 8000e36:	605a      	str	r2, [r3, #4]
            
  /* Enable PLL */
  RCC->CR |= RCC_CR_PLLON;
 8000e38:	6819      	ldr	r1, [r3, #0]
 8000e3a:	2280      	movs	r2, #128	; 0x80
 8000e3c:	4082      	lsls	r2, r0
 8000e3e:	430a      	orrs	r2, r1
 8000e40:	601a      	str	r2, [r3, #0]

  /* Wait till PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000e42:	6819      	ldr	r1, [r3, #0]
 8000e44:	4a08      	ldr	r2, [pc, #32]	; (8000e68 <SystemInit+0x98>)
 8000e46:	0188      	lsls	r0, r1, #6
 8000e48:	d5fb      	bpl.n	8000e42 <SystemInit+0x72>
  {
  }

  /* Select PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8000e4a:	6851      	ldr	r1, [r2, #4]
 8000e4c:	2003      	movs	r0, #3
 8000e4e:	4381      	bics	r1, r0
 8000e50:	6051      	str	r1, [r2, #4]
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 8000e52:	6851      	ldr	r1, [r2, #4]
 8000e54:	2002      	movs	r0, #2
 8000e56:	4301      	orrs	r1, r0
 8000e58:	6051      	str	r1, [r2, #4]

  /* Wait till PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 8000e5a:	6859      	ldr	r1, [r3, #4]
 8000e5c:	220c      	movs	r2, #12
 8000e5e:	400a      	ands	r2, r1
 8000e60:	2a08      	cmp	r2, #8
 8000e62:	d1fa      	bne.n	8000e5a <SystemInit+0x8a>
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;

  /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
  SetSysClock();
}
 8000e64:	bd13      	pop	{r0, r1, r4, pc}
 8000e66:	46c0      	nop			; (mov r8, r8)
 8000e68:	40021000 	.word	0x40021000
 8000e6c:	f8ffb80c 	.word	0xf8ffb80c
 8000e70:	fef6ffff 	.word	0xfef6ffff
 8000e74:	fffbffff 	.word	0xfffbffff
 8000e78:	ffc0ffff 	.word	0xffc0ffff
 8000e7c:	fffffeac 	.word	0xfffffeac
 8000e80:	40022000 	.word	0x40022000

08000e84 <gpiopin_to_gpiopinsource>:
  {GPIOA, GPIO_Pin_2, 0x02, GPIO_AF_1}   // gpio_debug_tx  - D1
};

int gpiopin_to_gpiopinsource(int input)
{
  if(input == 0) return 0;
 8000e84:	2300      	movs	r3, #0
 8000e86:	4298      	cmp	r0, r3
 8000e88:	d005      	beq.n	8000e96 <gpiopin_to_gpiopinsource+0x12>
  int index = 0;
  while(index < 16)
    {
      if((input & 0x01) == 1) return index;
 8000e8a:	07c2      	lsls	r2, r0, #31
 8000e8c:	d403      	bmi.n	8000e96 <gpiopin_to_gpiopinsource+0x12>
      index++;
 8000e8e:	3301      	adds	r3, #1
      input = input >> 1;
 8000e90:	1040      	asrs	r0, r0, #1

int gpiopin_to_gpiopinsource(int input)
{
  if(input == 0) return 0;
  int index = 0;
  while(index < 16)
 8000e92:	2b10      	cmp	r3, #16
 8000e94:	d1f9      	bne.n	8000e8a <gpiopin_to_gpiopinsource+0x6>
      if((input & 0x01) == 1) return index;
      index++;
      input = input >> 1;
    }
  return index;
}
 8000e96:	1c18      	adds	r0, r3, #0
 8000e98:	4770      	bx	lr
	...

08000e9c <gpio_driver_init>:

void gpio_driver_init(void)
{
 8000e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8000e9e:	2080      	movs	r0, #128	; 0x80
    }
  return index;
}

void gpio_driver_init(void)
{
 8000ea0:	b085      	sub	sp, #20
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8000ea2:	0280      	lsls	r0, r0, #10
 8000ea4:	2101      	movs	r1, #1
 8000ea6:	f7ff fc11 	bl	80006cc <RCC_AHBPeriphClockCmd>
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 8000eaa:	2080      	movs	r0, #128	; 0x80
 8000eac:	02c0      	lsls	r0, r0, #11
 8000eae:	2101      	movs	r1, #1
 8000eb0:	f7ff fc0c 	bl	80006cc <RCC_AHBPeriphClockCmd>
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 8000eb4:	2080      	movs	r0, #128	; 0x80
 8000eb6:	0300      	lsls	r0, r0, #12
 8000eb8:	2101      	movs	r1, #1
 8000eba:	f7ff fc07 	bl	80006cc <RCC_AHBPeriphClockCmd>
 8000ebe:	4c12      	ldr	r4, [pc, #72]	; (8000f08 <gpio_driver_init+0x6c>)

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
 8000ec0:	4a12      	ldr	r2, [pc, #72]	; (8000f0c <gpio_driver_init+0x70>)
 8000ec2:	4294      	cmp	r4, r2
 8000ec4:	d01e      	beq.n	8000f04 <gpio_driver_init+0x68>
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
 8000ec6:	79a2      	ldrb	r2, [r4, #6]
 8000ec8:	79e5      	ldrb	r5, [r4, #7]
 8000eca:	6826      	ldr	r6, [r4, #0]
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8000ecc:	466b      	mov	r3, sp
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
 8000ece:	88a7      	ldrh	r7, [r4, #4]
 8000ed0:	9201      	str	r2, [sp, #4]
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8000ed2:	731d      	strb	r5, [r3, #12]
 8000ed4:	466a      	mov	r2, sp
 8000ed6:	2301      	movs	r3, #1
 8000ed8:	7353      	strb	r3, [r2, #13]
                                my_pin.gpio_af_selection, // Pin Mode
                                GPIO_Speed_10MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_NOPULL};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8000eda:	1c30      	adds	r0, r6, #0
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8000edc:	2300      	movs	r3, #0
                                my_pin.gpio_af_selection, // Pin Mode
                                GPIO_Speed_10MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_NOPULL};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8000ede:	a902      	add	r1, sp, #8
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8000ee0:	7393      	strb	r3, [r2, #14]
 8000ee2:	73d3      	strb	r3, [r2, #15]
 8000ee4:	9702      	str	r7, [sp, #8]
                                my_pin.gpio_af_selection, // Pin Mode
                                GPIO_Speed_10MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_NOPULL};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8000ee6:	f7ff f93f 	bl	8000168 <GPIO_Init>
    if(my_pin.gpio_mode == (0x02)) GPIO_PinAFConfig(my_pin.gpio_port,
 8000eea:	9b01      	ldr	r3, [sp, #4]
 8000eec:	2b02      	cmp	r3, #2
 8000eee:	d107      	bne.n	8000f00 <gpio_driver_init+0x64>
      gpiopin_to_gpiopinsource(my_pin.gpio_pin),
 8000ef0:	1c38      	adds	r0, r7, #0
 8000ef2:	f7ff ffc7 	bl	8000e84 <gpiopin_to_gpiopinsource>
                                my_pin.gpio_af_selection, // Pin Mode
                                GPIO_Speed_10MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_NOPULL};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
    if(my_pin.gpio_mode == (0x02)) GPIO_PinAFConfig(my_pin.gpio_port,
 8000ef6:	1c2a      	adds	r2, r5, #0
 8000ef8:	b281      	uxth	r1, r0
 8000efa:	1c30      	adds	r0, r6, #0
 8000efc:	f7ff f9d2 	bl	80002a4 <GPIO_PinAFConfig>
 8000f00:	3408      	adds	r4, #8
 8000f02:	e7dd      	b.n	8000ec0 <gpio_driver_init+0x24>
      gpiopin_to_gpiopinsource(my_pin.gpio_pin),
      my_pin.gpio_af_selection);
  }
}
 8000f04:	b005      	add	sp, #20
 8000f06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f08:	08001010 	.word	0x08001010
 8000f0c:	08001078 	.word	0x08001078

08000f10 <SysTick_Handler>:
	while((msTicks - startTicks) < ms_delay);
}


void SysTick_Handler(void) {
	msTicks++;
 8000f10:	4b02      	ldr	r3, [pc, #8]	; (8000f1c <SysTick_Handler+0xc>)
 8000f12:	681a      	ldr	r2, [r3, #0]
 8000f14:	3201      	adds	r2, #1
 8000f16:	601a      	str	r2, [r3, #0]
} 
 8000f18:	4770      	bx	lr
 8000f1a:	46c0      	nop			; (mov r8, r8)
 8000f1c:	20000014 	.word	0x20000014

08000f20 <utilities_init>:

void utilities_init()
{
 8000f20:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}

	SysTick_Config(SystemCoreClock/1000);
 8000f22:	4b10      	ldr	r3, [pc, #64]	; (8000f64 <utilities_init+0x44>)
 8000f24:	21fa      	movs	r1, #250	; 0xfa
 8000f26:	6818      	ldr	r0, [r3, #0]
 8000f28:	0089      	lsls	r1, r1, #2
 8000f2a:	f7ff fefb 	bl	8000d24 <__aeabi_uidiv>
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 8000f2e:	4b0e      	ldr	r3, [pc, #56]	; (8000f68 <utilities_init+0x48>)
    \param [in]  priority  Priority to set
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 8000f30:	4a0e      	ldr	r2, [pc, #56]	; (8000f6c <utilities_init+0x4c>)
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 8000f32:	3801      	subs	r0, #1
 8000f34:	6058      	str	r0, [r3, #4]
    \param [in]  priority  Priority to set
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 8000f36:	6a10      	ldr	r0, [r2, #32]
 8000f38:	21c0      	movs	r1, #192	; 0xc0
 8000f3a:	0200      	lsls	r0, r0, #8
 8000f3c:	0a00      	lsrs	r0, r0, #8
 8000f3e:	0609      	lsls	r1, r1, #24
 8000f40:	4301      	orrs	r1, r0
 8000f42:	6211      	str	r1, [r2, #32]
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8000f44:	2200      	movs	r2, #0
 8000f46:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000f48:	2207      	movs	r2, #7
 8000f4a:	601a      	str	r2, [r3, #0]

  // Initialize UART
	USART_InitTypeDef usart_init;
	usart_init.USART_BaudRate = 115200;
 8000f4c:	23e1      	movs	r3, #225	; 0xe1
 8000f4e:	025b      	lsls	r3, r3, #9
	USART_StructInit(&usart_init);
 8000f50:	4668      	mov	r0, sp

	SysTick_Config(SystemCoreClock/1000);

  // Initialize UART
	USART_InitTypeDef usart_init;
	usart_init.USART_BaudRate = 115200;
 8000f52:	9300      	str	r3, [sp, #0]
	USART_StructInit(&usart_init);
 8000f54:	f7ff fcce 	bl	80008f4 <USART_StructInit>
	USART_Init(DEBUG_UART, &usart_init);
 8000f58:	4805      	ldr	r0, [pc, #20]	; (8000f70 <utilities_init+0x50>)
 8000f5a:	4669      	mov	r1, sp
 8000f5c:	f7ff fc7a 	bl	8000854 <USART_Init>
}
 8000f60:	b007      	add	sp, #28
 8000f62:	bd00      	pop	{pc}
 8000f64:	20000010 	.word	0x20000010
 8000f68:	e000e010 	.word	0xe000e010
 8000f6c:	e000ed00 	.word	0xe000ed00
 8000f70:	40013800 	.word	0x40013800

08000f74 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000f74:	480d      	ldr	r0, [pc, #52]	; (8000fac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000f76:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8000f78:	2100      	movs	r1, #0
  b LoopCopyDataInit
 8000f7a:	e003      	b.n	8000f84 <LoopCopyDataInit>

08000f7c <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8000f7c:	4b0c      	ldr	r3, [pc, #48]	; (8000fb0 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 8000f7e:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8000f80:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8000f82:	3104      	adds	r1, #4

08000f84 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8000f84:	480b      	ldr	r0, [pc, #44]	; (8000fb4 <LoopForever+0xa>)
  ldr r3, =_edata
 8000f86:	4b0c      	ldr	r3, [pc, #48]	; (8000fb8 <LoopForever+0xe>)
  adds r2, r0, r1
 8000f88:	1842      	adds	r2, r0, r1
  cmp r2, r3
 8000f8a:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8000f8c:	d3f6      	bcc.n	8000f7c <CopyDataInit>
  ldr r2, =_sbss
 8000f8e:	4a0b      	ldr	r2, [pc, #44]	; (8000fbc <LoopForever+0x12>)
  b LoopFillZerobss
 8000f90:	e002      	b.n	8000f98 <LoopFillZerobss>

08000f92 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8000f92:	2300      	movs	r3, #0
  str  r3, [r2]
 8000f94:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000f96:	3204      	adds	r2, #4

08000f98 <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 8000f98:	4b09      	ldr	r3, [pc, #36]	; (8000fc0 <LoopForever+0x16>)
  cmp r2, r3
 8000f9a:	429a      	cmp	r2, r3
  bcc FillZerobss
 8000f9c:	d3f9      	bcc.n	8000f92 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8000f9e:	f7ff ff17 	bl	8000dd0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000fa2:	f000 f811 	bl	8000fc8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fa6:	f7ff ff0d 	bl	8000dc4 <main>

08000faa <LoopForever>:
  
LoopForever:
    b LoopForever
 8000faa:	e7fe      	b.n	8000faa <LoopForever>

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000fac:	20002000 	.word	0x20002000
/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
  b LoopCopyDataInit

CopyDataInit:
  ldr r3, =_sidata
 8000fb0:	08001090 	.word	0x08001090
  ldr r3, [r3, r1]
  str r3, [r0, r1]
  adds r1, r1, #4

LoopCopyDataInit:
  ldr r0, =_sdata
 8000fb4:	20000000 	.word	0x20000000
  ldr r3, =_edata
 8000fb8:	20000014 	.word	0x20000014
  adds r2, r0, r1
  cmp r2, r3
  bcc CopyDataInit
  ldr r2, =_sbss
 8000fbc:	20000014 	.word	0x20000014
  str  r3, [r2]
  adds r2, r2, #4


LoopFillZerobss:
  ldr r3, = _ebss
 8000fc0:	20000018 	.word	0x20000018

08000fc4 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000fc4:	e7fe      	b.n	8000fc4 <ADC1_COMP_IRQHandler>
	...

08000fc8 <__libc_init_array>:
 8000fc8:	b570      	push	{r4, r5, r6, lr}
 8000fca:	4e0d      	ldr	r6, [pc, #52]	; (8001000 <__libc_init_array+0x38>)
 8000fcc:	4d0d      	ldr	r5, [pc, #52]	; (8001004 <__libc_init_array+0x3c>)
 8000fce:	2400      	movs	r4, #0
 8000fd0:	1bad      	subs	r5, r5, r6
 8000fd2:	10ad      	asrs	r5, r5, #2
 8000fd4:	d005      	beq.n	8000fe2 <__libc_init_array+0x1a>
 8000fd6:	00a3      	lsls	r3, r4, #2
 8000fd8:	58f3      	ldr	r3, [r6, r3]
 8000fda:	3401      	adds	r4, #1
 8000fdc:	4798      	blx	r3
 8000fde:	42a5      	cmp	r5, r4
 8000fe0:	d1f9      	bne.n	8000fd6 <__libc_init_array+0xe>
 8000fe2:	f000 f849 	bl	8001078 <_init>
 8000fe6:	4e08      	ldr	r6, [pc, #32]	; (8001008 <__libc_init_array+0x40>)
 8000fe8:	4d08      	ldr	r5, [pc, #32]	; (800100c <__libc_init_array+0x44>)
 8000fea:	2400      	movs	r4, #0
 8000fec:	1bad      	subs	r5, r5, r6
 8000fee:	10ad      	asrs	r5, r5, #2
 8000ff0:	d005      	beq.n	8000ffe <__libc_init_array+0x36>
 8000ff2:	00a3      	lsls	r3, r4, #2
 8000ff4:	58f3      	ldr	r3, [r6, r3]
 8000ff6:	3401      	adds	r4, #1
 8000ff8:	4798      	blx	r3
 8000ffa:	42a5      	cmp	r5, r4
 8000ffc:	d1f9      	bne.n	8000ff2 <__libc_init_array+0x2a>
 8000ffe:	bd70      	pop	{r4, r5, r6, pc}
	...

08001010 <gpio_pin_mapping>:
 8001010:	0400 4800 0100 0102 0400 4800 0200 0102     ...H.......H....
 8001020:	0000 4800 0200 0001 0000 4800 0040 0002     ...H.......H@...
 8001030:	0000 4800 0080 0002 0000 4800 0020 0002     ...H.......H ...
 8001040:	0400 4800 0040 0002 0800 4800 0080 0001     ...H@......H....
 8001050:	0000 4800 0100 0001 0400 4800 0400 0001     ...H.......H....
 8001060:	0000 4800 0001 0003 0000 4800 0008 0102     ...H.......H....
 8001070:	0000 4800 0004 0102                         ...H....

08001078 <_init>:
 8001078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800107a:	46c0      	nop			; (mov r8, r8)
 800107c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800107e:	bc08      	pop	{r3}
 8001080:	469e      	mov	lr, r3
 8001082:	4770      	bx	lr

08001084 <_fini>:
 8001084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001086:	46c0      	nop			; (mov r8, r8)
 8001088:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800108a:	bc08      	pop	{r3}
 800108c:	469e      	mov	lr, r3
 800108e:	4770      	bx	lr
