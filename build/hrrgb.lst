
build/hrrgb.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
080000c4 l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000014 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /tmp/ccsEGtlG.o
f108f85f l       *ABS*	00000000 BootRAM
08001ef0 l       .text	00000000 LoopCopyDataInit
08001ee8 l       .text	00000000 CopyDataInit
08001f04 l       .text	00000000 LoopFillZerobss
08001efe l       .text	00000000 FillZerobss
08001f16 l       .text	00000000 LoopForever
08001f30 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32f0xx_gpio.c
00000000 l    df *ABS*	00000000 stm32f0xx_rcc.c
20000000 l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32f0xx_tim.c
00000000 l    df *ABS*	00000000 stm32f0xx_usart.c
00000000 l    df *ABS*	00000000 _udivsi3.o
08001a94 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
08001b30 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32f0xx.c
00000000 l    df *ABS*	00000000 gpio_driver.c
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 RGB_driver.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /usr/lib/gcc/arm-none-eabi/4.8.2/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000018 l       .bss	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000018 l       .bss	00000000 __exidx_start
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
08000994 g     F .text	00000012 TIM_TimeBaseStructInit
080018b4 g     F .text	00000014 USART_SetGuardTime
08001994 g     F .text	00000018 USART_SetDEDeassertionTime
0800034c g     F .text	00000020 RCC_HSICmd
08000d5c g     F .text	00000018 TIM_ForcedOC2Config
080003e0 g     F .text	00000018 RCC_LSEDriveConfig
08001708 g     F .text	0000001c USART_MSBFirstCmd
08000438 g     F .text	00000024 RCC_PLLCmd
08000d40 g     F .text	00000004 TIM_SetCompare2
08000714 g     F .text	00000018 RCC_AHBPeriphResetCmd
080002a4 g     F .text	00000024 GPIO_PinAFConfig
08000f84 g     F .text	00000020 TIM_SelectCOM
08000804 g     F .text	0000000c RCC_ClearITPendingBit
08001de0 g     F .text	00000028 send_string
08000278 g     F .text	0000000c GPIO_ReadOutputDataBit
080018f8 g     F .text	00000018 USART_SetAutoRetryCount
08000f4c g     F .text	0000001c TIM_CCxCmd
080012fc g     F .text	0000001c TIM_SetIC4Prescaler
08000d9c g     F .text	00000020 TIM_CCPreloadControl
08001f30  w    F .text	00000002 TIM1_CC_IRQHandler
08001f30  w    F .text	00000002 HardFault_Handler
08001f8c g     O .text	00000068 gpio_pin_mapping
08001f30  w    F .text	00000002 ADC1_COMP_IRQHandler
08000dbc g     F .text	00000010 TIM_OC1PreloadConfig
08001d64 g     F .text	00000010 SysTick_Handler
08000494 g     F .text	0000000c RCC_MCOConfig
08001f30  w    F .text	00000002 PVD_IRQHandler
08000524 g     F .text	00000018 RCC_CECCLKConfig
0800200c g       .text	00000000 _sidata
08001f30  w    F .text	00000002 PendSV_Handler
08001f30  w    F .text	00000002 NMI_Handler
08001488 g     F .text	00000022 TIM_ETRClockMode2Config
08001f30  w    F .text	00000002 I2C1_IRQHandler
0800075c g     F .text	00000018 RCC_ITConfig
08000eac g     F .text	00000010 TIM_OC1NPolarityConfig
080016bc g     F .text	00000012 USART_DirectionModeCmd
08000d4c g     F .text	00000010 TIM_ForcedOC1Config
0800136c g     F .text	00000014 TIM_DMACmd
08001460 g     F .text	00000028 TIM_ETRClockMode1Config
080012e4 g     F .text	00000018 TIM_SetIC3Prescaler
080018c8 g     F .text	00000018 USART_SmartCardCmd
08001a34 g     F .text	0000000c USART_GetFlagStatus
08000e7c g     F .text	00000010 TIM_ClearOC3Ref
0800178c g     F .text	00000010 USART_SetReceiverTimeOut
0800200c g       .text	00000000 _etext
20000014 g       .bss	00000000 _sbss
080004a0 g     F .text	00000014 RCC_SYSCLKConfig
0800184c g     F .text	00000014 USART_MuteModeWakeUpConfig
080007a8 g     F .text	00000034 RCC_WaitForHSEStartUp
08001e08 g     F .text	00000078 RGB_init
0800181c g     F .text	00000012 USART_SetAddress
080017f8 g     F .text	00000014 USART_AutoBaudRateConfig
0800179c g     F .text	00000014 USART_SetPrescaler
080006a8 g     F .text	00000024 RCC_BackupResetCmd
080016ec g     F .text	0000001c USART_OneBitMethodCmd
08000ab8 g     F .text	00000020 TIM_CtrlPWMOutputs
08000470 g     F .text	00000024 RCC_ClockSecuritySystemCmd
080007dc g     F .text	00000014 RCC_ClearFlag
08000a64 g     F .text	00000020 TIM_Cmd
08000df4 g     F .text	00000018 TIM_OC4PreloadConfig
20000010 g     O .data	00000004 SystemCoreClock
08001d74 g     F .text	0000006c utilities_init
08001814 g     F .text	00000008 USART_ReceiveData
08000328 g     F .text	00000010 RCC_HSEConfig
08001a90 g     F .text	00000088 .hidden __udivsi3
0800133c g     F .text	00000008 TIM_ClearFlag
0800135c g     F .text	00000008 TIM_ClearITPendingBit
080009c8 g     F .text	00000004 TIM_GetCounter
080006e4 g     F .text	00000018 RCC_APB2PeriphClockCmd
080012a8 g     F .text	00000004 TIM_GetCapture3
08000168 g     F .text	000000c0 GPIO_Init
08000418 g     F .text	00000020 RCC_PLLConfig
080004f0 g     F .text	00000034 RCC_ADCCLKConfig
20000000 g       .data	00000000 _sdata
08001f30  w    F .text	00000002 SPI1_IRQHandler
080016a4 g     F .text	00000018 USART_Cmd
080012a0 g     F .text	00000004 TIM_GetCapture1
08000f34 g     F .text	00000018 TIM_SelectOCREFClear
08001934 g     F .text	00000018 USART_IrDACmd
080002a0 g     F .text	00000004 GPIO_Write
08001f30  w    F .text	00000002 TIM6_DAC_IRQHandler
08000284 g     F .text	00000006 GPIO_ReadOutputData
08000be8 g     F .text	00000088 TIM_OC3Init
080003c0 g     F .text	00000020 RCC_LSEConfig
08001a84 g     F .text	0000000a USART_ClearITPendingBit
08000684 g     F .text	00000024 RCC_RTCCLKCmd
08000810 g     F .text	000000f8 TIM_DeInit
080006fc g     F .text	00000018 RCC_APB1PeriphClockCmd
080007f0 g     F .text	00000014 RCC_GetITStatus
08001f34 g     F .text	00000048 __libc_init_array
08001330 g     F .text	0000000c TIM_GetFlagStatus
080006cc g     F .text	00000018 RCC_AHBPeriphClockCmd
08000e34 g     F .text	00000010 TIM_OC3FastConfig
08001f30  w    F .text	00000002 EXTI2_3_IRQHandler
08001830 g     F .text	0000001c USART_MuteModeCmd
08001380 g     F .text	00000020 TIM_SelectCCDMA
080016d0 g     F .text	0000001c USART_OverSampling8Cmd
08001ff4 g     F .text	00000000 _init
08001f30  w    F .text	00000002 I2C2_IRQHandler
08000a4c g     F .text	00000018 TIM_SetClockDivision
08001f30  w    F .text	00000002 TIM17_IRQHandler
08001f30  w    F .text	00000002 RTC_IRQHandler
20000018 g       .bss	00000000 _ebss
08001a44 g     F .text	00000040 USART_GetITStatus
08000ad8 g     F .text	00000088 TIM_OC1Init
08000de4 g     F .text	00000010 TIM_OC3PreloadConfig
08001ee0  w    F .text	00000038 Reset_Handler
08000270 g     F .text	00000006 GPIO_ReadInputData
080009c4 g     F .text	00000004 TIM_SetAutoreload
08001870 g     F .text	00000010 USART_LINBreakDetectLengthConfig
08000774 g     F .text	00000034 RCC_GetFlagStatus
08001860 g     F .text	00000010 USART_AddressDetectionConfig
0800028c g     F .text	00000004 GPIO_SetBits
080004b4 g     F .text	00000010 RCC_GetSYSCLKSource
08000a14 g     F .text	00000020 TIM_ARRPreloadConfig
08000294 g     F .text	0000000c GPIO_WriteBit
08001b2c g     F .text	00000000 .hidden __aeabi_idiv
08001344 g     F .text	00000016 TIM_GetITStatus
0800056c g     F .text	00000108 RCC_GetClocksFreq
08001f30  w    F .text	00000002 TIM16_IRQHandler
08000cec g     F .text	00000050 TIM_SelectOCxM
080015c0 g     F .text	000000a0 USART_Init
08001574 g     F .text	00000006 TIM_RemapConfig
08001f30  w    F .text	00000002 TIM3_IRQHandler
08001f30  w    F .text	00000002 EXTI4_15_IRQHandler
08001f30  w    F .text	00000002 RCC_IRQHandler
20000014 g       .bss	00000000 _bss
08001f30  w    F .text	00000002 DMA1_Channel1_IRQHandler
0800194c g     F .text	0000001c USART_DECmd
08000e0c g     F .text	00000010 TIM_OC1FastConfig
08001f30 g       .text	00000002 Default_Handler
0800189c g     F .text	00000018 USART_HalfDuplexCmd
08000dcc g     F .text	00000018 TIM_OC2PreloadConfig
08000674 g     F .text	00000010 RCC_RTCCLKConfig
080014ac g     F .text	00000010 TIM_SelectInputTrigger
08001f30  w    F .text	00000002 CEC_IRQHandler
08000380 g     F .text	00000020 RCC_HSI14Cmd
08001318 g     F .text	00000014 TIM_ITConfig
08000b60 g     F .text	00000088 TIM_OC2Init
08001f30  w    F .text	00000002 TIM14_IRQHandler
080019d4 g     F .text	00000032 USART_ITConfig
08001f30  w    F .text	00000002 DMA1_Channel4_5_IRQHandler
08001724 g     F .text	0000001c USART_DataInvCmd
080009a8 g     F .text	00000006 TIM_PrescalerConfig
08001754 g     F .text	0000001c USART_SWAPPinCmd
08000290 g     F .text	00000004 GPIO_ResetBits
08000f1c g     F .text	00000018 TIM_OC4PolarityConfig
080014bc g     F .text	00000018 TIM_SelectOutputTrigger
08001924 g     F .text	00000010 USART_IrDAConfig
08000d44 g     F .text	00000004 TIM_SetCompare3
08000c70 g     F .text	00000068 TIM_OC4Init
08001f30  w    F .text	00000002 TIM15_IRQHandler
080017b0 g     F .text	00000018 USART_STOPModeCmd
08001f30  w    F .text	00000002 EXTI0_1_IRQHandler
08001968 g     F .text	00000014 USART_DEPolarityConfig
08001554 g     F .text	00000020 TIM_SelectHallSensor
08001bec  w    F .text	00000002 .hidden __aeabi_ldiv0
080003a0 g     F .text	00000020 RCC_HSI14ADCRequestCmd
08001a20 g     F .text	00000014 USART_OverrunDetectionConfig
080012b0 g     F .text	00000018 TIM_SetIC1Prescaler
0800157c g     F .text	00000044 USART_DeInit
08000d84 g     F .text	00000018 TIM_ForcedOC4Config
08001f30  w    F .text	00000002 SPI2_IRQHandler
08000338 g     F .text	00000014 RCC_AdjustHSICalibrationValue
08001bf0 g     F .text	00000034 main
08001678 g     F .text	00000020 USART_ClockInit
080013b0 g     F .text	0000001c TIM_ITRxExternalClockConfig
08000eec g     F .text	00000018 TIM_OC3PolarityConfig
08001a90 g     F .text	00000000 .hidden __aeabi_uidiv
08001f30  w    F .text	00000002 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
080013a0 g     F .text	00000010 TIM_InternalClockConfig
08000e9c g     F .text	00000010 TIM_OC1PolarityConfig
08000e1c g     F .text	00000018 TIM_OC2FastConfig
080009c0 g     F .text	00000004 TIM_SetCounter
08001b2c g     F .text	000000ac .hidden __divsi3
08000d48 g     F .text	00000004 TIM_SetCompare4
080012a4 g     F .text	00000004 TIM_GetCapture2
08001a40 g     F .text	00000004 USART_ClearFlag
080009cc g     F .text	00000006 TIM_GetPrescaler
08000e6c g     F .text	00000010 TIM_ClearOC2Ref
08001c24 g     F .text	000000b4 SystemInit
0800036c g     F .text	00000014 RCC_AdjustHSI14CalibrationValue
08000fa4 g     F .text	00000164 TIM_ICInit
080000c4 g     F .text	000000a4 GPIO_DeInit
08002000 g     F .text	00000000 _fini
080002c8 g     F .text	00000060 RCC_DeInit
08001108 g     F .text	00000010 TIM_ICStructInit
08001118 g     F .text	00000188 TIM_PWMIConfig
080017c8 g     F .text	00000014 USART_StopModeWakeUpSourceConfig
08000ed4 g     F .text	00000018 TIM_OC2NPolarityConfig
08001f30  w    F .text	00000002 TS_IRQHandler
00000000  w      *UND*	00000000 __preinit_array_end
08000e5c g     F .text	00000010 TIM_ClearOC1Ref
08001f30  w    F .text	00000002 WWDG_IRQHandler
08000744 g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
20000014 g     O .bss	00000004 msTicks
0800045c g     F .text	00000014 RCC_PREDIV1Config
08001f30  w    F .text	00000002 TIM2_IRQHandler
080009f4 g     F .text	00000020 TIM_UpdateRequestConfig
08000d74 g     F .text	00000010 TIM_ForcedOC3Config
080013cc g     F .text	00000094 TIM_TIxExternalClockConfig
08000228 g     F .text	00000018 GPIO_StructInit
08001f30  w    F .text	00000002 DMA1_Channel2_3_IRQHandler
08000aa4 g     F .text	00000012 TIM_BDTRStructInit
08000cd8 g     F .text	00000014 TIM_OCStructInit
08001a08 g     F .text	00000016 USART_RequestCmd
08000f04 g     F .text	00000018 TIM_OC3NPolarityConfig
20001000 g       *ABS*	00000000 _estack
0800180c g     F .text	00000008 USART_SendData
08000f68 g     F .text	0000001c TIM_CCxNCmd
08001b18 g     F .text	00000012 .hidden __aeabi_uidivmod
080014ec g     F .text	00000018 TIM_SelectMasterSlaveMode
20000014 g       .data	00000000 _edata
080012ac g     F .text	00000004 TIM_GetCapture4
08001660 g     F .text	00000016 USART_StructInit
08001770 g     F .text	0000001c USART_ReceiverTimeOutCmd
08000908 g     F .text	0000008c TIM_TimeBaseInit
08001f30  w    F .text	00000002 USART2_IRQHandler
080018e0 g     F .text	00000018 USART_SmartCardNACKCmd
08001910 g     F .text	00000012 USART_SetBlockLength
08000000 g     O .isr_vector	00000000 g_pfnVectors
08001880 g     F .text	0000001c USART_LINCmd
08001364 g     F .text	00000008 TIM_DMAConfig
08000554 g     F .text	00000018 RCC_USARTCLKConfig
08001740 g     F .text	00000012 USART_InvPinCmd
0800132c g     F .text	00000004 TIM_GenerateEvent
00000000  w      *UND*	00000000 __init_array_start
08001bec  w    F .text	00000002 .hidden __aeabi_idiv0
08000a84 g     F .text	00000020 TIM_BDTRConfig
0800053c g     F .text	00000018 RCC_I2CCLKConfig
080004d8 g     F .text	00000018 RCC_PCLKConfig
08001f30  w    F .text	00000002 FLASH_IRQHandler
08000240 g     F .text	00000024 GPIO_PinLockConfig
08001f30  w    F .text	00000002 USART1_IRQHandler
08001e80 g     F .text	00000044 write_RGB
080003f8 g     F .text	00000020 RCC_LSICmd
080012c8 g     F .text	0000001c TIM_SetIC2Prescaler
08001504 g     F .text	00000016 TIM_ETRConfig
08001698 g     F .text	0000000c USART_ClockStructInit
0800072c g     F .text	00000018 RCC_APB2PeriphResetCmd
080014d4 g     F .text	00000018 TIM_SelectSlaveMode
080017dc g     F .text	0000001c USART_AutoBaudRateCmd
08001f30  w    F .text	00000002 TIM1_BRK_UP_TRG_COM_IRQHandler
08000e8c g     F .text	00000010 TIM_ClearOC4Ref
08001cf0 g     F .text	00000074 gpio_init
08000a34 g     F .text	00000018 TIM_SelectOnePulseMode
0800151c g     F .text	00000038 TIM_EncoderInterfaceConfig
00000000  w      *UND*	00000000 __preinit_array_start
08000d3c g     F .text	00000004 TIM_SetCompare1
08000ebc g     F .text	00000018 TIM_OC2PolarityConfig
08001bd8 g     F .text	00000012 .hidden __aeabi_idivmod
080009d4 g     F .text	00000020 TIM_UpdateDisableConfig
08000264 g     F .text	0000000c GPIO_ReadInputDataBit
080019ac g     F .text	00000012 USART_DMACmd
08000e44 g     F .text	00000018 TIM_OC4FastConfig
0800197c g     F .text	00000018 USART_SetDEAssertionTime
08001cd8 g     F .text	00000016 gpiopin_to_gpiopinsource
080004c4 g     F .text	00000014 RCC_HCLKConfig
080009b0 g     F .text	00000010 TIM_CounterModeConfig
08001ec4 g     F .text	0000001c write_debug_led
080019c0 g     F .text	00000014 USART_DMAReceptionErrorConfig



Disassembly of section .text:

080000c4 <GPIO_DeInit>:
 80000c4:	b508      	push	{r3, lr}
 80000c6:	2390      	movs	r3, #144	; 0x90
 80000c8:	05db      	lsls	r3, r3, #23
 80000ca:	4298      	cmp	r0, r3
 80000cc:	d017      	beq.n	80000fe <GPIO_DeInit+0x3a>
 80000ce:	4b22      	ldr	r3, [pc, #136]	; (8000158 <GPIO_DeInit+0x94>)
 80000d0:	4298      	cmp	r0, r3
 80000d2:	d01f      	beq.n	8000114 <GPIO_DeInit+0x50>
 80000d4:	4b21      	ldr	r3, [pc, #132]	; (800015c <GPIO_DeInit+0x98>)
 80000d6:	4298      	cmp	r0, r3
 80000d8:	d027      	beq.n	800012a <GPIO_DeInit+0x66>
 80000da:	4b21      	ldr	r3, [pc, #132]	; (8000160 <GPIO_DeInit+0x9c>)
 80000dc:	4298      	cmp	r0, r3
 80000de:	d02f      	beq.n	8000140 <GPIO_DeInit+0x7c>
 80000e0:	4b20      	ldr	r3, [pc, #128]	; (8000164 <GPIO_DeInit+0xa0>)
 80000e2:	4298      	cmp	r0, r3
 80000e4:	d000      	beq.n	80000e8 <GPIO_DeInit+0x24>
 80000e6:	bd08      	pop	{r3, pc}
 80000e8:	2080      	movs	r0, #128	; 0x80
 80000ea:	03c0      	lsls	r0, r0, #15
 80000ec:	2101      	movs	r1, #1
 80000ee:	f000 fb11 	bl	8000714 <RCC_AHBPeriphResetCmd>
 80000f2:	2080      	movs	r0, #128	; 0x80
 80000f4:	03c0      	lsls	r0, r0, #15
 80000f6:	2100      	movs	r1, #0
 80000f8:	f000 fb0c 	bl	8000714 <RCC_AHBPeriphResetCmd>
 80000fc:	e7f3      	b.n	80000e6 <GPIO_DeInit+0x22>
 80000fe:	2080      	movs	r0, #128	; 0x80
 8000100:	0280      	lsls	r0, r0, #10
 8000102:	2101      	movs	r1, #1
 8000104:	f000 fb06 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000108:	2080      	movs	r0, #128	; 0x80
 800010a:	0280      	lsls	r0, r0, #10
 800010c:	2100      	movs	r1, #0
 800010e:	f000 fb01 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000112:	e7e8      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000114:	2080      	movs	r0, #128	; 0x80
 8000116:	02c0      	lsls	r0, r0, #11
 8000118:	2101      	movs	r1, #1
 800011a:	f000 fafb 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800011e:	2080      	movs	r0, #128	; 0x80
 8000120:	02c0      	lsls	r0, r0, #11
 8000122:	2100      	movs	r1, #0
 8000124:	f000 faf6 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000128:	e7dd      	b.n	80000e6 <GPIO_DeInit+0x22>
 800012a:	2080      	movs	r0, #128	; 0x80
 800012c:	0300      	lsls	r0, r0, #12
 800012e:	2101      	movs	r1, #1
 8000130:	f000 faf0 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000134:	2080      	movs	r0, #128	; 0x80
 8000136:	0300      	lsls	r0, r0, #12
 8000138:	2100      	movs	r1, #0
 800013a:	f000 faeb 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800013e:	e7d2      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000140:	2080      	movs	r0, #128	; 0x80
 8000142:	0340      	lsls	r0, r0, #13
 8000144:	2101      	movs	r1, #1
 8000146:	f000 fae5 	bl	8000714 <RCC_AHBPeriphResetCmd>
 800014a:	2080      	movs	r0, #128	; 0x80
 800014c:	0340      	lsls	r0, r0, #13
 800014e:	2100      	movs	r1, #0
 8000150:	f000 fae0 	bl	8000714 <RCC_AHBPeriphResetCmd>
 8000154:	e7c7      	b.n	80000e6 <GPIO_DeInit+0x22>
 8000156:	46c0      	nop			; (mov r8, r8)
 8000158:	48000400 	.word	0x48000400
 800015c:	48000800 	.word	0x48000800
 8000160:	48000c00 	.word	0x48000c00
 8000164:	48001400 	.word	0x48001400

08000168 <GPIO_Init>:
 8000168:	b5f0      	push	{r4, r5, r6, r7, lr}
 800016a:	465f      	mov	r7, fp
 800016c:	4656      	mov	r6, sl
 800016e:	4644      	mov	r4, r8
 8000170:	464d      	mov	r5, r9
 8000172:	b4f0      	push	{r4, r5, r6, r7}
 8000174:	b083      	sub	sp, #12
 8000176:	9101      	str	r1, [sp, #4]
 8000178:	680f      	ldr	r7, [r1, #0]
 800017a:	2103      	movs	r1, #3
 800017c:	2200      	movs	r2, #0
 800017e:	2300      	movs	r3, #0
 8000180:	2601      	movs	r6, #1
 8000182:	4688      	mov	r8, r1
 8000184:	e003      	b.n	800018e <GPIO_Init+0x26>
 8000186:	3301      	adds	r3, #1
 8000188:	3202      	adds	r2, #2
 800018a:	2b10      	cmp	r3, #16
 800018c:	d02c      	beq.n	80001e8 <GPIO_Init+0x80>
 800018e:	1c34      	adds	r4, r6, #0
 8000190:	409c      	lsls	r4, r3
 8000192:	1c3d      	adds	r5, r7, #0
 8000194:	4025      	ands	r5, r4
 8000196:	42a5      	cmp	r5, r4
 8000198:	d1f5      	bne.n	8000186 <GPIO_Init+0x1e>
 800019a:	9c01      	ldr	r4, [sp, #4]
 800019c:	2101      	movs	r1, #1
 800019e:	7924      	ldrb	r4, [r4, #4]
 80001a0:	4249      	negs	r1, r1
 80001a2:	46a3      	mov	fp, r4
 80001a4:	468c      	mov	ip, r1
 80001a6:	44dc      	add	ip, fp
 80001a8:	4664      	mov	r4, ip
 80001aa:	b2e4      	uxtb	r4, r4
 80001ac:	2c01      	cmp	r4, #1
 80001ae:	d922      	bls.n	80001f6 <GPIO_Init+0x8e>
 80001b0:	4645      	mov	r5, r8
 80001b2:	4095      	lsls	r5, r2
 80001b4:	43ed      	mvns	r5, r5
 80001b6:	46ac      	mov	ip, r5
 80001b8:	6805      	ldr	r5, [r0, #0]
 80001ba:	4664      	mov	r4, ip
 80001bc:	4025      	ands	r5, r4
 80001be:	6005      	str	r5, [r0, #0]
 80001c0:	6805      	ldr	r5, [r0, #0]
 80001c2:	465c      	mov	r4, fp
 80001c4:	4094      	lsls	r4, r2
 80001c6:	432c      	orrs	r4, r5
 80001c8:	6004      	str	r4, [r0, #0]
 80001ca:	68c4      	ldr	r4, [r0, #12]
 80001cc:	4645      	mov	r5, r8
 80001ce:	4095      	lsls	r5, r2
 80001d0:	9901      	ldr	r1, [sp, #4]
 80001d2:	43ac      	bics	r4, r5
 80001d4:	60c4      	str	r4, [r0, #12]
 80001d6:	79cc      	ldrb	r4, [r1, #7]
 80001d8:	68c5      	ldr	r5, [r0, #12]
 80001da:	4094      	lsls	r4, r2
 80001dc:	432c      	orrs	r4, r5
 80001de:	3301      	adds	r3, #1
 80001e0:	60c4      	str	r4, [r0, #12]
 80001e2:	3202      	adds	r2, #2
 80001e4:	2b10      	cmp	r3, #16
 80001e6:	d1d2      	bne.n	800018e <GPIO_Init+0x26>
 80001e8:	b003      	add	sp, #12
 80001ea:	bc3c      	pop	{r2, r3, r4, r5}
 80001ec:	4690      	mov	r8, r2
 80001ee:	4699      	mov	r9, r3
 80001f0:	46a2      	mov	sl, r4
 80001f2:	46ab      	mov	fp, r5
 80001f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80001f6:	4644      	mov	r4, r8
 80001f8:	6881      	ldr	r1, [r0, #8]
 80001fa:	4094      	lsls	r4, r2
 80001fc:	43e4      	mvns	r4, r4
 80001fe:	4021      	ands	r1, r4
 8000200:	6081      	str	r1, [r0, #8]
 8000202:	9901      	ldr	r1, [sp, #4]
 8000204:	46a4      	mov	ip, r4
 8000206:	7949      	ldrb	r1, [r1, #5]
 8000208:	6884      	ldr	r4, [r0, #8]
 800020a:	4091      	lsls	r1, r2
 800020c:	4321      	orrs	r1, r4
 800020e:	6081      	str	r1, [r0, #8]
 8000210:	6841      	ldr	r1, [r0, #4]
 8000212:	b28c      	uxth	r4, r1
 8000214:	9901      	ldr	r1, [sp, #4]
 8000216:	43ac      	bics	r4, r5
 8000218:	8084      	strh	r4, [r0, #4]
 800021a:	7989      	ldrb	r1, [r1, #6]
 800021c:	6845      	ldr	r5, [r0, #4]
 800021e:	4099      	lsls	r1, r3
 8000220:	430d      	orrs	r5, r1
 8000222:	b2ad      	uxth	r5, r5
 8000224:	8085      	strh	r5, [r0, #4]
 8000226:	e7c7      	b.n	80001b8 <GPIO_Init+0x50>

08000228 <GPIO_StructInit>:
 8000228:	4b04      	ldr	r3, [pc, #16]	; (800023c <GPIO_StructInit+0x14>)
 800022a:	2202      	movs	r2, #2
 800022c:	6003      	str	r3, [r0, #0]
 800022e:	2300      	movs	r3, #0
 8000230:	7103      	strb	r3, [r0, #4]
 8000232:	7142      	strb	r2, [r0, #5]
 8000234:	7183      	strb	r3, [r0, #6]
 8000236:	71c3      	strb	r3, [r0, #7]
 8000238:	4770      	bx	lr
 800023a:	46c0      	nop			; (mov r8, r8)
 800023c:	0000ffff 	.word	0x0000ffff

08000240 <GPIO_PinLockConfig>:
 8000240:	2380      	movs	r3, #128	; 0x80
 8000242:	b082      	sub	sp, #8
 8000244:	025b      	lsls	r3, r3, #9
 8000246:	9301      	str	r3, [sp, #4]
 8000248:	9b01      	ldr	r3, [sp, #4]
 800024a:	430b      	orrs	r3, r1
 800024c:	9301      	str	r3, [sp, #4]
 800024e:	9b01      	ldr	r3, [sp, #4]
 8000250:	61c3      	str	r3, [r0, #28]
 8000252:	61c1      	str	r1, [r0, #28]
 8000254:	9b01      	ldr	r3, [sp, #4]
 8000256:	61c3      	str	r3, [r0, #28]
 8000258:	69c3      	ldr	r3, [r0, #28]
 800025a:	9301      	str	r3, [sp, #4]
 800025c:	69c3      	ldr	r3, [r0, #28]
 800025e:	9301      	str	r3, [sp, #4]
 8000260:	b002      	add	sp, #8
 8000262:	4770      	bx	lr

08000264 <GPIO_ReadInputDataBit>:
 8000264:	6900      	ldr	r0, [r0, #16]
 8000266:	4008      	ands	r0, r1
 8000268:	1e43      	subs	r3, r0, #1
 800026a:	4198      	sbcs	r0, r3
 800026c:	b2c0      	uxtb	r0, r0
 800026e:	4770      	bx	lr

08000270 <GPIO_ReadInputData>:
 8000270:	6900      	ldr	r0, [r0, #16]
 8000272:	b280      	uxth	r0, r0
 8000274:	4770      	bx	lr
 8000276:	46c0      	nop			; (mov r8, r8)

08000278 <GPIO_ReadOutputDataBit>:
 8000278:	6940      	ldr	r0, [r0, #20]
 800027a:	4008      	ands	r0, r1
 800027c:	1e43      	subs	r3, r0, #1
 800027e:	4198      	sbcs	r0, r3
 8000280:	b2c0      	uxtb	r0, r0
 8000282:	4770      	bx	lr

08000284 <GPIO_ReadOutputData>:
 8000284:	6940      	ldr	r0, [r0, #20]
 8000286:	b280      	uxth	r0, r0
 8000288:	4770      	bx	lr
 800028a:	46c0      	nop			; (mov r8, r8)

0800028c <GPIO_SetBits>:
 800028c:	6181      	str	r1, [r0, #24]
 800028e:	4770      	bx	lr

08000290 <GPIO_ResetBits>:
 8000290:	8501      	strh	r1, [r0, #40]	; 0x28
 8000292:	4770      	bx	lr

08000294 <GPIO_WriteBit>:
 8000294:	2a00      	cmp	r2, #0
 8000296:	d101      	bne.n	800029c <GPIO_WriteBit+0x8>
 8000298:	8501      	strh	r1, [r0, #40]	; 0x28
 800029a:	4770      	bx	lr
 800029c:	6181      	str	r1, [r0, #24]
 800029e:	e7fc      	b.n	800029a <GPIO_WriteBit+0x6>

080002a0 <GPIO_Write>:
 80002a0:	8281      	strh	r1, [r0, #20]
 80002a2:	4770      	bx	lr

080002a4 <GPIO_PinAFConfig>:
 80002a4:	2307      	movs	r3, #7
 80002a6:	400b      	ands	r3, r1
 80002a8:	08c9      	lsrs	r1, r1, #3
 80002aa:	0089      	lsls	r1, r1, #2
 80002ac:	1840      	adds	r0, r0, r1
 80002ae:	b510      	push	{r4, lr}
 80002b0:	6a01      	ldr	r1, [r0, #32]
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	240f      	movs	r4, #15
 80002b6:	409c      	lsls	r4, r3
 80002b8:	43a1      	bics	r1, r4
 80002ba:	6201      	str	r1, [r0, #32]
 80002bc:	6a01      	ldr	r1, [r0, #32]
 80002be:	409a      	lsls	r2, r3
 80002c0:	1c13      	adds	r3, r2, #0
 80002c2:	430b      	orrs	r3, r1
 80002c4:	6203      	str	r3, [r0, #32]
 80002c6:	bd10      	pop	{r4, pc}

080002c8 <RCC_DeInit>:
 80002c8:	4b11      	ldr	r3, [pc, #68]	; (8000310 <RCC_DeInit+0x48>)
 80002ca:	2201      	movs	r2, #1
 80002cc:	6819      	ldr	r1, [r3, #0]
 80002ce:	4311      	orrs	r1, r2
 80002d0:	6019      	str	r1, [r3, #0]
 80002d2:	6858      	ldr	r0, [r3, #4]
 80002d4:	490f      	ldr	r1, [pc, #60]	; (8000314 <RCC_DeInit+0x4c>)
 80002d6:	4001      	ands	r1, r0
 80002d8:	6059      	str	r1, [r3, #4]
 80002da:	6818      	ldr	r0, [r3, #0]
 80002dc:	490e      	ldr	r1, [pc, #56]	; (8000318 <RCC_DeInit+0x50>)
 80002de:	4001      	ands	r1, r0
 80002e0:	6019      	str	r1, [r3, #0]
 80002e2:	6818      	ldr	r0, [r3, #0]
 80002e4:	490d      	ldr	r1, [pc, #52]	; (800031c <RCC_DeInit+0x54>)
 80002e6:	4001      	ands	r1, r0
 80002e8:	6019      	str	r1, [r3, #0]
 80002ea:	6858      	ldr	r0, [r3, #4]
 80002ec:	490c      	ldr	r1, [pc, #48]	; (8000320 <RCC_DeInit+0x58>)
 80002ee:	4001      	ands	r1, r0
 80002f0:	6059      	str	r1, [r3, #4]
 80002f2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80002f4:	200f      	movs	r0, #15
 80002f6:	4381      	bics	r1, r0
 80002f8:	62d9      	str	r1, [r3, #44]	; 0x2c
 80002fa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80002fc:	4909      	ldr	r1, [pc, #36]	; (8000324 <RCC_DeInit+0x5c>)
 80002fe:	4001      	ands	r1, r0
 8000300:	6319      	str	r1, [r3, #48]	; 0x30
 8000302:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000304:	4391      	bics	r1, r2
 8000306:	2200      	movs	r2, #0
 8000308:	6359      	str	r1, [r3, #52]	; 0x34
 800030a:	609a      	str	r2, [r3, #8]
 800030c:	4770      	bx	lr
 800030e:	46c0      	nop			; (mov r8, r8)
 8000310:	40021000 	.word	0x40021000
 8000314:	f8ffb80c 	.word	0xf8ffb80c
 8000318:	fef6ffff 	.word	0xfef6ffff
 800031c:	fffbffff 	.word	0xfffbffff
 8000320:	ffc0ffff 	.word	0xffc0ffff
 8000324:	fffffeac 	.word	0xfffffeac

08000328 <RCC_HSEConfig>:
 8000328:	4b02      	ldr	r3, [pc, #8]	; (8000334 <RCC_HSEConfig+0xc>)
 800032a:	2200      	movs	r2, #0
 800032c:	701a      	strb	r2, [r3, #0]
 800032e:	7018      	strb	r0, [r3, #0]
 8000330:	4770      	bx	lr
 8000332:	46c0      	nop			; (mov r8, r8)
 8000334:	40021002 	.word	0x40021002

08000338 <RCC_AdjustHSICalibrationValue>:
 8000338:	4b03      	ldr	r3, [pc, #12]	; (8000348 <RCC_AdjustHSICalibrationValue+0x10>)
 800033a:	21f8      	movs	r1, #248	; 0xf8
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	00c0      	lsls	r0, r0, #3
 8000340:	438a      	bics	r2, r1
 8000342:	4310      	orrs	r0, r2
 8000344:	6018      	str	r0, [r3, #0]
 8000346:	4770      	bx	lr
 8000348:	40021000 	.word	0x40021000

0800034c <RCC_HSICmd>:
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <RCC_HSICmd+0x1c>)
 800034e:	2800      	cmp	r0, #0
 8000350:	d104      	bne.n	800035c <RCC_HSICmd+0x10>
 8000352:	681a      	ldr	r2, [r3, #0]
 8000354:	2101      	movs	r1, #1
 8000356:	438a      	bics	r2, r1
 8000358:	601a      	str	r2, [r3, #0]
 800035a:	4770      	bx	lr
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	2201      	movs	r2, #1
 8000360:	430a      	orrs	r2, r1
 8000362:	601a      	str	r2, [r3, #0]
 8000364:	e7f9      	b.n	800035a <RCC_HSICmd+0xe>
 8000366:	46c0      	nop			; (mov r8, r8)
 8000368:	40021000 	.word	0x40021000

0800036c <RCC_AdjustHSI14CalibrationValue>:
 800036c:	4b03      	ldr	r3, [pc, #12]	; (800037c <RCC_AdjustHSI14CalibrationValue+0x10>)
 800036e:	21f8      	movs	r1, #248	; 0xf8
 8000370:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000372:	00c0      	lsls	r0, r0, #3
 8000374:	438a      	bics	r2, r1
 8000376:	4310      	orrs	r0, r2
 8000378:	6358      	str	r0, [r3, #52]	; 0x34
 800037a:	4770      	bx	lr
 800037c:	40021000 	.word	0x40021000

08000380 <RCC_HSI14Cmd>:
 8000380:	4b06      	ldr	r3, [pc, #24]	; (800039c <RCC_HSI14Cmd+0x1c>)
 8000382:	2800      	cmp	r0, #0
 8000384:	d104      	bne.n	8000390 <RCC_HSI14Cmd+0x10>
 8000386:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000388:	2101      	movs	r1, #1
 800038a:	438a      	bics	r2, r1
 800038c:	635a      	str	r2, [r3, #52]	; 0x34
 800038e:	4770      	bx	lr
 8000390:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000392:	2201      	movs	r2, #1
 8000394:	430a      	orrs	r2, r1
 8000396:	635a      	str	r2, [r3, #52]	; 0x34
 8000398:	e7f9      	b.n	800038e <RCC_HSI14Cmd+0xe>
 800039a:	46c0      	nop			; (mov r8, r8)
 800039c:	40021000 	.word	0x40021000

080003a0 <RCC_HSI14ADCRequestCmd>:
 80003a0:	4b06      	ldr	r3, [pc, #24]	; (80003bc <RCC_HSI14ADCRequestCmd+0x1c>)
 80003a2:	2800      	cmp	r0, #0
 80003a4:	d104      	bne.n	80003b0 <RCC_HSI14ADCRequestCmd+0x10>
 80003a6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80003a8:	2204      	movs	r2, #4
 80003aa:	430a      	orrs	r2, r1
 80003ac:	635a      	str	r2, [r3, #52]	; 0x34
 80003ae:	4770      	bx	lr
 80003b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80003b2:	2104      	movs	r1, #4
 80003b4:	438a      	bics	r2, r1
 80003b6:	635a      	str	r2, [r3, #52]	; 0x34
 80003b8:	e7f9      	b.n	80003ae <RCC_HSI14ADCRequestCmd+0xe>
 80003ba:	46c0      	nop			; (mov r8, r8)
 80003bc:	40021000 	.word	0x40021000

080003c0 <RCC_LSEConfig>:
 80003c0:	4b06      	ldr	r3, [pc, #24]	; (80003dc <RCC_LSEConfig+0x1c>)
 80003c2:	2101      	movs	r1, #1
 80003c4:	6a1a      	ldr	r2, [r3, #32]
 80003c6:	438a      	bics	r2, r1
 80003c8:	621a      	str	r2, [r3, #32]
 80003ca:	6a1a      	ldr	r2, [r3, #32]
 80003cc:	2104      	movs	r1, #4
 80003ce:	438a      	bics	r2, r1
 80003d0:	621a      	str	r2, [r3, #32]
 80003d2:	6a1a      	ldr	r2, [r3, #32]
 80003d4:	4310      	orrs	r0, r2
 80003d6:	6218      	str	r0, [r3, #32]
 80003d8:	4770      	bx	lr
 80003da:	46c0      	nop			; (mov r8, r8)
 80003dc:	40021000 	.word	0x40021000

080003e0 <RCC_LSEDriveConfig>:
 80003e0:	4b04      	ldr	r3, [pc, #16]	; (80003f4 <RCC_LSEDriveConfig+0x14>)
 80003e2:	2118      	movs	r1, #24
 80003e4:	6a1a      	ldr	r2, [r3, #32]
 80003e6:	438a      	bics	r2, r1
 80003e8:	621a      	str	r2, [r3, #32]
 80003ea:	6a1a      	ldr	r2, [r3, #32]
 80003ec:	4310      	orrs	r0, r2
 80003ee:	6218      	str	r0, [r3, #32]
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			; (mov r8, r8)
 80003f4:	40021000 	.word	0x40021000

080003f8 <RCC_LSICmd>:
 80003f8:	4b06      	ldr	r3, [pc, #24]	; (8000414 <RCC_LSICmd+0x1c>)
 80003fa:	2800      	cmp	r0, #0
 80003fc:	d104      	bne.n	8000408 <RCC_LSICmd+0x10>
 80003fe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000400:	2101      	movs	r1, #1
 8000402:	438a      	bics	r2, r1
 8000404:	625a      	str	r2, [r3, #36]	; 0x24
 8000406:	4770      	bx	lr
 8000408:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800040a:	2201      	movs	r2, #1
 800040c:	430a      	orrs	r2, r1
 800040e:	625a      	str	r2, [r3, #36]	; 0x24
 8000410:	e7f9      	b.n	8000406 <RCC_LSICmd+0xe>
 8000412:	46c0      	nop			; (mov r8, r8)
 8000414:	40021000 	.word	0x40021000

08000418 <RCC_PLLConfig>:
 8000418:	4b05      	ldr	r3, [pc, #20]	; (8000430 <RCC_PLLConfig+0x18>)
 800041a:	b510      	push	{r4, lr}
 800041c:	4a05      	ldr	r2, [pc, #20]	; (8000434 <RCC_PLLConfig+0x1c>)
 800041e:	685c      	ldr	r4, [r3, #4]
 8000420:	4022      	ands	r2, r4
 8000422:	605a      	str	r2, [r3, #4]
 8000424:	685a      	ldr	r2, [r3, #4]
 8000426:	4311      	orrs	r1, r2
 8000428:	4308      	orrs	r0, r1
 800042a:	6058      	str	r0, [r3, #4]
 800042c:	bd10      	pop	{r4, pc}
 800042e:	46c0      	nop			; (mov r8, r8)
 8000430:	40021000 	.word	0x40021000
 8000434:	ffc2ffff 	.word	0xffc2ffff

08000438 <RCC_PLLCmd>:
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <RCC_PLLCmd+0x1c>)
 800043a:	6819      	ldr	r1, [r3, #0]
 800043c:	2800      	cmp	r0, #0
 800043e:	d103      	bne.n	8000448 <RCC_PLLCmd+0x10>
 8000440:	4a05      	ldr	r2, [pc, #20]	; (8000458 <RCC_PLLCmd+0x20>)
 8000442:	400a      	ands	r2, r1
 8000444:	601a      	str	r2, [r3, #0]
 8000446:	4770      	bx	lr
 8000448:	2280      	movs	r2, #128	; 0x80
 800044a:	0452      	lsls	r2, r2, #17
 800044c:	430a      	orrs	r2, r1
 800044e:	601a      	str	r2, [r3, #0]
 8000450:	e7f9      	b.n	8000446 <RCC_PLLCmd+0xe>
 8000452:	46c0      	nop			; (mov r8, r8)
 8000454:	40021000 	.word	0x40021000
 8000458:	feffffff 	.word	0xfeffffff

0800045c <RCC_PREDIV1Config>:
 800045c:	4b03      	ldr	r3, [pc, #12]	; (800046c <RCC_PREDIV1Config+0x10>)
 800045e:	210f      	movs	r1, #15
 8000460:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000462:	438a      	bics	r2, r1
 8000464:	4310      	orrs	r0, r2
 8000466:	62d8      	str	r0, [r3, #44]	; 0x2c
 8000468:	4770      	bx	lr
 800046a:	46c0      	nop			; (mov r8, r8)
 800046c:	40021000 	.word	0x40021000

08000470 <RCC_ClockSecuritySystemCmd>:
 8000470:	4b06      	ldr	r3, [pc, #24]	; (800048c <RCC_ClockSecuritySystemCmd+0x1c>)
 8000472:	6819      	ldr	r1, [r3, #0]
 8000474:	2800      	cmp	r0, #0
 8000476:	d103      	bne.n	8000480 <RCC_ClockSecuritySystemCmd+0x10>
 8000478:	4a05      	ldr	r2, [pc, #20]	; (8000490 <RCC_ClockSecuritySystemCmd+0x20>)
 800047a:	400a      	ands	r2, r1
 800047c:	601a      	str	r2, [r3, #0]
 800047e:	4770      	bx	lr
 8000480:	2280      	movs	r2, #128	; 0x80
 8000482:	0312      	lsls	r2, r2, #12
 8000484:	430a      	orrs	r2, r1
 8000486:	601a      	str	r2, [r3, #0]
 8000488:	e7f9      	b.n	800047e <RCC_ClockSecuritySystemCmd+0xe>
 800048a:	46c0      	nop			; (mov r8, r8)
 800048c:	40021000 	.word	0x40021000
 8000490:	fff7ffff 	.word	0xfff7ffff

08000494 <RCC_MCOConfig>:
 8000494:	4b01      	ldr	r3, [pc, #4]	; (800049c <RCC_MCOConfig+0x8>)
 8000496:	7018      	strb	r0, [r3, #0]
 8000498:	4770      	bx	lr
 800049a:	46c0      	nop			; (mov r8, r8)
 800049c:	40021007 	.word	0x40021007

080004a0 <RCC_SYSCLKConfig>:
 80004a0:	4b03      	ldr	r3, [pc, #12]	; (80004b0 <RCC_SYSCLKConfig+0x10>)
 80004a2:	2103      	movs	r1, #3
 80004a4:	685a      	ldr	r2, [r3, #4]
 80004a6:	438a      	bics	r2, r1
 80004a8:	4310      	orrs	r0, r2
 80004aa:	6058      	str	r0, [r3, #4]
 80004ac:	4770      	bx	lr
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	40021000 	.word	0x40021000

080004b4 <RCC_GetSYSCLKSource>:
 80004b4:	4b02      	ldr	r3, [pc, #8]	; (80004c0 <RCC_GetSYSCLKSource+0xc>)
 80004b6:	200c      	movs	r0, #12
 80004b8:	685b      	ldr	r3, [r3, #4]
 80004ba:	4018      	ands	r0, r3
 80004bc:	4770      	bx	lr
 80004be:	46c0      	nop			; (mov r8, r8)
 80004c0:	40021000 	.word	0x40021000

080004c4 <RCC_HCLKConfig>:
 80004c4:	4b03      	ldr	r3, [pc, #12]	; (80004d4 <RCC_HCLKConfig+0x10>)
 80004c6:	21f0      	movs	r1, #240	; 0xf0
 80004c8:	685a      	ldr	r2, [r3, #4]
 80004ca:	438a      	bics	r2, r1
 80004cc:	4310      	orrs	r0, r2
 80004ce:	6058      	str	r0, [r3, #4]
 80004d0:	4770      	bx	lr
 80004d2:	46c0      	nop			; (mov r8, r8)
 80004d4:	40021000 	.word	0x40021000

080004d8 <RCC_PCLKConfig>:
 80004d8:	4b03      	ldr	r3, [pc, #12]	; (80004e8 <RCC_PCLKConfig+0x10>)
 80004da:	4a04      	ldr	r2, [pc, #16]	; (80004ec <RCC_PCLKConfig+0x14>)
 80004dc:	6859      	ldr	r1, [r3, #4]
 80004de:	400a      	ands	r2, r1
 80004e0:	4310      	orrs	r0, r2
 80004e2:	6058      	str	r0, [r3, #4]
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)
 80004e8:	40021000 	.word	0x40021000
 80004ec:	fffff8ff 	.word	0xfffff8ff

080004f0 <RCC_ADCCLKConfig>:
 80004f0:	4b09      	ldr	r3, [pc, #36]	; (8000518 <RCC_ADCCLKConfig+0x28>)
 80004f2:	4a0a      	ldr	r2, [pc, #40]	; (800051c <RCC_ADCCLKConfig+0x2c>)
 80004f4:	6859      	ldr	r1, [r3, #4]
 80004f6:	400a      	ands	r2, r1
 80004f8:	605a      	str	r2, [r3, #4]
 80004fa:	6859      	ldr	r1, [r3, #4]
 80004fc:	0402      	lsls	r2, r0, #16
 80004fe:	0c12      	lsrs	r2, r2, #16
 8000500:	430a      	orrs	r2, r1
 8000502:	605a      	str	r2, [r3, #4]
 8000504:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000506:	4a06      	ldr	r2, [pc, #24]	; (8000520 <RCC_ADCCLKConfig+0x30>)
 8000508:	0c00      	lsrs	r0, r0, #16
 800050a:	400a      	ands	r2, r1
 800050c:	631a      	str	r2, [r3, #48]	; 0x30
 800050e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000510:	4310      	orrs	r0, r2
 8000512:	6318      	str	r0, [r3, #48]	; 0x30
 8000514:	4770      	bx	lr
 8000516:	46c0      	nop			; (mov r8, r8)
 8000518:	40021000 	.word	0x40021000
 800051c:	ffffbfff 	.word	0xffffbfff
 8000520:	fffffeff 	.word	0xfffffeff

08000524 <RCC_CECCLKConfig>:
 8000524:	4b04      	ldr	r3, [pc, #16]	; (8000538 <RCC_CECCLKConfig+0x14>)
 8000526:	2140      	movs	r1, #64	; 0x40
 8000528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800052a:	438a      	bics	r2, r1
 800052c:	631a      	str	r2, [r3, #48]	; 0x30
 800052e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000530:	4310      	orrs	r0, r2
 8000532:	6318      	str	r0, [r3, #48]	; 0x30
 8000534:	4770      	bx	lr
 8000536:	46c0      	nop			; (mov r8, r8)
 8000538:	40021000 	.word	0x40021000

0800053c <RCC_I2CCLKConfig>:
 800053c:	4b04      	ldr	r3, [pc, #16]	; (8000550 <RCC_I2CCLKConfig+0x14>)
 800053e:	2110      	movs	r1, #16
 8000540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000542:	438a      	bics	r2, r1
 8000544:	631a      	str	r2, [r3, #48]	; 0x30
 8000546:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000548:	4310      	orrs	r0, r2
 800054a:	6318      	str	r0, [r3, #48]	; 0x30
 800054c:	4770      	bx	lr
 800054e:	46c0      	nop			; (mov r8, r8)
 8000550:	40021000 	.word	0x40021000

08000554 <RCC_USARTCLKConfig>:
 8000554:	4b04      	ldr	r3, [pc, #16]	; (8000568 <RCC_USARTCLKConfig+0x14>)
 8000556:	2103      	movs	r1, #3
 8000558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800055a:	438a      	bics	r2, r1
 800055c:	631a      	str	r2, [r3, #48]	; 0x30
 800055e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000560:	4310      	orrs	r0, r2
 8000562:	6318      	str	r0, [r3, #48]	; 0x30
 8000564:	4770      	bx	lr
 8000566:	46c0      	nop			; (mov r8, r8)
 8000568:	40021000 	.word	0x40021000

0800056c <RCC_GetClocksFreq>:
 800056c:	4a3b      	ldr	r2, [pc, #236]	; (800065c <RCC_GetClocksFreq+0xf0>)
 800056e:	b538      	push	{r3, r4, r5, lr}
 8000570:	6853      	ldr	r3, [r2, #4]
 8000572:	210c      	movs	r1, #12
 8000574:	1c04      	adds	r4, r0, #0
 8000576:	400b      	ands	r3, r1
 8000578:	2b04      	cmp	r3, #4
 800057a:	d001      	beq.n	8000580 <RCC_GetClocksFreq+0x14>
 800057c:	2b08      	cmp	r3, #8
 800057e:	d052      	beq.n	8000626 <RCC_GetClocksFreq+0xba>
 8000580:	4837      	ldr	r0, [pc, #220]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 8000582:	6020      	str	r0, [r4, #0]
 8000584:	4b35      	ldr	r3, [pc, #212]	; (800065c <RCC_GetClocksFreq+0xf0>)
 8000586:	4937      	ldr	r1, [pc, #220]	; (8000664 <RCC_GetClocksFreq+0xf8>)
 8000588:	685a      	ldr	r2, [r3, #4]
 800058a:	1c05      	adds	r5, r0, #0
 800058c:	0612      	lsls	r2, r2, #24
 800058e:	0f12      	lsrs	r2, r2, #28
 8000590:	5c8a      	ldrb	r2, [r1, r2]
 8000592:	40d5      	lsrs	r5, r2
 8000594:	6065      	str	r5, [r4, #4]
 8000596:	1c2a      	adds	r2, r5, #0
 8000598:	685d      	ldr	r5, [r3, #4]
 800059a:	056d      	lsls	r5, r5, #21
 800059c:	0f6d      	lsrs	r5, r5, #29
 800059e:	5d49      	ldrb	r1, [r1, r5]
 80005a0:	40ca      	lsrs	r2, r1
 80005a2:	60a2      	str	r2, [r4, #8]
 80005a4:	1c11      	adds	r1, r2, #0
 80005a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005a8:	05d5      	lsls	r5, r2, #23
 80005aa:	d421      	bmi.n	80005f0 <RCC_GetClocksFreq+0x84>
 80005ac:	4b2e      	ldr	r3, [pc, #184]	; (8000668 <RCC_GetClocksFreq+0xfc>)
 80005ae:	60e3      	str	r3, [r4, #12]
 80005b0:	4b2a      	ldr	r3, [pc, #168]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005b4:	065d      	lsls	r5, r3, #25
 80005b6:	d424      	bmi.n	8000602 <RCC_GetClocksFreq+0x96>
 80005b8:	4b2c      	ldr	r3, [pc, #176]	; (800066c <RCC_GetClocksFreq+0x100>)
 80005ba:	6123      	str	r3, [r4, #16]
 80005bc:	4b27      	ldr	r3, [pc, #156]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c0:	06da      	lsls	r2, r3, #27
 80005c2:	d425      	bmi.n	8000610 <RCC_GetClocksFreq+0xa4>
 80005c4:	4b26      	ldr	r3, [pc, #152]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 80005c6:	4a25      	ldr	r2, [pc, #148]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005c8:	6163      	str	r3, [r4, #20]
 80005ca:	6b15      	ldr	r5, [r2, #48]	; 0x30
 80005cc:	2303      	movs	r3, #3
 80005ce:	422b      	tst	r3, r5
 80005d0:	d024      	beq.n	800061c <RCC_GetClocksFreq+0xb0>
 80005d2:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80005d4:	4019      	ands	r1, r3
 80005d6:	2901      	cmp	r1, #1
 80005d8:	d03a      	beq.n	8000650 <RCC_GetClocksFreq+0xe4>
 80005da:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80005dc:	4019      	ands	r1, r3
 80005de:	2902      	cmp	r1, #2
 80005e0:	d038      	beq.n	8000654 <RCC_GetClocksFreq+0xe8>
 80005e2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80005e4:	4013      	ands	r3, r2
 80005e6:	2b03      	cmp	r3, #3
 80005e8:	d101      	bne.n	80005ee <RCC_GetClocksFreq+0x82>
 80005ea:	4b1d      	ldr	r3, [pc, #116]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 80005ec:	61a3      	str	r3, [r4, #24]
 80005ee:	bd38      	pop	{r3, r4, r5, pc}
 80005f0:	685b      	ldr	r3, [r3, #4]
 80005f2:	045a      	lsls	r2, r3, #17
 80005f4:	d414      	bmi.n	8000620 <RCC_GetClocksFreq+0xb4>
 80005f6:	084b      	lsrs	r3, r1, #1
 80005f8:	60e3      	str	r3, [r4, #12]
 80005fa:	4b18      	ldr	r3, [pc, #96]	; (800065c <RCC_GetClocksFreq+0xf0>)
 80005fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005fe:	065d      	lsls	r5, r3, #25
 8000600:	d5da      	bpl.n	80005b8 <RCC_GetClocksFreq+0x4c>
 8000602:	2380      	movs	r3, #128	; 0x80
 8000604:	021b      	lsls	r3, r3, #8
 8000606:	6123      	str	r3, [r4, #16]
 8000608:	4b14      	ldr	r3, [pc, #80]	; (800065c <RCC_GetClocksFreq+0xf0>)
 800060a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060c:	06da      	lsls	r2, r3, #27
 800060e:	d5d9      	bpl.n	80005c4 <RCC_GetClocksFreq+0x58>
 8000610:	4a12      	ldr	r2, [pc, #72]	; (800065c <RCC_GetClocksFreq+0xf0>)
 8000612:	6160      	str	r0, [r4, #20]
 8000614:	6b15      	ldr	r5, [r2, #48]	; 0x30
 8000616:	2303      	movs	r3, #3
 8000618:	422b      	tst	r3, r5
 800061a:	d1da      	bne.n	80005d2 <RCC_GetClocksFreq+0x66>
 800061c:	61a1      	str	r1, [r4, #24]
 800061e:	e7e6      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 8000620:	088b      	lsrs	r3, r1, #2
 8000622:	60e3      	str	r3, [r4, #12]
 8000624:	e7c4      	b.n	80005b0 <RCC_GetClocksFreq+0x44>
 8000626:	6855      	ldr	r5, [r2, #4]
 8000628:	6853      	ldr	r3, [r2, #4]
 800062a:	02ad      	lsls	r5, r5, #10
 800062c:	0f2d      	lsrs	r5, r5, #28
 800062e:	3502      	adds	r5, #2
 8000630:	03d9      	lsls	r1, r3, #15
 8000632:	d403      	bmi.n	800063c <RCC_GetClocksFreq+0xd0>
 8000634:	480e      	ldr	r0, [pc, #56]	; (8000670 <RCC_GetClocksFreq+0x104>)
 8000636:	4368      	muls	r0, r5
 8000638:	6020      	str	r0, [r4, #0]
 800063a:	e7a3      	b.n	8000584 <RCC_GetClocksFreq+0x18>
 800063c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800063e:	210f      	movs	r1, #15
 8000640:	4019      	ands	r1, r3
 8000642:	3101      	adds	r1, #1
 8000644:	4806      	ldr	r0, [pc, #24]	; (8000660 <RCC_GetClocksFreq+0xf4>)
 8000646:	f001 fa23 	bl	8001a90 <__aeabi_uidiv>
 800064a:	4368      	muls	r0, r5
 800064c:	6020      	str	r0, [r4, #0]
 800064e:	e799      	b.n	8000584 <RCC_GetClocksFreq+0x18>
 8000650:	61a0      	str	r0, [r4, #24]
 8000652:	e7cc      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 8000654:	2380      	movs	r3, #128	; 0x80
 8000656:	021b      	lsls	r3, r3, #8
 8000658:	61a3      	str	r3, [r4, #24]
 800065a:	e7c8      	b.n	80005ee <RCC_GetClocksFreq+0x82>
 800065c:	40021000 	.word	0x40021000
 8000660:	007a1200 	.word	0x007a1200
 8000664:	20000000 	.word	0x20000000
 8000668:	00d59f80 	.word	0x00d59f80
 800066c:	00008012 	.word	0x00008012
 8000670:	003d0900 	.word	0x003d0900

08000674 <RCC_RTCCLKConfig>:
 8000674:	4b02      	ldr	r3, [pc, #8]	; (8000680 <RCC_RTCCLKConfig+0xc>)
 8000676:	6a1a      	ldr	r2, [r3, #32]
 8000678:	4310      	orrs	r0, r2
 800067a:	6218      	str	r0, [r3, #32]
 800067c:	4770      	bx	lr
 800067e:	46c0      	nop			; (mov r8, r8)
 8000680:	40021000 	.word	0x40021000

08000684 <RCC_RTCCLKCmd>:
 8000684:	4b06      	ldr	r3, [pc, #24]	; (80006a0 <RCC_RTCCLKCmd+0x1c>)
 8000686:	6a19      	ldr	r1, [r3, #32]
 8000688:	2800      	cmp	r0, #0
 800068a:	d103      	bne.n	8000694 <RCC_RTCCLKCmd+0x10>
 800068c:	4a05      	ldr	r2, [pc, #20]	; (80006a4 <RCC_RTCCLKCmd+0x20>)
 800068e:	400a      	ands	r2, r1
 8000690:	621a      	str	r2, [r3, #32]
 8000692:	4770      	bx	lr
 8000694:	2280      	movs	r2, #128	; 0x80
 8000696:	0212      	lsls	r2, r2, #8
 8000698:	430a      	orrs	r2, r1
 800069a:	621a      	str	r2, [r3, #32]
 800069c:	e7f9      	b.n	8000692 <RCC_RTCCLKCmd+0xe>
 800069e:	46c0      	nop			; (mov r8, r8)
 80006a0:	40021000 	.word	0x40021000
 80006a4:	ffff7fff 	.word	0xffff7fff

080006a8 <RCC_BackupResetCmd>:
 80006a8:	4b06      	ldr	r3, [pc, #24]	; (80006c4 <RCC_BackupResetCmd+0x1c>)
 80006aa:	6a19      	ldr	r1, [r3, #32]
 80006ac:	2800      	cmp	r0, #0
 80006ae:	d103      	bne.n	80006b8 <RCC_BackupResetCmd+0x10>
 80006b0:	4a05      	ldr	r2, [pc, #20]	; (80006c8 <RCC_BackupResetCmd+0x20>)
 80006b2:	400a      	ands	r2, r1
 80006b4:	621a      	str	r2, [r3, #32]
 80006b6:	4770      	bx	lr
 80006b8:	2280      	movs	r2, #128	; 0x80
 80006ba:	0252      	lsls	r2, r2, #9
 80006bc:	430a      	orrs	r2, r1
 80006be:	621a      	str	r2, [r3, #32]
 80006c0:	e7f9      	b.n	80006b6 <RCC_BackupResetCmd+0xe>
 80006c2:	46c0      	nop			; (mov r8, r8)
 80006c4:	40021000 	.word	0x40021000
 80006c8:	fffeffff 	.word	0xfffeffff

080006cc <RCC_AHBPeriphClockCmd>:
 80006cc:	4b04      	ldr	r3, [pc, #16]	; (80006e0 <RCC_AHBPeriphClockCmd+0x14>)
 80006ce:	695a      	ldr	r2, [r3, #20]
 80006d0:	2900      	cmp	r1, #0
 80006d2:	d102      	bne.n	80006da <RCC_AHBPeriphClockCmd+0xe>
 80006d4:	4382      	bics	r2, r0
 80006d6:	615a      	str	r2, [r3, #20]
 80006d8:	4770      	bx	lr
 80006da:	4310      	orrs	r0, r2
 80006dc:	6158      	str	r0, [r3, #20]
 80006de:	e7fb      	b.n	80006d8 <RCC_AHBPeriphClockCmd+0xc>
 80006e0:	40021000 	.word	0x40021000

080006e4 <RCC_APB2PeriphClockCmd>:
 80006e4:	4b04      	ldr	r3, [pc, #16]	; (80006f8 <RCC_APB2PeriphClockCmd+0x14>)
 80006e6:	699a      	ldr	r2, [r3, #24]
 80006e8:	2900      	cmp	r1, #0
 80006ea:	d102      	bne.n	80006f2 <RCC_APB2PeriphClockCmd+0xe>
 80006ec:	4382      	bics	r2, r0
 80006ee:	619a      	str	r2, [r3, #24]
 80006f0:	4770      	bx	lr
 80006f2:	4310      	orrs	r0, r2
 80006f4:	6198      	str	r0, [r3, #24]
 80006f6:	e7fb      	b.n	80006f0 <RCC_APB2PeriphClockCmd+0xc>
 80006f8:	40021000 	.word	0x40021000

080006fc <RCC_APB1PeriphClockCmd>:
 80006fc:	4b04      	ldr	r3, [pc, #16]	; (8000710 <RCC_APB1PeriphClockCmd+0x14>)
 80006fe:	69da      	ldr	r2, [r3, #28]
 8000700:	2900      	cmp	r1, #0
 8000702:	d102      	bne.n	800070a <RCC_APB1PeriphClockCmd+0xe>
 8000704:	4382      	bics	r2, r0
 8000706:	61da      	str	r2, [r3, #28]
 8000708:	4770      	bx	lr
 800070a:	4310      	orrs	r0, r2
 800070c:	61d8      	str	r0, [r3, #28]
 800070e:	e7fb      	b.n	8000708 <RCC_APB1PeriphClockCmd+0xc>
 8000710:	40021000 	.word	0x40021000

08000714 <RCC_AHBPeriphResetCmd>:
 8000714:	4b04      	ldr	r3, [pc, #16]	; (8000728 <RCC_AHBPeriphResetCmd+0x14>)
 8000716:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000718:	2900      	cmp	r1, #0
 800071a:	d102      	bne.n	8000722 <RCC_AHBPeriphResetCmd+0xe>
 800071c:	4382      	bics	r2, r0
 800071e:	629a      	str	r2, [r3, #40]	; 0x28
 8000720:	4770      	bx	lr
 8000722:	4310      	orrs	r0, r2
 8000724:	6298      	str	r0, [r3, #40]	; 0x28
 8000726:	e7fb      	b.n	8000720 <RCC_AHBPeriphResetCmd+0xc>
 8000728:	40021000 	.word	0x40021000

0800072c <RCC_APB2PeriphResetCmd>:
 800072c:	4b04      	ldr	r3, [pc, #16]	; (8000740 <RCC_APB2PeriphResetCmd+0x14>)
 800072e:	68da      	ldr	r2, [r3, #12]
 8000730:	2900      	cmp	r1, #0
 8000732:	d102      	bne.n	800073a <RCC_APB2PeriphResetCmd+0xe>
 8000734:	4382      	bics	r2, r0
 8000736:	60da      	str	r2, [r3, #12]
 8000738:	4770      	bx	lr
 800073a:	4310      	orrs	r0, r2
 800073c:	60d8      	str	r0, [r3, #12]
 800073e:	e7fb      	b.n	8000738 <RCC_APB2PeriphResetCmd+0xc>
 8000740:	40021000 	.word	0x40021000

08000744 <RCC_APB1PeriphResetCmd>:
 8000744:	4b04      	ldr	r3, [pc, #16]	; (8000758 <RCC_APB1PeriphResetCmd+0x14>)
 8000746:	691a      	ldr	r2, [r3, #16]
 8000748:	2900      	cmp	r1, #0
 800074a:	d102      	bne.n	8000752 <RCC_APB1PeriphResetCmd+0xe>
 800074c:	4382      	bics	r2, r0
 800074e:	611a      	str	r2, [r3, #16]
 8000750:	4770      	bx	lr
 8000752:	4310      	orrs	r0, r2
 8000754:	6118      	str	r0, [r3, #16]
 8000756:	e7fb      	b.n	8000750 <RCC_APB1PeriphResetCmd+0xc>
 8000758:	40021000 	.word	0x40021000

0800075c <RCC_ITConfig>:
 800075c:	4b04      	ldr	r3, [pc, #16]	; (8000770 <RCC_ITConfig+0x14>)
 800075e:	781a      	ldrb	r2, [r3, #0]
 8000760:	2900      	cmp	r1, #0
 8000762:	d102      	bne.n	800076a <RCC_ITConfig+0xe>
 8000764:	4382      	bics	r2, r0
 8000766:	701a      	strb	r2, [r3, #0]
 8000768:	4770      	bx	lr
 800076a:	4310      	orrs	r0, r2
 800076c:	7018      	strb	r0, [r3, #0]
 800076e:	e7fb      	b.n	8000768 <RCC_ITConfig+0xc>
 8000770:	40021009 	.word	0x40021009

08000774 <RCC_GetFlagStatus>:
 8000774:	0943      	lsrs	r3, r0, #5
 8000776:	d108      	bne.n	800078a <RCC_GetFlagStatus+0x16>
 8000778:	4b0a      	ldr	r3, [pc, #40]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 800077a:	681a      	ldr	r2, [r3, #0]
 800077c:	231f      	movs	r3, #31
 800077e:	4018      	ands	r0, r3
 8000780:	40c2      	lsrs	r2, r0
 8000782:	1c10      	adds	r0, r2, #0
 8000784:	2301      	movs	r3, #1
 8000786:	4018      	ands	r0, r3
 8000788:	4770      	bx	lr
 800078a:	2b01      	cmp	r3, #1
 800078c:	d004      	beq.n	8000798 <RCC_GetFlagStatus+0x24>
 800078e:	2b02      	cmp	r3, #2
 8000790:	d005      	beq.n	800079e <RCC_GetFlagStatus+0x2a>
 8000792:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 8000794:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000796:	e7f1      	b.n	800077c <RCC_GetFlagStatus+0x8>
 8000798:	4b02      	ldr	r3, [pc, #8]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 800079a:	6a1a      	ldr	r2, [r3, #32]
 800079c:	e7ee      	b.n	800077c <RCC_GetFlagStatus+0x8>
 800079e:	4b01      	ldr	r3, [pc, #4]	; (80007a4 <RCC_GetFlagStatus+0x30>)
 80007a0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80007a2:	e7eb      	b.n	800077c <RCC_GetFlagStatus+0x8>
 80007a4:	40021000 	.word	0x40021000

080007a8 <RCC_WaitForHSEStartUp>:
 80007a8:	b510      	push	{r4, lr}
 80007aa:	2300      	movs	r3, #0
 80007ac:	b082      	sub	sp, #8
 80007ae:	24a0      	movs	r4, #160	; 0xa0
 80007b0:	9301      	str	r3, [sp, #4]
 80007b2:	00e4      	lsls	r4, r4, #3
 80007b4:	e001      	b.n	80007ba <RCC_WaitForHSEStartUp+0x12>
 80007b6:	2800      	cmp	r0, #0
 80007b8:	d108      	bne.n	80007cc <RCC_WaitForHSEStartUp+0x24>
 80007ba:	2011      	movs	r0, #17
 80007bc:	f7ff ffda 	bl	8000774 <RCC_GetFlagStatus>
 80007c0:	9b01      	ldr	r3, [sp, #4]
 80007c2:	3301      	adds	r3, #1
 80007c4:	9301      	str	r3, [sp, #4]
 80007c6:	9b01      	ldr	r3, [sp, #4]
 80007c8:	42a3      	cmp	r3, r4
 80007ca:	d1f4      	bne.n	80007b6 <RCC_WaitForHSEStartUp+0xe>
 80007cc:	2011      	movs	r0, #17
 80007ce:	f7ff ffd1 	bl	8000774 <RCC_GetFlagStatus>
 80007d2:	1e43      	subs	r3, r0, #1
 80007d4:	4198      	sbcs	r0, r3
 80007d6:	b2c0      	uxtb	r0, r0
 80007d8:	b002      	add	sp, #8
 80007da:	bd10      	pop	{r4, pc}

080007dc <RCC_ClearFlag>:
 80007dc:	4b03      	ldr	r3, [pc, #12]	; (80007ec <RCC_ClearFlag+0x10>)
 80007de:	2280      	movs	r2, #128	; 0x80
 80007e0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80007e2:	0452      	lsls	r2, r2, #17
 80007e4:	430a      	orrs	r2, r1
 80007e6:	625a      	str	r2, [r3, #36]	; 0x24
 80007e8:	4770      	bx	lr
 80007ea:	46c0      	nop			; (mov r8, r8)
 80007ec:	40021000 	.word	0x40021000

080007f0 <RCC_GetITStatus>:
 80007f0:	4b03      	ldr	r3, [pc, #12]	; (8000800 <RCC_GetITStatus+0x10>)
 80007f2:	689b      	ldr	r3, [r3, #8]
 80007f4:	4018      	ands	r0, r3
 80007f6:	1e43      	subs	r3, r0, #1
 80007f8:	4198      	sbcs	r0, r3
 80007fa:	b2c0      	uxtb	r0, r0
 80007fc:	4770      	bx	lr
 80007fe:	46c0      	nop			; (mov r8, r8)
 8000800:	40021000 	.word	0x40021000

08000804 <RCC_ClearITPendingBit>:
 8000804:	4b01      	ldr	r3, [pc, #4]	; (800080c <RCC_ClearITPendingBit+0x8>)
 8000806:	7018      	strb	r0, [r3, #0]
 8000808:	4770      	bx	lr
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	4002100a 	.word	0x4002100a

08000810 <TIM_DeInit>:
 8000810:	b508      	push	{r3, lr}
 8000812:	4b36      	ldr	r3, [pc, #216]	; (80008ec <TIM_DeInit+0xdc>)
 8000814:	4298      	cmp	r0, r3
 8000816:	d021      	beq.n	800085c <TIM_DeInit+0x4c>
 8000818:	2380      	movs	r3, #128	; 0x80
 800081a:	05db      	lsls	r3, r3, #23
 800081c:	4298      	cmp	r0, r3
 800081e:	d028      	beq.n	8000872 <TIM_DeInit+0x62>
 8000820:	4b33      	ldr	r3, [pc, #204]	; (80008f0 <TIM_DeInit+0xe0>)
 8000822:	4298      	cmp	r0, r3
 8000824:	d02e      	beq.n	8000884 <TIM_DeInit+0x74>
 8000826:	4b33      	ldr	r3, [pc, #204]	; (80008f4 <TIM_DeInit+0xe4>)
 8000828:	4298      	cmp	r0, r3
 800082a:	d034      	beq.n	8000896 <TIM_DeInit+0x86>
 800082c:	4b32      	ldr	r3, [pc, #200]	; (80008f8 <TIM_DeInit+0xe8>)
 800082e:	4298      	cmp	r0, r3
 8000830:	d03a      	beq.n	80008a8 <TIM_DeInit+0x98>
 8000832:	4b32      	ldr	r3, [pc, #200]	; (80008fc <TIM_DeInit+0xec>)
 8000834:	4298      	cmp	r0, r3
 8000836:	d042      	beq.n	80008be <TIM_DeInit+0xae>
 8000838:	4b31      	ldr	r3, [pc, #196]	; (8000900 <TIM_DeInit+0xf0>)
 800083a:	4298      	cmp	r0, r3
 800083c:	d04a      	beq.n	80008d4 <TIM_DeInit+0xc4>
 800083e:	4b31      	ldr	r3, [pc, #196]	; (8000904 <TIM_DeInit+0xf4>)
 8000840:	4298      	cmp	r0, r3
 8000842:	d000      	beq.n	8000846 <TIM_DeInit+0x36>
 8000844:	bd08      	pop	{r3, pc}
 8000846:	2080      	movs	r0, #128	; 0x80
 8000848:	02c0      	lsls	r0, r0, #11
 800084a:	2101      	movs	r1, #1
 800084c:	f7ff ff6e 	bl	800072c <RCC_APB2PeriphResetCmd>
 8000850:	2080      	movs	r0, #128	; 0x80
 8000852:	02c0      	lsls	r0, r0, #11
 8000854:	2100      	movs	r1, #0
 8000856:	f7ff ff69 	bl	800072c <RCC_APB2PeriphResetCmd>
 800085a:	e7f3      	b.n	8000844 <TIM_DeInit+0x34>
 800085c:	2080      	movs	r0, #128	; 0x80
 800085e:	0100      	lsls	r0, r0, #4
 8000860:	2101      	movs	r1, #1
 8000862:	f7ff ff63 	bl	800072c <RCC_APB2PeriphResetCmd>
 8000866:	2080      	movs	r0, #128	; 0x80
 8000868:	0100      	lsls	r0, r0, #4
 800086a:	2100      	movs	r1, #0
 800086c:	f7ff ff5e 	bl	800072c <RCC_APB2PeriphResetCmd>
 8000870:	e7e8      	b.n	8000844 <TIM_DeInit+0x34>
 8000872:	2001      	movs	r0, #1
 8000874:	2101      	movs	r1, #1
 8000876:	f7ff ff65 	bl	8000744 <RCC_APB1PeriphResetCmd>
 800087a:	2001      	movs	r0, #1
 800087c:	2100      	movs	r1, #0
 800087e:	f7ff ff61 	bl	8000744 <RCC_APB1PeriphResetCmd>
 8000882:	e7df      	b.n	8000844 <TIM_DeInit+0x34>
 8000884:	2002      	movs	r0, #2
 8000886:	2101      	movs	r1, #1
 8000888:	f7ff ff5c 	bl	8000744 <RCC_APB1PeriphResetCmd>
 800088c:	2002      	movs	r0, #2
 800088e:	2100      	movs	r1, #0
 8000890:	f7ff ff58 	bl	8000744 <RCC_APB1PeriphResetCmd>
 8000894:	e7d6      	b.n	8000844 <TIM_DeInit+0x34>
 8000896:	2010      	movs	r0, #16
 8000898:	2101      	movs	r1, #1
 800089a:	f7ff ff53 	bl	8000744 <RCC_APB1PeriphResetCmd>
 800089e:	2010      	movs	r0, #16
 80008a0:	2100      	movs	r1, #0
 80008a2:	f7ff ff4f 	bl	8000744 <RCC_APB1PeriphResetCmd>
 80008a6:	e7cd      	b.n	8000844 <TIM_DeInit+0x34>
 80008a8:	2080      	movs	r0, #128	; 0x80
 80008aa:	0040      	lsls	r0, r0, #1
 80008ac:	2101      	movs	r1, #1
 80008ae:	f7ff ff49 	bl	8000744 <RCC_APB1PeriphResetCmd>
 80008b2:	2080      	movs	r0, #128	; 0x80
 80008b4:	0040      	lsls	r0, r0, #1
 80008b6:	2100      	movs	r1, #0
 80008b8:	f7ff ff44 	bl	8000744 <RCC_APB1PeriphResetCmd>
 80008bc:	e7c2      	b.n	8000844 <TIM_DeInit+0x34>
 80008be:	2080      	movs	r0, #128	; 0x80
 80008c0:	0240      	lsls	r0, r0, #9
 80008c2:	2101      	movs	r1, #1
 80008c4:	f7ff ff32 	bl	800072c <RCC_APB2PeriphResetCmd>
 80008c8:	2080      	movs	r0, #128	; 0x80
 80008ca:	0240      	lsls	r0, r0, #9
 80008cc:	2100      	movs	r1, #0
 80008ce:	f7ff ff2d 	bl	800072c <RCC_APB2PeriphResetCmd>
 80008d2:	e7b7      	b.n	8000844 <TIM_DeInit+0x34>
 80008d4:	2080      	movs	r0, #128	; 0x80
 80008d6:	0280      	lsls	r0, r0, #10
 80008d8:	2101      	movs	r1, #1
 80008da:	f7ff ff27 	bl	800072c <RCC_APB2PeriphResetCmd>
 80008de:	2080      	movs	r0, #128	; 0x80
 80008e0:	0280      	lsls	r0, r0, #10
 80008e2:	2100      	movs	r1, #0
 80008e4:	f7ff ff22 	bl	800072c <RCC_APB2PeriphResetCmd>
 80008e8:	e7ac      	b.n	8000844 <TIM_DeInit+0x34>
 80008ea:	46c0      	nop			; (mov r8, r8)
 80008ec:	40012c00 	.word	0x40012c00
 80008f0:	40000400 	.word	0x40000400
 80008f4:	40001000 	.word	0x40001000
 80008f8:	40002000 	.word	0x40002000
 80008fc:	40014000 	.word	0x40014000
 8000900:	40014400 	.word	0x40014400
 8000904:	40014800 	.word	0x40014800

08000908 <TIM_TimeBaseInit>:
 8000908:	6803      	ldr	r3, [r0, #0]
 800090a:	4a1b      	ldr	r2, [pc, #108]	; (8000978 <TIM_TimeBaseInit+0x70>)
 800090c:	b510      	push	{r4, lr}
 800090e:	b29b      	uxth	r3, r3
 8000910:	4290      	cmp	r0, r2
 8000912:	d024      	beq.n	800095e <TIM_TimeBaseInit+0x56>
 8000914:	2280      	movs	r2, #128	; 0x80
 8000916:	05d2      	lsls	r2, r2, #23
 8000918:	4290      	cmp	r0, r2
 800091a:	d020      	beq.n	800095e <TIM_TimeBaseInit+0x56>
 800091c:	4a17      	ldr	r2, [pc, #92]	; (800097c <TIM_TimeBaseInit+0x74>)
 800091e:	4290      	cmp	r0, r2
 8000920:	d01d      	beq.n	800095e <TIM_TimeBaseInit+0x56>
 8000922:	4a17      	ldr	r2, [pc, #92]	; (8000980 <TIM_TimeBaseInit+0x78>)
 8000924:	4290      	cmp	r0, r2
 8000926:	d021      	beq.n	800096c <TIM_TimeBaseInit+0x64>
 8000928:	4c16      	ldr	r4, [pc, #88]	; (8000984 <TIM_TimeBaseInit+0x7c>)
 800092a:	890a      	ldrh	r2, [r1, #8]
 800092c:	4023      	ands	r3, r4
 800092e:	4313      	orrs	r3, r2
 8000930:	8003      	strh	r3, [r0, #0]
 8000932:	684b      	ldr	r3, [r1, #4]
 8000934:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000936:	880b      	ldrh	r3, [r1, #0]
 8000938:	8503      	strh	r3, [r0, #40]	; 0x28
 800093a:	4b0f      	ldr	r3, [pc, #60]	; (8000978 <TIM_TimeBaseInit+0x70>)
 800093c:	4298      	cmp	r0, r3
 800093e:	d00b      	beq.n	8000958 <TIM_TimeBaseInit+0x50>
 8000940:	4b11      	ldr	r3, [pc, #68]	; (8000988 <TIM_TimeBaseInit+0x80>)
 8000942:	4298      	cmp	r0, r3
 8000944:	d008      	beq.n	8000958 <TIM_TimeBaseInit+0x50>
 8000946:	4b11      	ldr	r3, [pc, #68]	; (800098c <TIM_TimeBaseInit+0x84>)
 8000948:	4298      	cmp	r0, r3
 800094a:	d005      	beq.n	8000958 <TIM_TimeBaseInit+0x50>
 800094c:	4b10      	ldr	r3, [pc, #64]	; (8000990 <TIM_TimeBaseInit+0x88>)
 800094e:	4298      	cmp	r0, r3
 8000950:	d002      	beq.n	8000958 <TIM_TimeBaseInit+0x50>
 8000952:	2301      	movs	r3, #1
 8000954:	8283      	strh	r3, [r0, #20]
 8000956:	bd10      	pop	{r4, pc}
 8000958:	7a8b      	ldrb	r3, [r1, #10]
 800095a:	8603      	strh	r3, [r0, #48]	; 0x30
 800095c:	e7f9      	b.n	8000952 <TIM_TimeBaseInit+0x4a>
 800095e:	2270      	movs	r2, #112	; 0x70
 8000960:	4393      	bics	r3, r2
 8000962:	884a      	ldrh	r2, [r1, #2]
 8000964:	4313      	orrs	r3, r2
 8000966:	4a06      	ldr	r2, [pc, #24]	; (8000980 <TIM_TimeBaseInit+0x78>)
 8000968:	4290      	cmp	r0, r2
 800096a:	d1dd      	bne.n	8000928 <TIM_TimeBaseInit+0x20>
 800096c:	8003      	strh	r3, [r0, #0]
 800096e:	684b      	ldr	r3, [r1, #4]
 8000970:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000972:	880b      	ldrh	r3, [r1, #0]
 8000974:	8503      	strh	r3, [r0, #40]	; 0x28
 8000976:	e7ec      	b.n	8000952 <TIM_TimeBaseInit+0x4a>
 8000978:	40012c00 	.word	0x40012c00
 800097c:	40000400 	.word	0x40000400
 8000980:	40001000 	.word	0x40001000
 8000984:	fffffcff 	.word	0xfffffcff
 8000988:	40014000 	.word	0x40014000
 800098c:	40014400 	.word	0x40014400
 8000990:	40014800 	.word	0x40014800

08000994 <TIM_TimeBaseStructInit>:
 8000994:	2301      	movs	r3, #1
 8000996:	425b      	negs	r3, r3
 8000998:	6043      	str	r3, [r0, #4]
 800099a:	2300      	movs	r3, #0
 800099c:	8003      	strh	r3, [r0, #0]
 800099e:	8103      	strh	r3, [r0, #8]
 80009a0:	8043      	strh	r3, [r0, #2]
 80009a2:	7283      	strb	r3, [r0, #10]
 80009a4:	4770      	bx	lr
 80009a6:	46c0      	nop			; (mov r8, r8)

080009a8 <TIM_PrescalerConfig>:
 80009a8:	8501      	strh	r1, [r0, #40]	; 0x28
 80009aa:	8282      	strh	r2, [r0, #20]
 80009ac:	4770      	bx	lr
 80009ae:	46c0      	nop			; (mov r8, r8)

080009b0 <TIM_CounterModeConfig>:
 80009b0:	6802      	ldr	r2, [r0, #0]
 80009b2:	4b02      	ldr	r3, [pc, #8]	; (80009bc <TIM_CounterModeConfig+0xc>)
 80009b4:	4013      	ands	r3, r2
 80009b6:	4319      	orrs	r1, r3
 80009b8:	8001      	strh	r1, [r0, #0]
 80009ba:	4770      	bx	lr
 80009bc:	0000ff8f 	.word	0x0000ff8f

080009c0 <TIM_SetCounter>:
 80009c0:	6241      	str	r1, [r0, #36]	; 0x24
 80009c2:	4770      	bx	lr

080009c4 <TIM_SetAutoreload>:
 80009c4:	62c1      	str	r1, [r0, #44]	; 0x2c
 80009c6:	4770      	bx	lr

080009c8 <TIM_GetCounter>:
 80009c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80009ca:	4770      	bx	lr

080009cc <TIM_GetPrescaler>:
 80009cc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80009ce:	b280      	uxth	r0, r0
 80009d0:	4770      	bx	lr
 80009d2:	46c0      	nop			; (mov r8, r8)

080009d4 <TIM_UpdateDisableConfig>:
 80009d4:	2900      	cmp	r1, #0
 80009d6:	d104      	bne.n	80009e2 <TIM_UpdateDisableConfig+0xe>
 80009d8:	6802      	ldr	r2, [r0, #0]
 80009da:	4b05      	ldr	r3, [pc, #20]	; (80009f0 <TIM_UpdateDisableConfig+0x1c>)
 80009dc:	4013      	ands	r3, r2
 80009de:	8003      	strh	r3, [r0, #0]
 80009e0:	4770      	bx	lr
 80009e2:	6803      	ldr	r3, [r0, #0]
 80009e4:	2202      	movs	r2, #2
 80009e6:	b29b      	uxth	r3, r3
 80009e8:	4313      	orrs	r3, r2
 80009ea:	8003      	strh	r3, [r0, #0]
 80009ec:	e7f8      	b.n	80009e0 <TIM_UpdateDisableConfig+0xc>
 80009ee:	46c0      	nop			; (mov r8, r8)
 80009f0:	0000fffd 	.word	0x0000fffd

080009f4 <TIM_UpdateRequestConfig>:
 80009f4:	2900      	cmp	r1, #0
 80009f6:	d104      	bne.n	8000a02 <TIM_UpdateRequestConfig+0xe>
 80009f8:	6802      	ldr	r2, [r0, #0]
 80009fa:	4b05      	ldr	r3, [pc, #20]	; (8000a10 <TIM_UpdateRequestConfig+0x1c>)
 80009fc:	4013      	ands	r3, r2
 80009fe:	8003      	strh	r3, [r0, #0]
 8000a00:	4770      	bx	lr
 8000a02:	6803      	ldr	r3, [r0, #0]
 8000a04:	2204      	movs	r2, #4
 8000a06:	b29b      	uxth	r3, r3
 8000a08:	4313      	orrs	r3, r2
 8000a0a:	8003      	strh	r3, [r0, #0]
 8000a0c:	e7f8      	b.n	8000a00 <TIM_UpdateRequestConfig+0xc>
 8000a0e:	46c0      	nop			; (mov r8, r8)
 8000a10:	0000fffb 	.word	0x0000fffb

08000a14 <TIM_ARRPreloadConfig>:
 8000a14:	2900      	cmp	r1, #0
 8000a16:	d104      	bne.n	8000a22 <TIM_ARRPreloadConfig+0xe>
 8000a18:	6802      	ldr	r2, [r0, #0]
 8000a1a:	4b05      	ldr	r3, [pc, #20]	; (8000a30 <TIM_ARRPreloadConfig+0x1c>)
 8000a1c:	4013      	ands	r3, r2
 8000a1e:	8003      	strh	r3, [r0, #0]
 8000a20:	4770      	bx	lr
 8000a22:	6803      	ldr	r3, [r0, #0]
 8000a24:	2280      	movs	r2, #128	; 0x80
 8000a26:	b29b      	uxth	r3, r3
 8000a28:	4313      	orrs	r3, r2
 8000a2a:	8003      	strh	r3, [r0, #0]
 8000a2c:	e7f8      	b.n	8000a20 <TIM_ARRPreloadConfig+0xc>
 8000a2e:	46c0      	nop			; (mov r8, r8)
 8000a30:	0000ff7f 	.word	0x0000ff7f

08000a34 <TIM_SelectOnePulseMode>:
 8000a34:	6802      	ldr	r2, [r0, #0]
 8000a36:	4b04      	ldr	r3, [pc, #16]	; (8000a48 <TIM_SelectOnePulseMode+0x14>)
 8000a38:	4013      	ands	r3, r2
 8000a3a:	8003      	strh	r3, [r0, #0]
 8000a3c:	6803      	ldr	r3, [r0, #0]
 8000a3e:	b29b      	uxth	r3, r3
 8000a40:	4319      	orrs	r1, r3
 8000a42:	8001      	strh	r1, [r0, #0]
 8000a44:	4770      	bx	lr
 8000a46:	46c0      	nop			; (mov r8, r8)
 8000a48:	0000fff7 	.word	0x0000fff7

08000a4c <TIM_SetClockDivision>:
 8000a4c:	6802      	ldr	r2, [r0, #0]
 8000a4e:	4b04      	ldr	r3, [pc, #16]	; (8000a60 <TIM_SetClockDivision+0x14>)
 8000a50:	4013      	ands	r3, r2
 8000a52:	8003      	strh	r3, [r0, #0]
 8000a54:	6803      	ldr	r3, [r0, #0]
 8000a56:	b29b      	uxth	r3, r3
 8000a58:	4319      	orrs	r1, r3
 8000a5a:	8001      	strh	r1, [r0, #0]
 8000a5c:	4770      	bx	lr
 8000a5e:	46c0      	nop			; (mov r8, r8)
 8000a60:	0000fcff 	.word	0x0000fcff

08000a64 <TIM_Cmd>:
 8000a64:	2900      	cmp	r1, #0
 8000a66:	d104      	bne.n	8000a72 <TIM_Cmd+0xe>
 8000a68:	6802      	ldr	r2, [r0, #0]
 8000a6a:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <TIM_Cmd+0x1c>)
 8000a6c:	4013      	ands	r3, r2
 8000a6e:	8003      	strh	r3, [r0, #0]
 8000a70:	4770      	bx	lr
 8000a72:	6803      	ldr	r3, [r0, #0]
 8000a74:	2201      	movs	r2, #1
 8000a76:	b29b      	uxth	r3, r3
 8000a78:	4313      	orrs	r3, r2
 8000a7a:	8003      	strh	r3, [r0, #0]
 8000a7c:	e7f8      	b.n	8000a70 <TIM_Cmd+0xc>
 8000a7e:	46c0      	nop			; (mov r8, r8)
 8000a80:	0000fffe 	.word	0x0000fffe

08000a84 <TIM_BDTRConfig>:
 8000a84:	880b      	ldrh	r3, [r1, #0]
 8000a86:	884a      	ldrh	r2, [r1, #2]
 8000a88:	431a      	orrs	r2, r3
 8000a8a:	888b      	ldrh	r3, [r1, #4]
 8000a8c:	431a      	orrs	r2, r3
 8000a8e:	88cb      	ldrh	r3, [r1, #6]
 8000a90:	431a      	orrs	r2, r3
 8000a92:	890b      	ldrh	r3, [r1, #8]
 8000a94:	431a      	orrs	r2, r3
 8000a96:	894b      	ldrh	r3, [r1, #10]
 8000a98:	431a      	orrs	r2, r3
 8000a9a:	898b      	ldrh	r3, [r1, #12]
 8000a9c:	431a      	orrs	r2, r3
 8000a9e:	2344      	movs	r3, #68	; 0x44
 8000aa0:	52c2      	strh	r2, [r0, r3]
 8000aa2:	4770      	bx	lr

08000aa4 <TIM_BDTRStructInit>:
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	8003      	strh	r3, [r0, #0]
 8000aa8:	8043      	strh	r3, [r0, #2]
 8000aaa:	8083      	strh	r3, [r0, #4]
 8000aac:	80c3      	strh	r3, [r0, #6]
 8000aae:	8103      	strh	r3, [r0, #8]
 8000ab0:	8143      	strh	r3, [r0, #10]
 8000ab2:	8183      	strh	r3, [r0, #12]
 8000ab4:	4770      	bx	lr
 8000ab6:	46c0      	nop			; (mov r8, r8)

08000ab8 <TIM_CtrlPWMOutputs>:
 8000ab8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8000aba:	2900      	cmp	r1, #0
 8000abc:	d104      	bne.n	8000ac8 <TIM_CtrlPWMOutputs+0x10>
 8000abe:	0452      	lsls	r2, r2, #17
 8000ac0:	0c52      	lsrs	r2, r2, #17
 8000ac2:	2344      	movs	r3, #68	; 0x44
 8000ac4:	52c2      	strh	r2, [r0, r3]
 8000ac6:	4770      	bx	lr
 8000ac8:	4b02      	ldr	r3, [pc, #8]	; (8000ad4 <TIM_CtrlPWMOutputs+0x1c>)
 8000aca:	431a      	orrs	r2, r3
 8000acc:	b292      	uxth	r2, r2
 8000ace:	2344      	movs	r3, #68	; 0x44
 8000ad0:	52c2      	strh	r2, [r0, r3]
 8000ad2:	e7f8      	b.n	8000ac6 <TIM_CtrlPWMOutputs+0xe>
 8000ad4:	ffff8000 	.word	0xffff8000

08000ad8 <TIM_OC1Init>:
 8000ad8:	6a02      	ldr	r2, [r0, #32]
 8000ada:	4b19      	ldr	r3, [pc, #100]	; (8000b40 <TIM_OC1Init+0x68>)
 8000adc:	b570      	push	{r4, r5, r6, lr}
 8000ade:	4013      	ands	r3, r2
 8000ae0:	8403      	strh	r3, [r0, #32]
 8000ae2:	6a05      	ldr	r5, [r0, #32]
 8000ae4:	4b17      	ldr	r3, [pc, #92]	; (8000b44 <TIM_OC1Init+0x6c>)
 8000ae6:	6842      	ldr	r2, [r0, #4]
 8000ae8:	6984      	ldr	r4, [r0, #24]
 8000aea:	884e      	ldrh	r6, [r1, #2]
 8000aec:	401c      	ands	r4, r3
 8000aee:	880b      	ldrh	r3, [r1, #0]
 8000af0:	b292      	uxth	r2, r2
 8000af2:	431c      	orrs	r4, r3
 8000af4:	4b14      	ldr	r3, [pc, #80]	; (8000b48 <TIM_OC1Init+0x70>)
 8000af6:	401d      	ands	r5, r3
 8000af8:	898b      	ldrh	r3, [r1, #12]
 8000afa:	4333      	orrs	r3, r6
 8000afc:	432b      	orrs	r3, r5
 8000afe:	4d13      	ldr	r5, [pc, #76]	; (8000b4c <TIM_OC1Init+0x74>)
 8000b00:	42a8      	cmp	r0, r5
 8000b02:	d00e      	beq.n	8000b22 <TIM_OC1Init+0x4a>
 8000b04:	4d12      	ldr	r5, [pc, #72]	; (8000b50 <TIM_OC1Init+0x78>)
 8000b06:	42a8      	cmp	r0, r5
 8000b08:	d00b      	beq.n	8000b22 <TIM_OC1Init+0x4a>
 8000b0a:	4d12      	ldr	r5, [pc, #72]	; (8000b54 <TIM_OC1Init+0x7c>)
 8000b0c:	42a8      	cmp	r0, r5
 8000b0e:	d008      	beq.n	8000b22 <TIM_OC1Init+0x4a>
 8000b10:	4d11      	ldr	r5, [pc, #68]	; (8000b58 <TIM_OC1Init+0x80>)
 8000b12:	42a8      	cmp	r0, r5
 8000b14:	d005      	beq.n	8000b22 <TIM_OC1Init+0x4a>
 8000b16:	8082      	strh	r2, [r0, #4]
 8000b18:	688a      	ldr	r2, [r1, #8]
 8000b1a:	8304      	strh	r4, [r0, #24]
 8000b1c:	6342      	str	r2, [r0, #52]	; 0x34
 8000b1e:	8403      	strh	r3, [r0, #32]
 8000b20:	bd70      	pop	{r4, r5, r6, pc}
 8000b22:	2508      	movs	r5, #8
 8000b24:	43ab      	bics	r3, r5
 8000b26:	89cd      	ldrh	r5, [r1, #14]
 8000b28:	8a4e      	ldrh	r6, [r1, #18]
 8000b2a:	432b      	orrs	r3, r5
 8000b2c:	2504      	movs	r5, #4
 8000b2e:	43ab      	bics	r3, r5
 8000b30:	888d      	ldrh	r5, [r1, #4]
 8000b32:	432b      	orrs	r3, r5
 8000b34:	4d09      	ldr	r5, [pc, #36]	; (8000b5c <TIM_OC1Init+0x84>)
 8000b36:	402a      	ands	r2, r5
 8000b38:	8a0d      	ldrh	r5, [r1, #16]
 8000b3a:	4335      	orrs	r5, r6
 8000b3c:	432a      	orrs	r2, r5
 8000b3e:	e7ea      	b.n	8000b16 <TIM_OC1Init+0x3e>
 8000b40:	0000fffe 	.word	0x0000fffe
 8000b44:	0000ff8c 	.word	0x0000ff8c
 8000b48:	0000fffd 	.word	0x0000fffd
 8000b4c:	40012c00 	.word	0x40012c00
 8000b50:	40014000 	.word	0x40014000
 8000b54:	40014400 	.word	0x40014400
 8000b58:	40014800 	.word	0x40014800
 8000b5c:	fffffcff 	.word	0xfffffcff

08000b60 <TIM_OC2Init>:
 8000b60:	6a02      	ldr	r2, [r0, #32]
 8000b62:	4b1b      	ldr	r3, [pc, #108]	; (8000bd0 <TIM_OC2Init+0x70>)
 8000b64:	b530      	push	{r4, r5, lr}
 8000b66:	4013      	ands	r3, r2
 8000b68:	8403      	strh	r3, [r0, #32]
 8000b6a:	6a05      	ldr	r5, [r0, #32]
 8000b6c:	4b19      	ldr	r3, [pc, #100]	; (8000bd4 <TIM_OC2Init+0x74>)
 8000b6e:	6842      	ldr	r2, [r0, #4]
 8000b70:	6984      	ldr	r4, [r0, #24]
 8000b72:	b292      	uxth	r2, r2
 8000b74:	401c      	ands	r4, r3
 8000b76:	880b      	ldrh	r3, [r1, #0]
 8000b78:	021b      	lsls	r3, r3, #8
 8000b7a:	431c      	orrs	r4, r3
 8000b7c:	4b16      	ldr	r3, [pc, #88]	; (8000bd8 <TIM_OC2Init+0x78>)
 8000b7e:	b2a4      	uxth	r4, r4
 8000b80:	402b      	ands	r3, r5
 8000b82:	898d      	ldrh	r5, [r1, #12]
 8000b84:	012d      	lsls	r5, r5, #4
 8000b86:	432b      	orrs	r3, r5
 8000b88:	884d      	ldrh	r5, [r1, #2]
 8000b8a:	b29b      	uxth	r3, r3
 8000b8c:	012d      	lsls	r5, r5, #4
 8000b8e:	432b      	orrs	r3, r5
 8000b90:	4d12      	ldr	r5, [pc, #72]	; (8000bdc <TIM_OC2Init+0x7c>)
 8000b92:	b29b      	uxth	r3, r3
 8000b94:	42a8      	cmp	r0, r5
 8000b96:	d005      	beq.n	8000ba4 <TIM_OC2Init+0x44>
 8000b98:	8082      	strh	r2, [r0, #4]
 8000b9a:	688a      	ldr	r2, [r1, #8]
 8000b9c:	8304      	strh	r4, [r0, #24]
 8000b9e:	6382      	str	r2, [r0, #56]	; 0x38
 8000ba0:	8403      	strh	r3, [r0, #32]
 8000ba2:	bd30      	pop	{r4, r5, pc}
 8000ba4:	2580      	movs	r5, #128	; 0x80
 8000ba6:	43ab      	bics	r3, r5
 8000ba8:	89cd      	ldrh	r5, [r1, #14]
 8000baa:	012d      	lsls	r5, r5, #4
 8000bac:	432b      	orrs	r3, r5
 8000bae:	4d0c      	ldr	r5, [pc, #48]	; (8000be0 <TIM_OC2Init+0x80>)
 8000bb0:	402b      	ands	r3, r5
 8000bb2:	888d      	ldrh	r5, [r1, #4]
 8000bb4:	012d      	lsls	r5, r5, #4
 8000bb6:	432b      	orrs	r3, r5
 8000bb8:	4d0a      	ldr	r5, [pc, #40]	; (8000be4 <TIM_OC2Init+0x84>)
 8000bba:	b29b      	uxth	r3, r3
 8000bbc:	402a      	ands	r2, r5
 8000bbe:	8a0d      	ldrh	r5, [r1, #16]
 8000bc0:	00ad      	lsls	r5, r5, #2
 8000bc2:	432a      	orrs	r2, r5
 8000bc4:	8a4d      	ldrh	r5, [r1, #18]
 8000bc6:	b292      	uxth	r2, r2
 8000bc8:	00ad      	lsls	r5, r5, #2
 8000bca:	432a      	orrs	r2, r5
 8000bcc:	b292      	uxth	r2, r2
 8000bce:	e7e3      	b.n	8000b98 <TIM_OC2Init+0x38>
 8000bd0:	0000ffef 	.word	0x0000ffef
 8000bd4:	00008cff 	.word	0x00008cff
 8000bd8:	0000ffdf 	.word	0x0000ffdf
 8000bdc:	40012c00 	.word	0x40012c00
 8000be0:	0000ffbf 	.word	0x0000ffbf
 8000be4:	fffff3ff 	.word	0xfffff3ff

08000be8 <TIM_OC3Init>:
 8000be8:	6a02      	ldr	r2, [r0, #32]
 8000bea:	4b1a      	ldr	r3, [pc, #104]	; (8000c54 <TIM_OC3Init+0x6c>)
 8000bec:	b530      	push	{r4, r5, lr}
 8000bee:	4013      	ands	r3, r2
 8000bf0:	8403      	strh	r3, [r0, #32]
 8000bf2:	6a05      	ldr	r5, [r0, #32]
 8000bf4:	4b18      	ldr	r3, [pc, #96]	; (8000c58 <TIM_OC3Init+0x70>)
 8000bf6:	6842      	ldr	r2, [r0, #4]
 8000bf8:	69c4      	ldr	r4, [r0, #28]
 8000bfa:	b292      	uxth	r2, r2
 8000bfc:	401c      	ands	r4, r3
 8000bfe:	880b      	ldrh	r3, [r1, #0]
 8000c00:	431c      	orrs	r4, r3
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <TIM_OC3Init+0x74>)
 8000c04:	402b      	ands	r3, r5
 8000c06:	898d      	ldrh	r5, [r1, #12]
 8000c08:	022d      	lsls	r5, r5, #8
 8000c0a:	432b      	orrs	r3, r5
 8000c0c:	884d      	ldrh	r5, [r1, #2]
 8000c0e:	b29b      	uxth	r3, r3
 8000c10:	022d      	lsls	r5, r5, #8
 8000c12:	432b      	orrs	r3, r5
 8000c14:	4d12      	ldr	r5, [pc, #72]	; (8000c60 <TIM_OC3Init+0x78>)
 8000c16:	b29b      	uxth	r3, r3
 8000c18:	42a8      	cmp	r0, r5
 8000c1a:	d005      	beq.n	8000c28 <TIM_OC3Init+0x40>
 8000c1c:	8082      	strh	r2, [r0, #4]
 8000c1e:	688a      	ldr	r2, [r1, #8]
 8000c20:	8384      	strh	r4, [r0, #28]
 8000c22:	63c2      	str	r2, [r0, #60]	; 0x3c
 8000c24:	8403      	strh	r3, [r0, #32]
 8000c26:	bd30      	pop	{r4, r5, pc}
 8000c28:	4d0e      	ldr	r5, [pc, #56]	; (8000c64 <TIM_OC3Init+0x7c>)
 8000c2a:	402b      	ands	r3, r5
 8000c2c:	89cd      	ldrh	r5, [r1, #14]
 8000c2e:	022d      	lsls	r5, r5, #8
 8000c30:	432b      	orrs	r3, r5
 8000c32:	4d0d      	ldr	r5, [pc, #52]	; (8000c68 <TIM_OC3Init+0x80>)
 8000c34:	402b      	ands	r3, r5
 8000c36:	888d      	ldrh	r5, [r1, #4]
 8000c38:	022d      	lsls	r5, r5, #8
 8000c3a:	432b      	orrs	r3, r5
 8000c3c:	4d0b      	ldr	r5, [pc, #44]	; (8000c6c <TIM_OC3Init+0x84>)
 8000c3e:	b29b      	uxth	r3, r3
 8000c40:	402a      	ands	r2, r5
 8000c42:	8a0d      	ldrh	r5, [r1, #16]
 8000c44:	012d      	lsls	r5, r5, #4
 8000c46:	432a      	orrs	r2, r5
 8000c48:	8a4d      	ldrh	r5, [r1, #18]
 8000c4a:	b292      	uxth	r2, r2
 8000c4c:	012d      	lsls	r5, r5, #4
 8000c4e:	432a      	orrs	r2, r5
 8000c50:	b292      	uxth	r2, r2
 8000c52:	e7e3      	b.n	8000c1c <TIM_OC3Init+0x34>
 8000c54:	0000feff 	.word	0x0000feff
 8000c58:	0000ff8c 	.word	0x0000ff8c
 8000c5c:	0000fdff 	.word	0x0000fdff
 8000c60:	40012c00 	.word	0x40012c00
 8000c64:	fffff7ff 	.word	0xfffff7ff
 8000c68:	0000fbff 	.word	0x0000fbff
 8000c6c:	ffffcfff 	.word	0xffffcfff

08000c70 <TIM_OC4Init>:
 8000c70:	6a02      	ldr	r2, [r0, #32]
 8000c72:	4b14      	ldr	r3, [pc, #80]	; (8000cc4 <TIM_OC4Init+0x54>)
 8000c74:	b530      	push	{r4, r5, lr}
 8000c76:	4013      	ands	r3, r2
 8000c78:	8403      	strh	r3, [r0, #32]
 8000c7a:	6a05      	ldr	r5, [r0, #32]
 8000c7c:	4a12      	ldr	r2, [pc, #72]	; (8000cc8 <TIM_OC4Init+0x58>)
 8000c7e:	6843      	ldr	r3, [r0, #4]
 8000c80:	69c4      	ldr	r4, [r0, #28]
 8000c82:	b29b      	uxth	r3, r3
 8000c84:	4014      	ands	r4, r2
 8000c86:	880a      	ldrh	r2, [r1, #0]
 8000c88:	0212      	lsls	r2, r2, #8
 8000c8a:	4314      	orrs	r4, r2
 8000c8c:	4a0f      	ldr	r2, [pc, #60]	; (8000ccc <TIM_OC4Init+0x5c>)
 8000c8e:	b2a4      	uxth	r4, r4
 8000c90:	402a      	ands	r2, r5
 8000c92:	898d      	ldrh	r5, [r1, #12]
 8000c94:	032d      	lsls	r5, r5, #12
 8000c96:	432a      	orrs	r2, r5
 8000c98:	884d      	ldrh	r5, [r1, #2]
 8000c9a:	b292      	uxth	r2, r2
 8000c9c:	032d      	lsls	r5, r5, #12
 8000c9e:	432a      	orrs	r2, r5
 8000ca0:	4d0b      	ldr	r5, [pc, #44]	; (8000cd0 <TIM_OC4Init+0x60>)
 8000ca2:	b292      	uxth	r2, r2
 8000ca4:	42a8      	cmp	r0, r5
 8000ca6:	d005      	beq.n	8000cb4 <TIM_OC4Init+0x44>
 8000ca8:	8083      	strh	r3, [r0, #4]
 8000caa:	688b      	ldr	r3, [r1, #8]
 8000cac:	8384      	strh	r4, [r0, #28]
 8000cae:	6403      	str	r3, [r0, #64]	; 0x40
 8000cb0:	8402      	strh	r2, [r0, #32]
 8000cb2:	bd30      	pop	{r4, r5, pc}
 8000cb4:	4d07      	ldr	r5, [pc, #28]	; (8000cd4 <TIM_OC4Init+0x64>)
 8000cb6:	402b      	ands	r3, r5
 8000cb8:	8a0d      	ldrh	r5, [r1, #16]
 8000cba:	01ad      	lsls	r5, r5, #6
 8000cbc:	432b      	orrs	r3, r5
 8000cbe:	b29b      	uxth	r3, r3
 8000cc0:	e7f2      	b.n	8000ca8 <TIM_OC4Init+0x38>
 8000cc2:	46c0      	nop			; (mov r8, r8)
 8000cc4:	0000efff 	.word	0x0000efff
 8000cc8:	00008cff 	.word	0x00008cff
 8000ccc:	0000dfff 	.word	0x0000dfff
 8000cd0:	40012c00 	.word	0x40012c00
 8000cd4:	ffffbfff 	.word	0xffffbfff

08000cd8 <TIM_OCStructInit>:
 8000cd8:	2300      	movs	r3, #0
 8000cda:	8003      	strh	r3, [r0, #0]
 8000cdc:	8043      	strh	r3, [r0, #2]
 8000cde:	8083      	strh	r3, [r0, #4]
 8000ce0:	6083      	str	r3, [r0, #8]
 8000ce2:	8183      	strh	r3, [r0, #12]
 8000ce4:	81c3      	strh	r3, [r0, #14]
 8000ce6:	8203      	strh	r3, [r0, #16]
 8000ce8:	8243      	strh	r3, [r0, #18]
 8000cea:	4770      	bx	lr

08000cec <TIM_SelectOCxM>:
 8000cec:	b530      	push	{r4, r5, lr}
 8000cee:	6a03      	ldr	r3, [r0, #32]
 8000cf0:	2401      	movs	r4, #1
 8000cf2:	b29b      	uxth	r3, r3
 8000cf4:	408c      	lsls	r4, r1
 8000cf6:	43a3      	bics	r3, r4
 8000cf8:	1c05      	adds	r5, r0, #0
 8000cfa:	8403      	strh	r3, [r0, #32]
 8000cfc:	2308      	movs	r3, #8
 8000cfe:	1c08      	adds	r0, r1, #0
 8000d00:	3518      	adds	r5, #24
 8000d02:	4398      	bics	r0, r3
 8000d04:	d00d      	beq.n	8000d22 <TIM_SelectOCxM+0x36>
 8000d06:	3904      	subs	r1, #4
 8000d08:	b289      	uxth	r1, r1
 8000d0a:	0849      	lsrs	r1, r1, #1
 8000d0c:	1949      	adds	r1, r1, r5
 8000d0e:	6808      	ldr	r0, [r1, #0]
 8000d10:	4b09      	ldr	r3, [pc, #36]	; (8000d38 <TIM_SelectOCxM+0x4c>)
 8000d12:	0212      	lsls	r2, r2, #8
 8000d14:	4003      	ands	r3, r0
 8000d16:	600b      	str	r3, [r1, #0]
 8000d18:	680b      	ldr	r3, [r1, #0]
 8000d1a:	b292      	uxth	r2, r2
 8000d1c:	431a      	orrs	r2, r3
 8000d1e:	600a      	str	r2, [r1, #0]
 8000d20:	bd30      	pop	{r4, r5, pc}
 8000d22:	0849      	lsrs	r1, r1, #1
 8000d24:	1869      	adds	r1, r5, r1
 8000d26:	680b      	ldr	r3, [r1, #0]
 8000d28:	2070      	movs	r0, #112	; 0x70
 8000d2a:	4383      	bics	r3, r0
 8000d2c:	600b      	str	r3, [r1, #0]
 8000d2e:	680b      	ldr	r3, [r1, #0]
 8000d30:	431a      	orrs	r2, r3
 8000d32:	600a      	str	r2, [r1, #0]
 8000d34:	e7f4      	b.n	8000d20 <TIM_SelectOCxM+0x34>
 8000d36:	46c0      	nop			; (mov r8, r8)
 8000d38:	ffff8fff 	.word	0xffff8fff

08000d3c <TIM_SetCompare1>:
 8000d3c:	6341      	str	r1, [r0, #52]	; 0x34
 8000d3e:	4770      	bx	lr

08000d40 <TIM_SetCompare2>:
 8000d40:	6381      	str	r1, [r0, #56]	; 0x38
 8000d42:	4770      	bx	lr

08000d44 <TIM_SetCompare3>:
 8000d44:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000d46:	4770      	bx	lr

08000d48 <TIM_SetCompare4>:
 8000d48:	6401      	str	r1, [r0, #64]	; 0x40
 8000d4a:	4770      	bx	lr

08000d4c <TIM_ForcedOC1Config>:
 8000d4c:	6982      	ldr	r2, [r0, #24]
 8000d4e:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <TIM_ForcedOC1Config+0xc>)
 8000d50:	4013      	ands	r3, r2
 8000d52:	4319      	orrs	r1, r3
 8000d54:	8301      	strh	r1, [r0, #24]
 8000d56:	4770      	bx	lr
 8000d58:	0000ff8f 	.word	0x0000ff8f

08000d5c <TIM_ForcedOC2Config>:
 8000d5c:	6982      	ldr	r2, [r0, #24]
 8000d5e:	4b04      	ldr	r3, [pc, #16]	; (8000d70 <TIM_ForcedOC2Config+0x14>)
 8000d60:	401a      	ands	r2, r3
 8000d62:	020b      	lsls	r3, r1, #8
 8000d64:	1c11      	adds	r1, r2, #0
 8000d66:	4319      	orrs	r1, r3
 8000d68:	b289      	uxth	r1, r1
 8000d6a:	8301      	strh	r1, [r0, #24]
 8000d6c:	4770      	bx	lr
 8000d6e:	46c0      	nop			; (mov r8, r8)
 8000d70:	00008fff 	.word	0x00008fff

08000d74 <TIM_ForcedOC3Config>:
 8000d74:	69c2      	ldr	r2, [r0, #28]
 8000d76:	4b02      	ldr	r3, [pc, #8]	; (8000d80 <TIM_ForcedOC3Config+0xc>)
 8000d78:	4013      	ands	r3, r2
 8000d7a:	4319      	orrs	r1, r3
 8000d7c:	8381      	strh	r1, [r0, #28]
 8000d7e:	4770      	bx	lr
 8000d80:	0000ff8f 	.word	0x0000ff8f

08000d84 <TIM_ForcedOC4Config>:
 8000d84:	69c2      	ldr	r2, [r0, #28]
 8000d86:	4b04      	ldr	r3, [pc, #16]	; (8000d98 <TIM_ForcedOC4Config+0x14>)
 8000d88:	401a      	ands	r2, r3
 8000d8a:	020b      	lsls	r3, r1, #8
 8000d8c:	1c11      	adds	r1, r2, #0
 8000d8e:	4319      	orrs	r1, r3
 8000d90:	b289      	uxth	r1, r1
 8000d92:	8381      	strh	r1, [r0, #28]
 8000d94:	4770      	bx	lr
 8000d96:	46c0      	nop			; (mov r8, r8)
 8000d98:	00008fff 	.word	0x00008fff

08000d9c <TIM_CCPreloadControl>:
 8000d9c:	2900      	cmp	r1, #0
 8000d9e:	d104      	bne.n	8000daa <TIM_CCPreloadControl+0xe>
 8000da0:	6842      	ldr	r2, [r0, #4]
 8000da2:	4b05      	ldr	r3, [pc, #20]	; (8000db8 <TIM_CCPreloadControl+0x1c>)
 8000da4:	4013      	ands	r3, r2
 8000da6:	8083      	strh	r3, [r0, #4]
 8000da8:	4770      	bx	lr
 8000daa:	6843      	ldr	r3, [r0, #4]
 8000dac:	2201      	movs	r2, #1
 8000dae:	b29b      	uxth	r3, r3
 8000db0:	4313      	orrs	r3, r2
 8000db2:	8083      	strh	r3, [r0, #4]
 8000db4:	e7f8      	b.n	8000da8 <TIM_CCPreloadControl+0xc>
 8000db6:	46c0      	nop			; (mov r8, r8)
 8000db8:	0000fffe 	.word	0x0000fffe

08000dbc <TIM_OC1PreloadConfig>:
 8000dbc:	6982      	ldr	r2, [r0, #24]
 8000dbe:	4b02      	ldr	r3, [pc, #8]	; (8000dc8 <TIM_OC1PreloadConfig+0xc>)
 8000dc0:	4013      	ands	r3, r2
 8000dc2:	4319      	orrs	r1, r3
 8000dc4:	8301      	strh	r1, [r0, #24]
 8000dc6:	4770      	bx	lr
 8000dc8:	0000fff7 	.word	0x0000fff7

08000dcc <TIM_OC2PreloadConfig>:
 8000dcc:	6982      	ldr	r2, [r0, #24]
 8000dce:	4b04      	ldr	r3, [pc, #16]	; (8000de0 <TIM_OC2PreloadConfig+0x14>)
 8000dd0:	401a      	ands	r2, r3
 8000dd2:	020b      	lsls	r3, r1, #8
 8000dd4:	1c11      	adds	r1, r2, #0
 8000dd6:	4319      	orrs	r1, r3
 8000dd8:	b289      	uxth	r1, r1
 8000dda:	8301      	strh	r1, [r0, #24]
 8000ddc:	4770      	bx	lr
 8000dde:	46c0      	nop			; (mov r8, r8)
 8000de0:	0000f7ff 	.word	0x0000f7ff

08000de4 <TIM_OC3PreloadConfig>:
 8000de4:	69c2      	ldr	r2, [r0, #28]
 8000de6:	4b02      	ldr	r3, [pc, #8]	; (8000df0 <TIM_OC3PreloadConfig+0xc>)
 8000de8:	4013      	ands	r3, r2
 8000dea:	4319      	orrs	r1, r3
 8000dec:	8381      	strh	r1, [r0, #28]
 8000dee:	4770      	bx	lr
 8000df0:	0000fff7 	.word	0x0000fff7

08000df4 <TIM_OC4PreloadConfig>:
 8000df4:	69c2      	ldr	r2, [r0, #28]
 8000df6:	4b04      	ldr	r3, [pc, #16]	; (8000e08 <TIM_OC4PreloadConfig+0x14>)
 8000df8:	401a      	ands	r2, r3
 8000dfa:	020b      	lsls	r3, r1, #8
 8000dfc:	1c11      	adds	r1, r2, #0
 8000dfe:	4319      	orrs	r1, r3
 8000e00:	b289      	uxth	r1, r1
 8000e02:	8381      	strh	r1, [r0, #28]
 8000e04:	4770      	bx	lr
 8000e06:	46c0      	nop			; (mov r8, r8)
 8000e08:	0000f7ff 	.word	0x0000f7ff

08000e0c <TIM_OC1FastConfig>:
 8000e0c:	6982      	ldr	r2, [r0, #24]
 8000e0e:	4b02      	ldr	r3, [pc, #8]	; (8000e18 <TIM_OC1FastConfig+0xc>)
 8000e10:	4013      	ands	r3, r2
 8000e12:	4319      	orrs	r1, r3
 8000e14:	8301      	strh	r1, [r0, #24]
 8000e16:	4770      	bx	lr
 8000e18:	0000fffb 	.word	0x0000fffb

08000e1c <TIM_OC2FastConfig>:
 8000e1c:	6982      	ldr	r2, [r0, #24]
 8000e1e:	4b04      	ldr	r3, [pc, #16]	; (8000e30 <TIM_OC2FastConfig+0x14>)
 8000e20:	401a      	ands	r2, r3
 8000e22:	020b      	lsls	r3, r1, #8
 8000e24:	1c11      	adds	r1, r2, #0
 8000e26:	4319      	orrs	r1, r3
 8000e28:	b289      	uxth	r1, r1
 8000e2a:	8301      	strh	r1, [r0, #24]
 8000e2c:	4770      	bx	lr
 8000e2e:	46c0      	nop			; (mov r8, r8)
 8000e30:	0000fbff 	.word	0x0000fbff

08000e34 <TIM_OC3FastConfig>:
 8000e34:	69c2      	ldr	r2, [r0, #28]
 8000e36:	4b02      	ldr	r3, [pc, #8]	; (8000e40 <TIM_OC3FastConfig+0xc>)
 8000e38:	4013      	ands	r3, r2
 8000e3a:	4319      	orrs	r1, r3
 8000e3c:	8381      	strh	r1, [r0, #28]
 8000e3e:	4770      	bx	lr
 8000e40:	0000fffb 	.word	0x0000fffb

08000e44 <TIM_OC4FastConfig>:
 8000e44:	69c2      	ldr	r2, [r0, #28]
 8000e46:	4b04      	ldr	r3, [pc, #16]	; (8000e58 <TIM_OC4FastConfig+0x14>)
 8000e48:	401a      	ands	r2, r3
 8000e4a:	020b      	lsls	r3, r1, #8
 8000e4c:	1c11      	adds	r1, r2, #0
 8000e4e:	4319      	orrs	r1, r3
 8000e50:	b289      	uxth	r1, r1
 8000e52:	8381      	strh	r1, [r0, #28]
 8000e54:	4770      	bx	lr
 8000e56:	46c0      	nop			; (mov r8, r8)
 8000e58:	0000fbff 	.word	0x0000fbff

08000e5c <TIM_ClearOC1Ref>:
 8000e5c:	6982      	ldr	r2, [r0, #24]
 8000e5e:	4b02      	ldr	r3, [pc, #8]	; (8000e68 <TIM_ClearOC1Ref+0xc>)
 8000e60:	4013      	ands	r3, r2
 8000e62:	4319      	orrs	r1, r3
 8000e64:	8301      	strh	r1, [r0, #24]
 8000e66:	4770      	bx	lr
 8000e68:	0000ff7f 	.word	0x0000ff7f

08000e6c <TIM_ClearOC2Ref>:
 8000e6c:	6983      	ldr	r3, [r0, #24]
 8000e6e:	0209      	lsls	r1, r1, #8
 8000e70:	045b      	lsls	r3, r3, #17
 8000e72:	0c5b      	lsrs	r3, r3, #17
 8000e74:	4319      	orrs	r1, r3
 8000e76:	b289      	uxth	r1, r1
 8000e78:	8301      	strh	r1, [r0, #24]
 8000e7a:	4770      	bx	lr

08000e7c <TIM_ClearOC3Ref>:
 8000e7c:	69c2      	ldr	r2, [r0, #28]
 8000e7e:	4b02      	ldr	r3, [pc, #8]	; (8000e88 <TIM_ClearOC3Ref+0xc>)
 8000e80:	4013      	ands	r3, r2
 8000e82:	4319      	orrs	r1, r3
 8000e84:	8381      	strh	r1, [r0, #28]
 8000e86:	4770      	bx	lr
 8000e88:	0000ff7f 	.word	0x0000ff7f

08000e8c <TIM_ClearOC4Ref>:
 8000e8c:	69c3      	ldr	r3, [r0, #28]
 8000e8e:	0209      	lsls	r1, r1, #8
 8000e90:	045b      	lsls	r3, r3, #17
 8000e92:	0c5b      	lsrs	r3, r3, #17
 8000e94:	4319      	orrs	r1, r3
 8000e96:	b289      	uxth	r1, r1
 8000e98:	8381      	strh	r1, [r0, #28]
 8000e9a:	4770      	bx	lr

08000e9c <TIM_OC1PolarityConfig>:
 8000e9c:	6a02      	ldr	r2, [r0, #32]
 8000e9e:	4b02      	ldr	r3, [pc, #8]	; (8000ea8 <TIM_OC1PolarityConfig+0xc>)
 8000ea0:	4013      	ands	r3, r2
 8000ea2:	4319      	orrs	r1, r3
 8000ea4:	8401      	strh	r1, [r0, #32]
 8000ea6:	4770      	bx	lr
 8000ea8:	0000fffd 	.word	0x0000fffd

08000eac <TIM_OC1NPolarityConfig>:
 8000eac:	6a02      	ldr	r2, [r0, #32]
 8000eae:	4b02      	ldr	r3, [pc, #8]	; (8000eb8 <TIM_OC1NPolarityConfig+0xc>)
 8000eb0:	4013      	ands	r3, r2
 8000eb2:	4319      	orrs	r1, r3
 8000eb4:	8401      	strh	r1, [r0, #32]
 8000eb6:	4770      	bx	lr
 8000eb8:	0000fff7 	.word	0x0000fff7

08000ebc <TIM_OC2PolarityConfig>:
 8000ebc:	6a02      	ldr	r2, [r0, #32]
 8000ebe:	4b04      	ldr	r3, [pc, #16]	; (8000ed0 <TIM_OC2PolarityConfig+0x14>)
 8000ec0:	401a      	ands	r2, r3
 8000ec2:	010b      	lsls	r3, r1, #4
 8000ec4:	1c11      	adds	r1, r2, #0
 8000ec6:	4319      	orrs	r1, r3
 8000ec8:	b289      	uxth	r1, r1
 8000eca:	8401      	strh	r1, [r0, #32]
 8000ecc:	4770      	bx	lr
 8000ece:	46c0      	nop			; (mov r8, r8)
 8000ed0:	0000ffdf 	.word	0x0000ffdf

08000ed4 <TIM_OC2NPolarityConfig>:
 8000ed4:	6a02      	ldr	r2, [r0, #32]
 8000ed6:	4b04      	ldr	r3, [pc, #16]	; (8000ee8 <TIM_OC2NPolarityConfig+0x14>)
 8000ed8:	401a      	ands	r2, r3
 8000eda:	010b      	lsls	r3, r1, #4
 8000edc:	1c11      	adds	r1, r2, #0
 8000ede:	4319      	orrs	r1, r3
 8000ee0:	b289      	uxth	r1, r1
 8000ee2:	8401      	strh	r1, [r0, #32]
 8000ee4:	4770      	bx	lr
 8000ee6:	46c0      	nop			; (mov r8, r8)
 8000ee8:	0000ff7f 	.word	0x0000ff7f

08000eec <TIM_OC3PolarityConfig>:
 8000eec:	6a02      	ldr	r2, [r0, #32]
 8000eee:	4b04      	ldr	r3, [pc, #16]	; (8000f00 <TIM_OC3PolarityConfig+0x14>)
 8000ef0:	401a      	ands	r2, r3
 8000ef2:	020b      	lsls	r3, r1, #8
 8000ef4:	1c11      	adds	r1, r2, #0
 8000ef6:	4319      	orrs	r1, r3
 8000ef8:	b289      	uxth	r1, r1
 8000efa:	8401      	strh	r1, [r0, #32]
 8000efc:	4770      	bx	lr
 8000efe:	46c0      	nop			; (mov r8, r8)
 8000f00:	0000fdff 	.word	0x0000fdff

08000f04 <TIM_OC3NPolarityConfig>:
 8000f04:	6a02      	ldr	r2, [r0, #32]
 8000f06:	4b04      	ldr	r3, [pc, #16]	; (8000f18 <TIM_OC3NPolarityConfig+0x14>)
 8000f08:	401a      	ands	r2, r3
 8000f0a:	020b      	lsls	r3, r1, #8
 8000f0c:	1c11      	adds	r1, r2, #0
 8000f0e:	4319      	orrs	r1, r3
 8000f10:	b289      	uxth	r1, r1
 8000f12:	8401      	strh	r1, [r0, #32]
 8000f14:	4770      	bx	lr
 8000f16:	46c0      	nop			; (mov r8, r8)
 8000f18:	0000f7ff 	.word	0x0000f7ff

08000f1c <TIM_OC4PolarityConfig>:
 8000f1c:	6a02      	ldr	r2, [r0, #32]
 8000f1e:	4b04      	ldr	r3, [pc, #16]	; (8000f30 <TIM_OC4PolarityConfig+0x14>)
 8000f20:	401a      	ands	r2, r3
 8000f22:	030b      	lsls	r3, r1, #12
 8000f24:	1c11      	adds	r1, r2, #0
 8000f26:	4319      	orrs	r1, r3
 8000f28:	b289      	uxth	r1, r1
 8000f2a:	8401      	strh	r1, [r0, #32]
 8000f2c:	4770      	bx	lr
 8000f2e:	46c0      	nop			; (mov r8, r8)
 8000f30:	0000dfff 	.word	0x0000dfff

08000f34 <TIM_SelectOCREFClear>:
 8000f34:	6882      	ldr	r2, [r0, #8]
 8000f36:	4b04      	ldr	r3, [pc, #16]	; (8000f48 <TIM_SelectOCREFClear+0x14>)
 8000f38:	4013      	ands	r3, r2
 8000f3a:	8103      	strh	r3, [r0, #8]
 8000f3c:	6883      	ldr	r3, [r0, #8]
 8000f3e:	b29b      	uxth	r3, r3
 8000f40:	4319      	orrs	r1, r3
 8000f42:	8101      	strh	r1, [r0, #8]
 8000f44:	4770      	bx	lr
 8000f46:	46c0      	nop			; (mov r8, r8)
 8000f48:	0000fff7 	.word	0x0000fff7

08000f4c <TIM_CCxCmd>:
 8000f4c:	6a03      	ldr	r3, [r0, #32]
 8000f4e:	b510      	push	{r4, lr}
 8000f50:	2401      	movs	r4, #1
 8000f52:	408c      	lsls	r4, r1
 8000f54:	b29b      	uxth	r3, r3
 8000f56:	43a3      	bics	r3, r4
 8000f58:	8403      	strh	r3, [r0, #32]
 8000f5a:	6a03      	ldr	r3, [r0, #32]
 8000f5c:	408a      	lsls	r2, r1
 8000f5e:	1c11      	adds	r1, r2, #0
 8000f60:	4319      	orrs	r1, r3
 8000f62:	b289      	uxth	r1, r1
 8000f64:	8401      	strh	r1, [r0, #32]
 8000f66:	bd10      	pop	{r4, pc}

08000f68 <TIM_CCxNCmd>:
 8000f68:	6a03      	ldr	r3, [r0, #32]
 8000f6a:	b510      	push	{r4, lr}
 8000f6c:	2404      	movs	r4, #4
 8000f6e:	408c      	lsls	r4, r1
 8000f70:	b29b      	uxth	r3, r3
 8000f72:	43a3      	bics	r3, r4
 8000f74:	8403      	strh	r3, [r0, #32]
 8000f76:	6a03      	ldr	r3, [r0, #32]
 8000f78:	408a      	lsls	r2, r1
 8000f7a:	1c11      	adds	r1, r2, #0
 8000f7c:	4319      	orrs	r1, r3
 8000f7e:	b289      	uxth	r1, r1
 8000f80:	8401      	strh	r1, [r0, #32]
 8000f82:	bd10      	pop	{r4, pc}

08000f84 <TIM_SelectCOM>:
 8000f84:	2900      	cmp	r1, #0
 8000f86:	d104      	bne.n	8000f92 <TIM_SelectCOM+0xe>
 8000f88:	6842      	ldr	r2, [r0, #4]
 8000f8a:	4b05      	ldr	r3, [pc, #20]	; (8000fa0 <TIM_SelectCOM+0x1c>)
 8000f8c:	4013      	ands	r3, r2
 8000f8e:	8083      	strh	r3, [r0, #4]
 8000f90:	4770      	bx	lr
 8000f92:	6843      	ldr	r3, [r0, #4]
 8000f94:	2204      	movs	r2, #4
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	4313      	orrs	r3, r2
 8000f9a:	8083      	strh	r3, [r0, #4]
 8000f9c:	e7f8      	b.n	8000f90 <TIM_SelectCOM+0xc>
 8000f9e:	46c0      	nop			; (mov r8, r8)
 8000fa0:	0000fffb 	.word	0x0000fffb

08000fa4 <TIM_ICInit>:
 8000fa4:	880b      	ldrh	r3, [r1, #0]
 8000fa6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	d02b      	beq.n	8001004 <TIM_ICInit+0x60>
 8000fac:	2b04      	cmp	r3, #4
 8000fae:	d04a      	beq.n	8001046 <TIM_ICInit+0xa2>
 8000fb0:	2b08      	cmp	r3, #8
 8000fb2:	d100      	bne.n	8000fb6 <TIM_ICInit+0x12>
 8000fb4:	e06d      	b.n	8001092 <TIM_ICInit+0xee>
 8000fb6:	6a05      	ldr	r5, [r0, #32]
 8000fb8:	4a47      	ldr	r2, [pc, #284]	; (80010d8 <TIM_ICInit+0x134>)
 8000fba:	884b      	ldrh	r3, [r1, #2]
 8000fbc:	402a      	ands	r2, r5
 8000fbe:	888e      	ldrh	r6, [r1, #4]
 8000fc0:	890c      	ldrh	r4, [r1, #8]
 8000fc2:	8402      	strh	r2, [r0, #32]
 8000fc4:	69c7      	ldr	r7, [r0, #28]
 8000fc6:	4a45      	ldr	r2, [pc, #276]	; (80010dc <TIM_ICInit+0x138>)
 8000fc8:	0236      	lsls	r6, r6, #8
 8000fca:	403a      	ands	r2, r7
 8000fcc:	4332      	orrs	r2, r6
 8000fce:	0324      	lsls	r4, r4, #12
 8000fd0:	b292      	uxth	r2, r2
 8000fd2:	6a05      	ldr	r5, [r0, #32]
 8000fd4:	4322      	orrs	r2, r4
 8000fd6:	4c42      	ldr	r4, [pc, #264]	; (80010e0 <TIM_ICInit+0x13c>)
 8000fd8:	031b      	lsls	r3, r3, #12
 8000fda:	402c      	ands	r4, r5
 8000fdc:	431c      	orrs	r4, r3
 8000fde:	2380      	movs	r3, #128	; 0x80
 8000fe0:	b2a4      	uxth	r4, r4
 8000fe2:	015b      	lsls	r3, r3, #5
 8000fe4:	b292      	uxth	r2, r2
 8000fe6:	4323      	orrs	r3, r4
 8000fe8:	8382      	strh	r2, [r0, #28]
 8000fea:	8403      	strh	r3, [r0, #32]
 8000fec:	4a3d      	ldr	r2, [pc, #244]	; (80010e4 <TIM_ICInit+0x140>)
 8000fee:	88cb      	ldrh	r3, [r1, #6]
 8000ff0:	69c1      	ldr	r1, [r0, #28]
 8000ff2:	021b      	lsls	r3, r3, #8
 8000ff4:	400a      	ands	r2, r1
 8000ff6:	8382      	strh	r2, [r0, #28]
 8000ff8:	69c2      	ldr	r2, [r0, #28]
 8000ffa:	b292      	uxth	r2, r2
 8000ffc:	4313      	orrs	r3, r2
 8000ffe:	b29b      	uxth	r3, r3
 8001000:	8383      	strh	r3, [r0, #28]
 8001002:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001004:	6a04      	ldr	r4, [r0, #32]
 8001006:	4a38      	ldr	r2, [pc, #224]	; (80010e8 <TIM_ICInit+0x144>)
 8001008:	888b      	ldrh	r3, [r1, #4]
 800100a:	4022      	ands	r2, r4
 800100c:	884d      	ldrh	r5, [r1, #2]
 800100e:	890e      	ldrh	r6, [r1, #8]
 8001010:	8402      	strh	r2, [r0, #32]
 8001012:	6987      	ldr	r7, [r0, #24]
 8001014:	4a35      	ldr	r2, [pc, #212]	; (80010ec <TIM_ICInit+0x148>)
 8001016:	0136      	lsls	r6, r6, #4
 8001018:	403a      	ands	r2, r7
 800101a:	4332      	orrs	r2, r6
 800101c:	b292      	uxth	r2, r2
 800101e:	6a04      	ldr	r4, [r0, #32]
 8001020:	431a      	orrs	r2, r3
 8001022:	4b33      	ldr	r3, [pc, #204]	; (80010f0 <TIM_ICInit+0x14c>)
 8001024:	8302      	strh	r2, [r0, #24]
 8001026:	401c      	ands	r4, r3
 8001028:	2301      	movs	r3, #1
 800102a:	432b      	orrs	r3, r5
 800102c:	4323      	orrs	r3, r4
 800102e:	b29b      	uxth	r3, r3
 8001030:	8403      	strh	r3, [r0, #32]
 8001032:	88ca      	ldrh	r2, [r1, #6]
 8001034:	4b2f      	ldr	r3, [pc, #188]	; (80010f4 <TIM_ICInit+0x150>)
 8001036:	6981      	ldr	r1, [r0, #24]
 8001038:	400b      	ands	r3, r1
 800103a:	8303      	strh	r3, [r0, #24]
 800103c:	6983      	ldr	r3, [r0, #24]
 800103e:	b29b      	uxth	r3, r3
 8001040:	4313      	orrs	r3, r2
 8001042:	8303      	strh	r3, [r0, #24]
 8001044:	e7dd      	b.n	8001002 <TIM_ICInit+0x5e>
 8001046:	6a05      	ldr	r5, [r0, #32]
 8001048:	4a2b      	ldr	r2, [pc, #172]	; (80010f8 <TIM_ICInit+0x154>)
 800104a:	884c      	ldrh	r4, [r1, #2]
 800104c:	402a      	ands	r2, r5
 800104e:	888b      	ldrh	r3, [r1, #4]
 8001050:	890e      	ldrh	r6, [r1, #8]
 8001052:	8402      	strh	r2, [r0, #32]
 8001054:	6987      	ldr	r7, [r0, #24]
 8001056:	4a21      	ldr	r2, [pc, #132]	; (80010dc <TIM_ICInit+0x138>)
 8001058:	0336      	lsls	r6, r6, #12
 800105a:	403a      	ands	r2, r7
 800105c:	4332      	orrs	r2, r6
 800105e:	021b      	lsls	r3, r3, #8
 8001060:	b292      	uxth	r2, r2
 8001062:	6a05      	ldr	r5, [r0, #32]
 8001064:	431a      	orrs	r2, r3
 8001066:	4b25      	ldr	r3, [pc, #148]	; (80010fc <TIM_ICInit+0x158>)
 8001068:	0124      	lsls	r4, r4, #4
 800106a:	402b      	ands	r3, r5
 800106c:	4323      	orrs	r3, r4
 800106e:	b29b      	uxth	r3, r3
 8001070:	2410      	movs	r4, #16
 8001072:	b292      	uxth	r2, r2
 8001074:	4323      	orrs	r3, r4
 8001076:	8302      	strh	r2, [r0, #24]
 8001078:	8403      	strh	r3, [r0, #32]
 800107a:	4a1a      	ldr	r2, [pc, #104]	; (80010e4 <TIM_ICInit+0x140>)
 800107c:	88cb      	ldrh	r3, [r1, #6]
 800107e:	6981      	ldr	r1, [r0, #24]
 8001080:	021b      	lsls	r3, r3, #8
 8001082:	400a      	ands	r2, r1
 8001084:	8302      	strh	r2, [r0, #24]
 8001086:	6982      	ldr	r2, [r0, #24]
 8001088:	b292      	uxth	r2, r2
 800108a:	4313      	orrs	r3, r2
 800108c:	b29b      	uxth	r3, r3
 800108e:	8303      	strh	r3, [r0, #24]
 8001090:	e7b7      	b.n	8001002 <TIM_ICInit+0x5e>
 8001092:	6a05      	ldr	r5, [r0, #32]
 8001094:	4a1a      	ldr	r2, [pc, #104]	; (8001100 <TIM_ICInit+0x15c>)
 8001096:	888c      	ldrh	r4, [r1, #4]
 8001098:	402a      	ands	r2, r5
 800109a:	884b      	ldrh	r3, [r1, #2]
 800109c:	890e      	ldrh	r6, [r1, #8]
 800109e:	8402      	strh	r2, [r0, #32]
 80010a0:	69c7      	ldr	r7, [r0, #28]
 80010a2:	4a12      	ldr	r2, [pc, #72]	; (80010ec <TIM_ICInit+0x148>)
 80010a4:	0136      	lsls	r6, r6, #4
 80010a6:	403a      	ands	r2, r7
 80010a8:	4332      	orrs	r2, r6
 80010aa:	b292      	uxth	r2, r2
 80010ac:	6a05      	ldr	r5, [r0, #32]
 80010ae:	4322      	orrs	r2, r4
 80010b0:	4c14      	ldr	r4, [pc, #80]	; (8001104 <TIM_ICInit+0x160>)
 80010b2:	021b      	lsls	r3, r3, #8
 80010b4:	402c      	ands	r4, r5
 80010b6:	431c      	orrs	r4, r3
 80010b8:	2380      	movs	r3, #128	; 0x80
 80010ba:	b2a4      	uxth	r4, r4
 80010bc:	005b      	lsls	r3, r3, #1
 80010be:	4323      	orrs	r3, r4
 80010c0:	8382      	strh	r2, [r0, #28]
 80010c2:	8403      	strh	r3, [r0, #32]
 80010c4:	88ca      	ldrh	r2, [r1, #6]
 80010c6:	4b0b      	ldr	r3, [pc, #44]	; (80010f4 <TIM_ICInit+0x150>)
 80010c8:	69c1      	ldr	r1, [r0, #28]
 80010ca:	400b      	ands	r3, r1
 80010cc:	8383      	strh	r3, [r0, #28]
 80010ce:	69c3      	ldr	r3, [r0, #28]
 80010d0:	b29b      	uxth	r3, r3
 80010d2:	4313      	orrs	r3, r2
 80010d4:	8383      	strh	r3, [r0, #28]
 80010d6:	e794      	b.n	8001002 <TIM_ICInit+0x5e>
 80010d8:	0000efff 	.word	0x0000efff
 80010dc:	00000cff 	.word	0x00000cff
 80010e0:	00005fff 	.word	0x00005fff
 80010e4:	0000f3ff 	.word	0x0000f3ff
 80010e8:	0000fffe 	.word	0x0000fffe
 80010ec:	0000ff0c 	.word	0x0000ff0c
 80010f0:	0000fff5 	.word	0x0000fff5
 80010f4:	0000fff3 	.word	0x0000fff3
 80010f8:	0000ffef 	.word	0x0000ffef
 80010fc:	0000ff5f 	.word	0x0000ff5f
 8001100:	0000feff 	.word	0x0000feff
 8001104:	0000f5ff 	.word	0x0000f5ff

08001108 <TIM_ICStructInit>:
 8001108:	2300      	movs	r3, #0
 800110a:	2201      	movs	r2, #1
 800110c:	8003      	strh	r3, [r0, #0]
 800110e:	8043      	strh	r3, [r0, #2]
 8001110:	8082      	strh	r2, [r0, #4]
 8001112:	80c3      	strh	r3, [r0, #6]
 8001114:	8103      	strh	r3, [r0, #8]
 8001116:	4770      	bx	lr

08001118 <TIM_PWMIConfig>:
 8001118:	884b      	ldrh	r3, [r1, #2]
 800111a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800111c:	425c      	negs	r4, r3
 800111e:	415c      	adcs	r4, r3
 8001120:	0062      	lsls	r2, r4, #1
 8001122:	4657      	mov	r7, sl
 8001124:	4692      	mov	sl, r2
 8001126:	888a      	ldrh	r2, [r1, #4]
 8001128:	464e      	mov	r6, r9
 800112a:	4645      	mov	r5, r8
 800112c:	b4e0      	push	{r5, r6, r7}
 800112e:	1e55      	subs	r5, r2, #1
 8001130:	1e6e      	subs	r6, r5, #1
 8001132:	41b5      	sbcs	r5, r6
 8001134:	2602      	movs	r6, #2
 8001136:	1b75      	subs	r5, r6, r5
 8001138:	880e      	ldrh	r6, [r1, #0]
 800113a:	2e00      	cmp	r6, #0
 800113c:	d04e      	beq.n	80011dc <TIM_PWMIConfig+0xc4>
 800113e:	6a07      	ldr	r7, [r0, #32]
 8001140:	4e4f      	ldr	r6, [pc, #316]	; (8001280 <TIM_PWMIConfig+0x168>)
 8001142:	46bc      	mov	ip, r7
 8001144:	1c37      	adds	r7, r6, #0
 8001146:	4666      	mov	r6, ip
 8001148:	4037      	ands	r7, r6
 800114a:	890c      	ldrh	r4, [r1, #8]
 800114c:	8407      	strh	r7, [r0, #32]
 800114e:	6986      	ldr	r6, [r0, #24]
 8001150:	6a07      	ldr	r7, [r0, #32]
 8001152:	46b0      	mov	r8, r6
 8001154:	4e4b      	ldr	r6, [pc, #300]	; (8001284 <TIM_PWMIConfig+0x16c>)
 8001156:	46bc      	mov	ip, r7
 8001158:	4647      	mov	r7, r8
 800115a:	4037      	ands	r7, r6
 800115c:	46b8      	mov	r8, r7
 800115e:	4646      	mov	r6, r8
 8001160:	0327      	lsls	r7, r4, #12
 8001162:	4337      	orrs	r7, r6
 8001164:	b2be      	uxth	r6, r7
 8001166:	4f48      	ldr	r7, [pc, #288]	; (8001288 <TIM_PWMIConfig+0x170>)
 8001168:	0212      	lsls	r2, r2, #8
 800116a:	4332      	orrs	r2, r6
 800116c:	011e      	lsls	r6, r3, #4
 800116e:	1c3b      	adds	r3, r7, #0
 8001170:	4667      	mov	r7, ip
 8001172:	403b      	ands	r3, r7
 8001174:	4333      	orrs	r3, r6
 8001176:	b29b      	uxth	r3, r3
 8001178:	2610      	movs	r6, #16
 800117a:	4333      	orrs	r3, r6
 800117c:	b292      	uxth	r2, r2
 800117e:	8302      	strh	r2, [r0, #24]
 8001180:	8403      	strh	r3, [r0, #32]
 8001182:	4a42      	ldr	r2, [pc, #264]	; (800128c <TIM_PWMIConfig+0x174>)
 8001184:	88cb      	ldrh	r3, [r1, #6]
 8001186:	6981      	ldr	r1, [r0, #24]
 8001188:	4657      	mov	r7, sl
 800118a:	400a      	ands	r2, r1
 800118c:	8302      	strh	r2, [r0, #24]
 800118e:	6982      	ldr	r2, [r0, #24]
 8001190:	0219      	lsls	r1, r3, #8
 8001192:	b292      	uxth	r2, r2
 8001194:	430a      	orrs	r2, r1
 8001196:	b292      	uxth	r2, r2
 8001198:	8302      	strh	r2, [r0, #24]
 800119a:	6a01      	ldr	r1, [r0, #32]
 800119c:	4a3c      	ldr	r2, [pc, #240]	; (8001290 <TIM_PWMIConfig+0x178>)
 800119e:	400a      	ands	r2, r1
 80011a0:	8402      	strh	r2, [r0, #32]
 80011a2:	6986      	ldr	r6, [r0, #24]
 80011a4:	0122      	lsls	r2, r4, #4
 80011a6:	4c3b      	ldr	r4, [pc, #236]	; (8001294 <TIM_PWMIConfig+0x17c>)
 80011a8:	6a01      	ldr	r1, [r0, #32]
 80011aa:	4034      	ands	r4, r6
 80011ac:	4314      	orrs	r4, r2
 80011ae:	4a3a      	ldr	r2, [pc, #232]	; (8001298 <TIM_PWMIConfig+0x180>)
 80011b0:	b2a4      	uxth	r4, r4
 80011b2:	400a      	ands	r2, r1
 80011b4:	2101      	movs	r1, #1
 80011b6:	430a      	orrs	r2, r1
 80011b8:	4325      	orrs	r5, r4
 80011ba:	4317      	orrs	r7, r2
 80011bc:	b2ad      	uxth	r5, r5
 80011be:	8305      	strh	r5, [r0, #24]
 80011c0:	8407      	strh	r7, [r0, #32]
 80011c2:	6981      	ldr	r1, [r0, #24]
 80011c4:	4a35      	ldr	r2, [pc, #212]	; (800129c <TIM_PWMIConfig+0x184>)
 80011c6:	400a      	ands	r2, r1
 80011c8:	8302      	strh	r2, [r0, #24]
 80011ca:	6982      	ldr	r2, [r0, #24]
 80011cc:	b292      	uxth	r2, r2
 80011ce:	4313      	orrs	r3, r2
 80011d0:	8303      	strh	r3, [r0, #24]
 80011d2:	bc1c      	pop	{r2, r3, r4}
 80011d4:	4690      	mov	r8, r2
 80011d6:	4699      	mov	r9, r3
 80011d8:	46a2      	mov	sl, r4
 80011da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011dc:	890e      	ldrh	r6, [r1, #8]
 80011de:	6a07      	ldr	r7, [r0, #32]
 80011e0:	46b2      	mov	sl, r6
 80011e2:	4e2b      	ldr	r6, [pc, #172]	; (8001290 <TIM_PWMIConfig+0x178>)
 80011e4:	46bc      	mov	ip, r7
 80011e6:	1c37      	adds	r7, r6, #0
 80011e8:	4666      	mov	r6, ip
 80011ea:	4037      	ands	r7, r6
 80011ec:	8407      	strh	r7, [r0, #32]
 80011ee:	6986      	ldr	r6, [r0, #24]
 80011f0:	6a07      	ldr	r7, [r0, #32]
 80011f2:	46b0      	mov	r8, r6
 80011f4:	4e27      	ldr	r6, [pc, #156]	; (8001294 <TIM_PWMIConfig+0x17c>)
 80011f6:	46bc      	mov	ip, r7
 80011f8:	4647      	mov	r7, r8
 80011fa:	4037      	ands	r7, r6
 80011fc:	46b8      	mov	r8, r7
 80011fe:	4657      	mov	r7, sl
 8001200:	4646      	mov	r6, r8
 8001202:	013f      	lsls	r7, r7, #4
 8001204:	4337      	orrs	r7, r6
 8001206:	b2bf      	uxth	r7, r7
 8001208:	433a      	orrs	r2, r7
 800120a:	2601      	movs	r6, #1
 800120c:	4f22      	ldr	r7, [pc, #136]	; (8001298 <TIM_PWMIConfig+0x180>)
 800120e:	4690      	mov	r8, r2
 8001210:	4662      	mov	r2, ip
 8001212:	46b4      	mov	ip, r6
 8001214:	4017      	ands	r7, r2
 8001216:	4662      	mov	r2, ip
 8001218:	4313      	orrs	r3, r2
 800121a:	433b      	orrs	r3, r7
 800121c:	b29b      	uxth	r3, r3
 800121e:	4646      	mov	r6, r8
 8001220:	8306      	strh	r6, [r0, #24]
 8001222:	8403      	strh	r3, [r0, #32]
 8001224:	4a1d      	ldr	r2, [pc, #116]	; (800129c <TIM_PWMIConfig+0x184>)
 8001226:	88cb      	ldrh	r3, [r1, #6]
 8001228:	6981      	ldr	r1, [r0, #24]
 800122a:	4656      	mov	r6, sl
 800122c:	400a      	ands	r2, r1
 800122e:	8302      	strh	r2, [r0, #24]
 8001230:	6982      	ldr	r2, [r0, #24]
 8001232:	022d      	lsls	r5, r5, #8
 8001234:	b292      	uxth	r2, r2
 8001236:	431a      	orrs	r2, r3
 8001238:	8302      	strh	r2, [r0, #24]
 800123a:	6a01      	ldr	r1, [r0, #32]
 800123c:	4a10      	ldr	r2, [pc, #64]	; (8001280 <TIM_PWMIConfig+0x168>)
 800123e:	021b      	lsls	r3, r3, #8
 8001240:	400a      	ands	r2, r1
 8001242:	8402      	strh	r2, [r0, #32]
 8001244:	6987      	ldr	r7, [r0, #24]
 8001246:	4a0f      	ldr	r2, [pc, #60]	; (8001284 <TIM_PWMIConfig+0x16c>)
 8001248:	6a01      	ldr	r1, [r0, #32]
 800124a:	4017      	ands	r7, r2
 800124c:	0332      	lsls	r2, r6, #12
 800124e:	1c3e      	adds	r6, r7, #0
 8001250:	4316      	orrs	r6, r2
 8001252:	4a0d      	ldr	r2, [pc, #52]	; (8001288 <TIM_PWMIConfig+0x170>)
 8001254:	b2b6      	uxth	r6, r6
 8001256:	4011      	ands	r1, r2
 8001258:	2210      	movs	r2, #16
 800125a:	4311      	orrs	r1, r2
 800125c:	4335      	orrs	r5, r6
 800125e:	0162      	lsls	r2, r4, #5
 8001260:	1c0c      	adds	r4, r1, #0
 8001262:	4314      	orrs	r4, r2
 8001264:	b2ad      	uxth	r5, r5
 8001266:	8305      	strh	r5, [r0, #24]
 8001268:	8404      	strh	r4, [r0, #32]
 800126a:	6981      	ldr	r1, [r0, #24]
 800126c:	4a07      	ldr	r2, [pc, #28]	; (800128c <TIM_PWMIConfig+0x174>)
 800126e:	400a      	ands	r2, r1
 8001270:	8302      	strh	r2, [r0, #24]
 8001272:	6982      	ldr	r2, [r0, #24]
 8001274:	b292      	uxth	r2, r2
 8001276:	4313      	orrs	r3, r2
 8001278:	b29b      	uxth	r3, r3
 800127a:	8303      	strh	r3, [r0, #24]
 800127c:	e7a9      	b.n	80011d2 <TIM_PWMIConfig+0xba>
 800127e:	46c0      	nop			; (mov r8, r8)
 8001280:	0000ffef 	.word	0x0000ffef
 8001284:	00000cff 	.word	0x00000cff
 8001288:	0000ff5f 	.word	0x0000ff5f
 800128c:	0000f3ff 	.word	0x0000f3ff
 8001290:	0000fffe 	.word	0x0000fffe
 8001294:	0000ff0c 	.word	0x0000ff0c
 8001298:	0000fff5 	.word	0x0000fff5
 800129c:	0000fff3 	.word	0x0000fff3

080012a0 <TIM_GetCapture1>:
 80012a0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80012a2:	4770      	bx	lr

080012a4 <TIM_GetCapture2>:
 80012a4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80012a6:	4770      	bx	lr

080012a8 <TIM_GetCapture3>:
 80012a8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80012aa:	4770      	bx	lr

080012ac <TIM_GetCapture4>:
 80012ac:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80012ae:	4770      	bx	lr

080012b0 <TIM_SetIC1Prescaler>:
 80012b0:	6982      	ldr	r2, [r0, #24]
 80012b2:	4b04      	ldr	r3, [pc, #16]	; (80012c4 <TIM_SetIC1Prescaler+0x14>)
 80012b4:	4013      	ands	r3, r2
 80012b6:	8303      	strh	r3, [r0, #24]
 80012b8:	6983      	ldr	r3, [r0, #24]
 80012ba:	b29b      	uxth	r3, r3
 80012bc:	4319      	orrs	r1, r3
 80012be:	8301      	strh	r1, [r0, #24]
 80012c0:	4770      	bx	lr
 80012c2:	46c0      	nop			; (mov r8, r8)
 80012c4:	0000fff3 	.word	0x0000fff3

080012c8 <TIM_SetIC2Prescaler>:
 80012c8:	6982      	ldr	r2, [r0, #24]
 80012ca:	4b05      	ldr	r3, [pc, #20]	; (80012e0 <TIM_SetIC2Prescaler+0x18>)
 80012cc:	0209      	lsls	r1, r1, #8
 80012ce:	4013      	ands	r3, r2
 80012d0:	8303      	strh	r3, [r0, #24]
 80012d2:	6983      	ldr	r3, [r0, #24]
 80012d4:	b29b      	uxth	r3, r3
 80012d6:	4319      	orrs	r1, r3
 80012d8:	b289      	uxth	r1, r1
 80012da:	8301      	strh	r1, [r0, #24]
 80012dc:	4770      	bx	lr
 80012de:	46c0      	nop			; (mov r8, r8)
 80012e0:	0000f3ff 	.word	0x0000f3ff

080012e4 <TIM_SetIC3Prescaler>:
 80012e4:	69c2      	ldr	r2, [r0, #28]
 80012e6:	4b04      	ldr	r3, [pc, #16]	; (80012f8 <TIM_SetIC3Prescaler+0x14>)
 80012e8:	4013      	ands	r3, r2
 80012ea:	8383      	strh	r3, [r0, #28]
 80012ec:	69c3      	ldr	r3, [r0, #28]
 80012ee:	b29b      	uxth	r3, r3
 80012f0:	4319      	orrs	r1, r3
 80012f2:	8381      	strh	r1, [r0, #28]
 80012f4:	4770      	bx	lr
 80012f6:	46c0      	nop			; (mov r8, r8)
 80012f8:	0000fff3 	.word	0x0000fff3

080012fc <TIM_SetIC4Prescaler>:
 80012fc:	69c2      	ldr	r2, [r0, #28]
 80012fe:	4b05      	ldr	r3, [pc, #20]	; (8001314 <TIM_SetIC4Prescaler+0x18>)
 8001300:	0209      	lsls	r1, r1, #8
 8001302:	4013      	ands	r3, r2
 8001304:	8383      	strh	r3, [r0, #28]
 8001306:	69c3      	ldr	r3, [r0, #28]
 8001308:	b29b      	uxth	r3, r3
 800130a:	4319      	orrs	r1, r3
 800130c:	b289      	uxth	r1, r1
 800130e:	8381      	strh	r1, [r0, #28]
 8001310:	4770      	bx	lr
 8001312:	46c0      	nop			; (mov r8, r8)
 8001314:	0000f3ff 	.word	0x0000f3ff

08001318 <TIM_ITConfig>:
 8001318:	68c3      	ldr	r3, [r0, #12]
 800131a:	b29b      	uxth	r3, r3
 800131c:	2a00      	cmp	r2, #0
 800131e:	d102      	bne.n	8001326 <TIM_ITConfig+0xe>
 8001320:	438b      	bics	r3, r1
 8001322:	8183      	strh	r3, [r0, #12]
 8001324:	4770      	bx	lr
 8001326:	4319      	orrs	r1, r3
 8001328:	8181      	strh	r1, [r0, #12]
 800132a:	e7fb      	b.n	8001324 <TIM_ITConfig+0xc>

0800132c <TIM_GenerateEvent>:
 800132c:	8281      	strh	r1, [r0, #20]
 800132e:	4770      	bx	lr

08001330 <TIM_GetFlagStatus>:
 8001330:	6900      	ldr	r0, [r0, #16]
 8001332:	4008      	ands	r0, r1
 8001334:	1e43      	subs	r3, r0, #1
 8001336:	4198      	sbcs	r0, r3
 8001338:	b2c0      	uxtb	r0, r0
 800133a:	4770      	bx	lr

0800133c <TIM_ClearFlag>:
 800133c:	43c9      	mvns	r1, r1
 800133e:	b289      	uxth	r1, r1
 8001340:	8201      	strh	r1, [r0, #16]
 8001342:	4770      	bx	lr

08001344 <TIM_GetITStatus>:
 8001344:	6903      	ldr	r3, [r0, #16]
 8001346:	68c0      	ldr	r0, [r0, #12]
 8001348:	b282      	uxth	r2, r0
 800134a:	2000      	movs	r0, #0
 800134c:	420b      	tst	r3, r1
 800134e:	d003      	beq.n	8001358 <TIM_GetITStatus+0x14>
 8001350:	4011      	ands	r1, r2
 8001352:	1e4a      	subs	r2, r1, #1
 8001354:	4191      	sbcs	r1, r2
 8001356:	b2c8      	uxtb	r0, r1
 8001358:	4770      	bx	lr
 800135a:	46c0      	nop			; (mov r8, r8)

0800135c <TIM_ClearITPendingBit>:
 800135c:	43c9      	mvns	r1, r1
 800135e:	b289      	uxth	r1, r1
 8001360:	8201      	strh	r1, [r0, #16]
 8001362:	4770      	bx	lr

08001364 <TIM_DMAConfig>:
 8001364:	4311      	orrs	r1, r2
 8001366:	2348      	movs	r3, #72	; 0x48
 8001368:	52c1      	strh	r1, [r0, r3]
 800136a:	4770      	bx	lr

0800136c <TIM_DMACmd>:
 800136c:	68c3      	ldr	r3, [r0, #12]
 800136e:	b29b      	uxth	r3, r3
 8001370:	2a00      	cmp	r2, #0
 8001372:	d102      	bne.n	800137a <TIM_DMACmd+0xe>
 8001374:	438b      	bics	r3, r1
 8001376:	8183      	strh	r3, [r0, #12]
 8001378:	4770      	bx	lr
 800137a:	4319      	orrs	r1, r3
 800137c:	8181      	strh	r1, [r0, #12]
 800137e:	e7fb      	b.n	8001378 <TIM_DMACmd+0xc>

08001380 <TIM_SelectCCDMA>:
 8001380:	2900      	cmp	r1, #0
 8001382:	d104      	bne.n	800138e <TIM_SelectCCDMA+0xe>
 8001384:	6842      	ldr	r2, [r0, #4]
 8001386:	4b05      	ldr	r3, [pc, #20]	; (800139c <TIM_SelectCCDMA+0x1c>)
 8001388:	4013      	ands	r3, r2
 800138a:	8083      	strh	r3, [r0, #4]
 800138c:	4770      	bx	lr
 800138e:	6843      	ldr	r3, [r0, #4]
 8001390:	2208      	movs	r2, #8
 8001392:	b29b      	uxth	r3, r3
 8001394:	4313      	orrs	r3, r2
 8001396:	8083      	strh	r3, [r0, #4]
 8001398:	e7f8      	b.n	800138c <TIM_SelectCCDMA+0xc>
 800139a:	46c0      	nop			; (mov r8, r8)
 800139c:	0000fff7 	.word	0x0000fff7

080013a0 <TIM_InternalClockConfig>:
 80013a0:	6882      	ldr	r2, [r0, #8]
 80013a2:	4b02      	ldr	r3, [pc, #8]	; (80013ac <TIM_InternalClockConfig+0xc>)
 80013a4:	4013      	ands	r3, r2
 80013a6:	8103      	strh	r3, [r0, #8]
 80013a8:	4770      	bx	lr
 80013aa:	46c0      	nop			; (mov r8, r8)
 80013ac:	0000fff8 	.word	0x0000fff8

080013b0 <TIM_ITRxExternalClockConfig>:
 80013b0:	6882      	ldr	r2, [r0, #8]
 80013b2:	4b05      	ldr	r3, [pc, #20]	; (80013c8 <TIM_ITRxExternalClockConfig+0x18>)
 80013b4:	4013      	ands	r3, r2
 80013b6:	4319      	orrs	r1, r3
 80013b8:	8101      	strh	r1, [r0, #8]
 80013ba:	6883      	ldr	r3, [r0, #8]
 80013bc:	2207      	movs	r2, #7
 80013be:	b29b      	uxth	r3, r3
 80013c0:	4313      	orrs	r3, r2
 80013c2:	8103      	strh	r3, [r0, #8]
 80013c4:	4770      	bx	lr
 80013c6:	46c0      	nop			; (mov r8, r8)
 80013c8:	0000ff8f 	.word	0x0000ff8f

080013cc <TIM_TIxExternalClockConfig>:
 80013cc:	b570      	push	{r4, r5, r6, lr}
 80013ce:	6a05      	ldr	r5, [r0, #32]
 80013d0:	2960      	cmp	r1, #96	; 0x60
 80013d2:	d01e      	beq.n	8001412 <TIM_TIxExternalClockConfig+0x46>
 80013d4:	4c1b      	ldr	r4, [pc, #108]	; (8001444 <TIM_TIxExternalClockConfig+0x78>)
 80013d6:	011b      	lsls	r3, r3, #4
 80013d8:	402c      	ands	r4, r5
 80013da:	8404      	strh	r4, [r0, #32]
 80013dc:	6985      	ldr	r5, [r0, #24]
 80013de:	4c1a      	ldr	r4, [pc, #104]	; (8001448 <TIM_TIxExternalClockConfig+0x7c>)
 80013e0:	6a06      	ldr	r6, [r0, #32]
 80013e2:	4025      	ands	r5, r4
 80013e4:	2401      	movs	r4, #1
 80013e6:	4325      	orrs	r5, r4
 80013e8:	b2ad      	uxth	r5, r5
 80013ea:	432b      	orrs	r3, r5
 80013ec:	4d17      	ldr	r5, [pc, #92]	; (800144c <TIM_TIxExternalClockConfig+0x80>)
 80013ee:	b29b      	uxth	r3, r3
 80013f0:	4035      	ands	r5, r6
 80013f2:	432c      	orrs	r4, r5
 80013f4:	b2a4      	uxth	r4, r4
 80013f6:	4322      	orrs	r2, r4
 80013f8:	8303      	strh	r3, [r0, #24]
 80013fa:	8402      	strh	r2, [r0, #32]
 80013fc:	6882      	ldr	r2, [r0, #8]
 80013fe:	4b14      	ldr	r3, [pc, #80]	; (8001450 <TIM_TIxExternalClockConfig+0x84>)
 8001400:	4013      	ands	r3, r2
 8001402:	4319      	orrs	r1, r3
 8001404:	8101      	strh	r1, [r0, #8]
 8001406:	6883      	ldr	r3, [r0, #8]
 8001408:	2207      	movs	r2, #7
 800140a:	b29b      	uxth	r3, r3
 800140c:	4313      	orrs	r3, r2
 800140e:	8103      	strh	r3, [r0, #8]
 8001410:	bd70      	pop	{r4, r5, r6, pc}
 8001412:	4c10      	ldr	r4, [pc, #64]	; (8001454 <TIM_TIxExternalClockConfig+0x88>)
 8001414:	402c      	ands	r4, r5
 8001416:	8404      	strh	r4, [r0, #32]
 8001418:	6986      	ldr	r6, [r0, #24]
 800141a:	4c0f      	ldr	r4, [pc, #60]	; (8001458 <TIM_TIxExternalClockConfig+0x8c>)
 800141c:	6a05      	ldr	r5, [r0, #32]
 800141e:	4026      	ands	r6, r4
 8001420:	2480      	movs	r4, #128	; 0x80
 8001422:	0064      	lsls	r4, r4, #1
 8001424:	4326      	orrs	r6, r4
 8001426:	031c      	lsls	r4, r3, #12
 8001428:	1c33      	adds	r3, r6, #0
 800142a:	4323      	orrs	r3, r4
 800142c:	4c0b      	ldr	r4, [pc, #44]	; (800145c <TIM_TIxExternalClockConfig+0x90>)
 800142e:	b29b      	uxth	r3, r3
 8001430:	4025      	ands	r5, r4
 8001432:	2410      	movs	r4, #16
 8001434:	4325      	orrs	r5, r4
 8001436:	0114      	lsls	r4, r2, #4
 8001438:	1c2a      	adds	r2, r5, #0
 800143a:	4322      	orrs	r2, r4
 800143c:	b292      	uxth	r2, r2
 800143e:	8303      	strh	r3, [r0, #24]
 8001440:	8402      	strh	r2, [r0, #32]
 8001442:	e7db      	b.n	80013fc <TIM_TIxExternalClockConfig+0x30>
 8001444:	0000fffe 	.word	0x0000fffe
 8001448:	0000ff0c 	.word	0x0000ff0c
 800144c:	0000fff5 	.word	0x0000fff5
 8001450:	0000ff8f 	.word	0x0000ff8f
 8001454:	0000ffef 	.word	0x0000ffef
 8001458:	00000cff 	.word	0x00000cff
 800145c:	0000ff5f 	.word	0x0000ff5f

08001460 <TIM_ETRClockMode1Config>:
 8001460:	b510      	push	{r4, lr}
 8001462:	021b      	lsls	r3, r3, #8
 8001464:	6884      	ldr	r4, [r0, #8]
 8001466:	431a      	orrs	r2, r3
 8001468:	23ff      	movs	r3, #255	; 0xff
 800146a:	401c      	ands	r4, r3
 800146c:	4322      	orrs	r2, r4
 800146e:	b292      	uxth	r2, r2
 8001470:	4311      	orrs	r1, r2
 8001472:	8101      	strh	r1, [r0, #8]
 8001474:	6882      	ldr	r2, [r0, #8]
 8001476:	4b03      	ldr	r3, [pc, #12]	; (8001484 <TIM_ETRClockMode1Config+0x24>)
 8001478:	4013      	ands	r3, r2
 800147a:	2277      	movs	r2, #119	; 0x77
 800147c:	4313      	orrs	r3, r2
 800147e:	8103      	strh	r3, [r0, #8]
 8001480:	bd10      	pop	{r4, pc}
 8001482:	46c0      	nop			; (mov r8, r8)
 8001484:	0000ff88 	.word	0x0000ff88

08001488 <TIM_ETRClockMode2Config>:
 8001488:	b510      	push	{r4, lr}
 800148a:	021b      	lsls	r3, r3, #8
 800148c:	6884      	ldr	r4, [r0, #8]
 800148e:	431a      	orrs	r2, r3
 8001490:	23ff      	movs	r3, #255	; 0xff
 8001492:	401c      	ands	r4, r3
 8001494:	4322      	orrs	r2, r4
 8001496:	b292      	uxth	r2, r2
 8001498:	4311      	orrs	r1, r2
 800149a:	8101      	strh	r1, [r0, #8]
 800149c:	6882      	ldr	r2, [r0, #8]
 800149e:	2380      	movs	r3, #128	; 0x80
 80014a0:	b292      	uxth	r2, r2
 80014a2:	01db      	lsls	r3, r3, #7
 80014a4:	4313      	orrs	r3, r2
 80014a6:	8103      	strh	r3, [r0, #8]
 80014a8:	bd10      	pop	{r4, pc}
 80014aa:	46c0      	nop			; (mov r8, r8)

080014ac <TIM_SelectInputTrigger>:
 80014ac:	6882      	ldr	r2, [r0, #8]
 80014ae:	4b02      	ldr	r3, [pc, #8]	; (80014b8 <TIM_SelectInputTrigger+0xc>)
 80014b0:	4013      	ands	r3, r2
 80014b2:	4319      	orrs	r1, r3
 80014b4:	8101      	strh	r1, [r0, #8]
 80014b6:	4770      	bx	lr
 80014b8:	0000ff8f 	.word	0x0000ff8f

080014bc <TIM_SelectOutputTrigger>:
 80014bc:	6842      	ldr	r2, [r0, #4]
 80014be:	4b04      	ldr	r3, [pc, #16]	; (80014d0 <TIM_SelectOutputTrigger+0x14>)
 80014c0:	4013      	ands	r3, r2
 80014c2:	8083      	strh	r3, [r0, #4]
 80014c4:	6843      	ldr	r3, [r0, #4]
 80014c6:	b29b      	uxth	r3, r3
 80014c8:	4319      	orrs	r1, r3
 80014ca:	8081      	strh	r1, [r0, #4]
 80014cc:	4770      	bx	lr
 80014ce:	46c0      	nop			; (mov r8, r8)
 80014d0:	0000ff8f 	.word	0x0000ff8f

080014d4 <TIM_SelectSlaveMode>:
 80014d4:	6882      	ldr	r2, [r0, #8]
 80014d6:	4b04      	ldr	r3, [pc, #16]	; (80014e8 <TIM_SelectSlaveMode+0x14>)
 80014d8:	4013      	ands	r3, r2
 80014da:	8103      	strh	r3, [r0, #8]
 80014dc:	6883      	ldr	r3, [r0, #8]
 80014de:	b29b      	uxth	r3, r3
 80014e0:	4319      	orrs	r1, r3
 80014e2:	8101      	strh	r1, [r0, #8]
 80014e4:	4770      	bx	lr
 80014e6:	46c0      	nop			; (mov r8, r8)
 80014e8:	0000fff8 	.word	0x0000fff8

080014ec <TIM_SelectMasterSlaveMode>:
 80014ec:	6882      	ldr	r2, [r0, #8]
 80014ee:	4b04      	ldr	r3, [pc, #16]	; (8001500 <TIM_SelectMasterSlaveMode+0x14>)
 80014f0:	4013      	ands	r3, r2
 80014f2:	8103      	strh	r3, [r0, #8]
 80014f4:	6883      	ldr	r3, [r0, #8]
 80014f6:	b29b      	uxth	r3, r3
 80014f8:	4319      	orrs	r1, r3
 80014fa:	8101      	strh	r1, [r0, #8]
 80014fc:	4770      	bx	lr
 80014fe:	46c0      	nop			; (mov r8, r8)
 8001500:	0000ff7f 	.word	0x0000ff7f

08001504 <TIM_ETRConfig>:
 8001504:	b530      	push	{r4, r5, lr}
 8001506:	6885      	ldr	r5, [r0, #8]
 8001508:	24ff      	movs	r4, #255	; 0xff
 800150a:	402c      	ands	r4, r5
 800150c:	4321      	orrs	r1, r4
 800150e:	430a      	orrs	r2, r1
 8001510:	021b      	lsls	r3, r3, #8
 8001512:	431a      	orrs	r2, r3
 8001514:	b292      	uxth	r2, r2
 8001516:	8102      	strh	r2, [r0, #8]
 8001518:	bd30      	pop	{r4, r5, pc}
 800151a:	46c0      	nop			; (mov r8, r8)

0800151c <TIM_EncoderInterfaceConfig>:
 800151c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800151e:	6887      	ldr	r7, [r0, #8]
 8001520:	4c09      	ldr	r4, [pc, #36]	; (8001548 <TIM_EncoderInterfaceConfig+0x2c>)
 8001522:	6985      	ldr	r5, [r0, #24]
 8001524:	403c      	ands	r4, r7
 8001526:	4321      	orrs	r1, r4
 8001528:	4c08      	ldr	r4, [pc, #32]	; (800154c <TIM_EncoderInterfaceConfig+0x30>)
 800152a:	6a06      	ldr	r6, [r0, #32]
 800152c:	402c      	ands	r4, r5
 800152e:	2502      	movs	r5, #2
 8001530:	35ff      	adds	r5, #255	; 0xff
 8001532:	432c      	orrs	r4, r5
 8001534:	4d06      	ldr	r5, [pc, #24]	; (8001550 <TIM_EncoderInterfaceConfig+0x34>)
 8001536:	011b      	lsls	r3, r3, #4
 8001538:	4035      	ands	r5, r6
 800153a:	432a      	orrs	r2, r5
 800153c:	431a      	orrs	r2, r3
 800153e:	b292      	uxth	r2, r2
 8001540:	8101      	strh	r1, [r0, #8]
 8001542:	8304      	strh	r4, [r0, #24]
 8001544:	8402      	strh	r2, [r0, #32]
 8001546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001548:	0000fff8 	.word	0x0000fff8
 800154c:	0000fcfc 	.word	0x0000fcfc
 8001550:	0000ff55 	.word	0x0000ff55

08001554 <TIM_SelectHallSensor>:
 8001554:	2900      	cmp	r1, #0
 8001556:	d104      	bne.n	8001562 <TIM_SelectHallSensor+0xe>
 8001558:	6842      	ldr	r2, [r0, #4]
 800155a:	4b05      	ldr	r3, [pc, #20]	; (8001570 <TIM_SelectHallSensor+0x1c>)
 800155c:	4013      	ands	r3, r2
 800155e:	8083      	strh	r3, [r0, #4]
 8001560:	4770      	bx	lr
 8001562:	6843      	ldr	r3, [r0, #4]
 8001564:	2280      	movs	r2, #128	; 0x80
 8001566:	b29b      	uxth	r3, r3
 8001568:	4313      	orrs	r3, r2
 800156a:	8083      	strh	r3, [r0, #4]
 800156c:	e7f8      	b.n	8001560 <TIM_SelectHallSensor+0xc>
 800156e:	46c0      	nop			; (mov r8, r8)
 8001570:	0000ff7f 	.word	0x0000ff7f

08001574 <TIM_RemapConfig>:
 8001574:	2350      	movs	r3, #80	; 0x50
 8001576:	52c1      	strh	r1, [r0, r3]
 8001578:	4770      	bx	lr
 800157a:	46c0      	nop			; (mov r8, r8)

0800157c <USART_DeInit>:
 800157c:	b508      	push	{r3, lr}
 800157e:	4b0e      	ldr	r3, [pc, #56]	; (80015b8 <USART_DeInit+0x3c>)
 8001580:	4298      	cmp	r0, r3
 8001582:	d00e      	beq.n	80015a2 <USART_DeInit+0x26>
 8001584:	4b0d      	ldr	r3, [pc, #52]	; (80015bc <USART_DeInit+0x40>)
 8001586:	4298      	cmp	r0, r3
 8001588:	d000      	beq.n	800158c <USART_DeInit+0x10>
 800158a:	bd08      	pop	{r3, pc}
 800158c:	2080      	movs	r0, #128	; 0x80
 800158e:	0280      	lsls	r0, r0, #10
 8001590:	2101      	movs	r1, #1
 8001592:	f7ff f8d7 	bl	8000744 <RCC_APB1PeriphResetCmd>
 8001596:	2080      	movs	r0, #128	; 0x80
 8001598:	0280      	lsls	r0, r0, #10
 800159a:	2100      	movs	r1, #0
 800159c:	f7ff f8d2 	bl	8000744 <RCC_APB1PeriphResetCmd>
 80015a0:	e7f3      	b.n	800158a <USART_DeInit+0xe>
 80015a2:	2080      	movs	r0, #128	; 0x80
 80015a4:	01c0      	lsls	r0, r0, #7
 80015a6:	2101      	movs	r1, #1
 80015a8:	f7ff f8c0 	bl	800072c <RCC_APB2PeriphResetCmd>
 80015ac:	2080      	movs	r0, #128	; 0x80
 80015ae:	01c0      	lsls	r0, r0, #7
 80015b0:	2100      	movs	r1, #0
 80015b2:	f7ff f8bb 	bl	800072c <RCC_APB2PeriphResetCmd>
 80015b6:	e7e8      	b.n	800158a <USART_DeInit+0xe>
 80015b8:	40013800 	.word	0x40013800
 80015bc:	40004400 	.word	0x40004400

080015c0 <USART_Init>:
 80015c0:	6803      	ldr	r3, [r0, #0]
 80015c2:	2201      	movs	r2, #1
 80015c4:	4393      	bics	r3, r2
 80015c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015c8:	6003      	str	r3, [r0, #0]
 80015ca:	6842      	ldr	r2, [r0, #4]
 80015cc:	4b1f      	ldr	r3, [pc, #124]	; (800164c <USART_Init+0x8c>)
 80015ce:	1c0d      	adds	r5, r1, #0
 80015d0:	6889      	ldr	r1, [r1, #8]
 80015d2:	4013      	ands	r3, r2
 80015d4:	430b      	orrs	r3, r1
 80015d6:	6043      	str	r3, [r0, #4]
 80015d8:	6802      	ldr	r2, [r0, #0]
 80015da:	4b1d      	ldr	r3, [pc, #116]	; (8001650 <USART_Init+0x90>)
 80015dc:	6869      	ldr	r1, [r5, #4]
 80015de:	401a      	ands	r2, r3
 80015e0:	68eb      	ldr	r3, [r5, #12]
 80015e2:	b089      	sub	sp, #36	; 0x24
 80015e4:	430b      	orrs	r3, r1
 80015e6:	6929      	ldr	r1, [r5, #16]
 80015e8:	1c04      	adds	r4, r0, #0
 80015ea:	430b      	orrs	r3, r1
 80015ec:	4313      	orrs	r3, r2
 80015ee:	6003      	str	r3, [r0, #0]
 80015f0:	6882      	ldr	r2, [r0, #8]
 80015f2:	4b18      	ldr	r3, [pc, #96]	; (8001654 <USART_Init+0x94>)
 80015f4:	4013      	ands	r3, r2
 80015f6:	696a      	ldr	r2, [r5, #20]
 80015f8:	4313      	orrs	r3, r2
 80015fa:	6083      	str	r3, [r0, #8]
 80015fc:	a801      	add	r0, sp, #4
 80015fe:	f7fe ffb5 	bl	800056c <RCC_GetClocksFreq>
 8001602:	4b15      	ldr	r3, [pc, #84]	; (8001658 <USART_Init+0x98>)
 8001604:	429c      	cmp	r4, r3
 8001606:	d01f      	beq.n	8001648 <USART_Init+0x88>
 8001608:	9e03      	ldr	r6, [sp, #12]
 800160a:	6823      	ldr	r3, [r4, #0]
 800160c:	0419      	lsls	r1, r3, #16
 800160e:	d500      	bpl.n	8001612 <USART_Init+0x52>
 8001610:	0076      	lsls	r6, r6, #1
 8001612:	682f      	ldr	r7, [r5, #0]
 8001614:	1c30      	adds	r0, r6, #0
 8001616:	1c39      	adds	r1, r7, #0
 8001618:	f000 fa3a 	bl	8001a90 <__aeabi_uidiv>
 800161c:	1c39      	adds	r1, r7, #0
 800161e:	1c05      	adds	r5, r0, #0
 8001620:	1c30      	adds	r0, r6, #0
 8001622:	f000 fa79 	bl	8001b18 <__aeabi_uidivmod>
 8001626:	087f      	lsrs	r7, r7, #1
 8001628:	2300      	movs	r3, #0
 800162a:	42b9      	cmp	r1, r7
 800162c:	415b      	adcs	r3, r3
 800162e:	18ed      	adds	r5, r5, r3
 8001630:	6823      	ldr	r3, [r4, #0]
 8001632:	041a      	lsls	r2, r3, #16
 8001634:	d504      	bpl.n	8001640 <USART_Init+0x80>
 8001636:	4a09      	ldr	r2, [pc, #36]	; (800165c <USART_Init+0x9c>)
 8001638:	072b      	lsls	r3, r5, #28
 800163a:	0f5b      	lsrs	r3, r3, #29
 800163c:	4015      	ands	r5, r2
 800163e:	431d      	orrs	r5, r3
 8001640:	b2ad      	uxth	r5, r5
 8001642:	81a5      	strh	r5, [r4, #12]
 8001644:	b009      	add	sp, #36	; 0x24
 8001646:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001648:	9e07      	ldr	r6, [sp, #28]
 800164a:	e7de      	b.n	800160a <USART_Init+0x4a>
 800164c:	ffffcfff 	.word	0xffffcfff
 8001650:	ffffe9f3 	.word	0xffffe9f3
 8001654:	fffffcff 	.word	0xfffffcff
 8001658:	40013800 	.word	0x40013800
 800165c:	0000fff0 	.word	0x0000fff0

08001660 <USART_StructInit>:
 8001660:	2396      	movs	r3, #150	; 0x96
 8001662:	019b      	lsls	r3, r3, #6
 8001664:	6003      	str	r3, [r0, #0]
 8001666:	220c      	movs	r2, #12
 8001668:	2300      	movs	r3, #0
 800166a:	6043      	str	r3, [r0, #4]
 800166c:	6083      	str	r3, [r0, #8]
 800166e:	60c3      	str	r3, [r0, #12]
 8001670:	6102      	str	r2, [r0, #16]
 8001672:	6143      	str	r3, [r0, #20]
 8001674:	4770      	bx	lr
 8001676:	46c0      	nop			; (mov r8, r8)

08001678 <USART_ClockInit>:
 8001678:	6842      	ldr	r2, [r0, #4]
 800167a:	4b06      	ldr	r3, [pc, #24]	; (8001694 <USART_ClockInit+0x1c>)
 800167c:	b510      	push	{r4, lr}
 800167e:	401a      	ands	r2, r3
 8001680:	680c      	ldr	r4, [r1, #0]
 8001682:	684b      	ldr	r3, [r1, #4]
 8001684:	4323      	orrs	r3, r4
 8001686:	688c      	ldr	r4, [r1, #8]
 8001688:	68c9      	ldr	r1, [r1, #12]
 800168a:	4323      	orrs	r3, r4
 800168c:	430b      	orrs	r3, r1
 800168e:	4313      	orrs	r3, r2
 8001690:	6043      	str	r3, [r0, #4]
 8001692:	bd10      	pop	{r4, pc}
 8001694:	fffff0ff 	.word	0xfffff0ff

08001698 <USART_ClockStructInit>:
 8001698:	2300      	movs	r3, #0
 800169a:	6003      	str	r3, [r0, #0]
 800169c:	6043      	str	r3, [r0, #4]
 800169e:	6083      	str	r3, [r0, #8]
 80016a0:	60c3      	str	r3, [r0, #12]
 80016a2:	4770      	bx	lr

080016a4 <USART_Cmd>:
 80016a4:	2900      	cmp	r1, #0
 80016a6:	d104      	bne.n	80016b2 <USART_Cmd+0xe>
 80016a8:	6803      	ldr	r3, [r0, #0]
 80016aa:	2201      	movs	r2, #1
 80016ac:	4393      	bics	r3, r2
 80016ae:	6003      	str	r3, [r0, #0]
 80016b0:	4770      	bx	lr
 80016b2:	6802      	ldr	r2, [r0, #0]
 80016b4:	2301      	movs	r3, #1
 80016b6:	4313      	orrs	r3, r2
 80016b8:	6003      	str	r3, [r0, #0]
 80016ba:	e7f9      	b.n	80016b0 <USART_Cmd+0xc>

080016bc <USART_DirectionModeCmd>:
 80016bc:	6803      	ldr	r3, [r0, #0]
 80016be:	2a00      	cmp	r2, #0
 80016c0:	d102      	bne.n	80016c8 <USART_DirectionModeCmd+0xc>
 80016c2:	438b      	bics	r3, r1
 80016c4:	6003      	str	r3, [r0, #0]
 80016c6:	4770      	bx	lr
 80016c8:	4319      	orrs	r1, r3
 80016ca:	6001      	str	r1, [r0, #0]
 80016cc:	e7fb      	b.n	80016c6 <USART_DirectionModeCmd+0xa>
 80016ce:	46c0      	nop			; (mov r8, r8)

080016d0 <USART_OverSampling8Cmd>:
 80016d0:	6802      	ldr	r2, [r0, #0]
 80016d2:	2900      	cmp	r1, #0
 80016d4:	d103      	bne.n	80016de <USART_OverSampling8Cmd+0xe>
 80016d6:	4b04      	ldr	r3, [pc, #16]	; (80016e8 <USART_OverSampling8Cmd+0x18>)
 80016d8:	4013      	ands	r3, r2
 80016da:	6003      	str	r3, [r0, #0]
 80016dc:	4770      	bx	lr
 80016de:	2380      	movs	r3, #128	; 0x80
 80016e0:	021b      	lsls	r3, r3, #8
 80016e2:	4313      	orrs	r3, r2
 80016e4:	6003      	str	r3, [r0, #0]
 80016e6:	e7f9      	b.n	80016dc <USART_OverSampling8Cmd+0xc>
 80016e8:	ffff7fff 	.word	0xffff7fff

080016ec <USART_OneBitMethodCmd>:
 80016ec:	6882      	ldr	r2, [r0, #8]
 80016ee:	2900      	cmp	r1, #0
 80016f0:	d103      	bne.n	80016fa <USART_OneBitMethodCmd+0xe>
 80016f2:	4b04      	ldr	r3, [pc, #16]	; (8001704 <USART_OneBitMethodCmd+0x18>)
 80016f4:	4013      	ands	r3, r2
 80016f6:	6083      	str	r3, [r0, #8]
 80016f8:	4770      	bx	lr
 80016fa:	2380      	movs	r3, #128	; 0x80
 80016fc:	011b      	lsls	r3, r3, #4
 80016fe:	4313      	orrs	r3, r2
 8001700:	6083      	str	r3, [r0, #8]
 8001702:	e7f9      	b.n	80016f8 <USART_OneBitMethodCmd+0xc>
 8001704:	fffff7ff 	.word	0xfffff7ff

08001708 <USART_MSBFirstCmd>:
 8001708:	6842      	ldr	r2, [r0, #4]
 800170a:	2900      	cmp	r1, #0
 800170c:	d103      	bne.n	8001716 <USART_MSBFirstCmd+0xe>
 800170e:	4b04      	ldr	r3, [pc, #16]	; (8001720 <USART_MSBFirstCmd+0x18>)
 8001710:	4013      	ands	r3, r2
 8001712:	6043      	str	r3, [r0, #4]
 8001714:	4770      	bx	lr
 8001716:	2380      	movs	r3, #128	; 0x80
 8001718:	031b      	lsls	r3, r3, #12
 800171a:	4313      	orrs	r3, r2
 800171c:	6043      	str	r3, [r0, #4]
 800171e:	e7f9      	b.n	8001714 <USART_MSBFirstCmd+0xc>
 8001720:	fff7ffff 	.word	0xfff7ffff

08001724 <USART_DataInvCmd>:
 8001724:	6842      	ldr	r2, [r0, #4]
 8001726:	2900      	cmp	r1, #0
 8001728:	d103      	bne.n	8001732 <USART_DataInvCmd+0xe>
 800172a:	4b04      	ldr	r3, [pc, #16]	; (800173c <USART_DataInvCmd+0x18>)
 800172c:	4013      	ands	r3, r2
 800172e:	6043      	str	r3, [r0, #4]
 8001730:	4770      	bx	lr
 8001732:	2380      	movs	r3, #128	; 0x80
 8001734:	02db      	lsls	r3, r3, #11
 8001736:	4313      	orrs	r3, r2
 8001738:	6043      	str	r3, [r0, #4]
 800173a:	e7f9      	b.n	8001730 <USART_DataInvCmd+0xc>
 800173c:	fffbffff 	.word	0xfffbffff

08001740 <USART_InvPinCmd>:
 8001740:	6843      	ldr	r3, [r0, #4]
 8001742:	2a00      	cmp	r2, #0
 8001744:	d102      	bne.n	800174c <USART_InvPinCmd+0xc>
 8001746:	438b      	bics	r3, r1
 8001748:	6043      	str	r3, [r0, #4]
 800174a:	4770      	bx	lr
 800174c:	4319      	orrs	r1, r3
 800174e:	6041      	str	r1, [r0, #4]
 8001750:	e7fb      	b.n	800174a <USART_InvPinCmd+0xa>
 8001752:	46c0      	nop			; (mov r8, r8)

08001754 <USART_SWAPPinCmd>:
 8001754:	6842      	ldr	r2, [r0, #4]
 8001756:	2900      	cmp	r1, #0
 8001758:	d103      	bne.n	8001762 <USART_SWAPPinCmd+0xe>
 800175a:	4b04      	ldr	r3, [pc, #16]	; (800176c <USART_SWAPPinCmd+0x18>)
 800175c:	4013      	ands	r3, r2
 800175e:	6043      	str	r3, [r0, #4]
 8001760:	4770      	bx	lr
 8001762:	2380      	movs	r3, #128	; 0x80
 8001764:	021b      	lsls	r3, r3, #8
 8001766:	4313      	orrs	r3, r2
 8001768:	6043      	str	r3, [r0, #4]
 800176a:	e7f9      	b.n	8001760 <USART_SWAPPinCmd+0xc>
 800176c:	ffff7fff 	.word	0xffff7fff

08001770 <USART_ReceiverTimeOutCmd>:
 8001770:	6842      	ldr	r2, [r0, #4]
 8001772:	2900      	cmp	r1, #0
 8001774:	d103      	bne.n	800177e <USART_ReceiverTimeOutCmd+0xe>
 8001776:	4b04      	ldr	r3, [pc, #16]	; (8001788 <USART_ReceiverTimeOutCmd+0x18>)
 8001778:	4013      	ands	r3, r2
 800177a:	6043      	str	r3, [r0, #4]
 800177c:	4770      	bx	lr
 800177e:	2380      	movs	r3, #128	; 0x80
 8001780:	041b      	lsls	r3, r3, #16
 8001782:	4313      	orrs	r3, r2
 8001784:	6043      	str	r3, [r0, #4]
 8001786:	e7f9      	b.n	800177c <USART_ReceiverTimeOutCmd+0xc>
 8001788:	ff7fffff 	.word	0xff7fffff

0800178c <USART_SetReceiverTimeOut>:
 800178c:	6943      	ldr	r3, [r0, #20]
 800178e:	0e1b      	lsrs	r3, r3, #24
 8001790:	061b      	lsls	r3, r3, #24
 8001792:	6143      	str	r3, [r0, #20]
 8001794:	6943      	ldr	r3, [r0, #20]
 8001796:	4319      	orrs	r1, r3
 8001798:	6141      	str	r1, [r0, #20]
 800179a:	4770      	bx	lr

0800179c <USART_SetPrescaler>:
 800179c:	6902      	ldr	r2, [r0, #16]
 800179e:	23ff      	movs	r3, #255	; 0xff
 80017a0:	021b      	lsls	r3, r3, #8
 80017a2:	4013      	ands	r3, r2
 80017a4:	8203      	strh	r3, [r0, #16]
 80017a6:	6903      	ldr	r3, [r0, #16]
 80017a8:	b29b      	uxth	r3, r3
 80017aa:	4319      	orrs	r1, r3
 80017ac:	8201      	strh	r1, [r0, #16]
 80017ae:	4770      	bx	lr

080017b0 <USART_STOPModeCmd>:
 80017b0:	2900      	cmp	r1, #0
 80017b2:	d104      	bne.n	80017be <USART_STOPModeCmd+0xe>
 80017b4:	6803      	ldr	r3, [r0, #0]
 80017b6:	2202      	movs	r2, #2
 80017b8:	4393      	bics	r3, r2
 80017ba:	6003      	str	r3, [r0, #0]
 80017bc:	4770      	bx	lr
 80017be:	6802      	ldr	r2, [r0, #0]
 80017c0:	2302      	movs	r3, #2
 80017c2:	4313      	orrs	r3, r2
 80017c4:	6003      	str	r3, [r0, #0]
 80017c6:	e7f9      	b.n	80017bc <USART_STOPModeCmd+0xc>

080017c8 <USART_StopModeWakeUpSourceConfig>:
 80017c8:	6882      	ldr	r2, [r0, #8]
 80017ca:	4b03      	ldr	r3, [pc, #12]	; (80017d8 <USART_StopModeWakeUpSourceConfig+0x10>)
 80017cc:	4013      	ands	r3, r2
 80017ce:	6083      	str	r3, [r0, #8]
 80017d0:	6883      	ldr	r3, [r0, #8]
 80017d2:	4319      	orrs	r1, r3
 80017d4:	6081      	str	r1, [r0, #8]
 80017d6:	4770      	bx	lr
 80017d8:	ffcfffff 	.word	0xffcfffff

080017dc <USART_AutoBaudRateCmd>:
 80017dc:	6842      	ldr	r2, [r0, #4]
 80017de:	2900      	cmp	r1, #0
 80017e0:	d103      	bne.n	80017ea <USART_AutoBaudRateCmd+0xe>
 80017e2:	4b04      	ldr	r3, [pc, #16]	; (80017f4 <USART_AutoBaudRateCmd+0x18>)
 80017e4:	4013      	ands	r3, r2
 80017e6:	6043      	str	r3, [r0, #4]
 80017e8:	4770      	bx	lr
 80017ea:	2380      	movs	r3, #128	; 0x80
 80017ec:	035b      	lsls	r3, r3, #13
 80017ee:	4313      	orrs	r3, r2
 80017f0:	6043      	str	r3, [r0, #4]
 80017f2:	e7f9      	b.n	80017e8 <USART_AutoBaudRateCmd+0xc>
 80017f4:	ffefffff 	.word	0xffefffff

080017f8 <USART_AutoBaudRateConfig>:
 80017f8:	6842      	ldr	r2, [r0, #4]
 80017fa:	4b03      	ldr	r3, [pc, #12]	; (8001808 <USART_AutoBaudRateConfig+0x10>)
 80017fc:	4013      	ands	r3, r2
 80017fe:	6043      	str	r3, [r0, #4]
 8001800:	6843      	ldr	r3, [r0, #4]
 8001802:	4319      	orrs	r1, r3
 8001804:	6041      	str	r1, [r0, #4]
 8001806:	4770      	bx	lr
 8001808:	ff9fffff 	.word	0xff9fffff

0800180c <USART_SendData>:
 800180c:	05c9      	lsls	r1, r1, #23
 800180e:	0dc9      	lsrs	r1, r1, #23
 8001810:	8501      	strh	r1, [r0, #40]	; 0x28
 8001812:	4770      	bx	lr

08001814 <USART_ReceiveData>:
 8001814:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8001816:	05c0      	lsls	r0, r0, #23
 8001818:	0dc0      	lsrs	r0, r0, #23
 800181a:	4770      	bx	lr

0800181c <USART_SetAddress>:
 800181c:	6843      	ldr	r3, [r0, #4]
 800181e:	0609      	lsls	r1, r1, #24
 8001820:	021b      	lsls	r3, r3, #8
 8001822:	0a1b      	lsrs	r3, r3, #8
 8001824:	6043      	str	r3, [r0, #4]
 8001826:	6843      	ldr	r3, [r0, #4]
 8001828:	4319      	orrs	r1, r3
 800182a:	6041      	str	r1, [r0, #4]
 800182c:	4770      	bx	lr
 800182e:	46c0      	nop			; (mov r8, r8)

08001830 <USART_MuteModeCmd>:
 8001830:	6802      	ldr	r2, [r0, #0]
 8001832:	2900      	cmp	r1, #0
 8001834:	d103      	bne.n	800183e <USART_MuteModeCmd+0xe>
 8001836:	4b04      	ldr	r3, [pc, #16]	; (8001848 <USART_MuteModeCmd+0x18>)
 8001838:	4013      	ands	r3, r2
 800183a:	6003      	str	r3, [r0, #0]
 800183c:	4770      	bx	lr
 800183e:	2380      	movs	r3, #128	; 0x80
 8001840:	019b      	lsls	r3, r3, #6
 8001842:	4313      	orrs	r3, r2
 8001844:	6003      	str	r3, [r0, #0]
 8001846:	e7f9      	b.n	800183c <USART_MuteModeCmd+0xc>
 8001848:	ffffdfff 	.word	0xffffdfff

0800184c <USART_MuteModeWakeUpConfig>:
 800184c:	6802      	ldr	r2, [r0, #0]
 800184e:	4b03      	ldr	r3, [pc, #12]	; (800185c <USART_MuteModeWakeUpConfig+0x10>)
 8001850:	4013      	ands	r3, r2
 8001852:	6003      	str	r3, [r0, #0]
 8001854:	6803      	ldr	r3, [r0, #0]
 8001856:	4319      	orrs	r1, r3
 8001858:	6001      	str	r1, [r0, #0]
 800185a:	4770      	bx	lr
 800185c:	fffff7ff 	.word	0xfffff7ff

08001860 <USART_AddressDetectionConfig>:
 8001860:	6843      	ldr	r3, [r0, #4]
 8001862:	2210      	movs	r2, #16
 8001864:	4393      	bics	r3, r2
 8001866:	6043      	str	r3, [r0, #4]
 8001868:	6843      	ldr	r3, [r0, #4]
 800186a:	4319      	orrs	r1, r3
 800186c:	6041      	str	r1, [r0, #4]
 800186e:	4770      	bx	lr

08001870 <USART_LINBreakDetectLengthConfig>:
 8001870:	6843      	ldr	r3, [r0, #4]
 8001872:	2220      	movs	r2, #32
 8001874:	4393      	bics	r3, r2
 8001876:	6043      	str	r3, [r0, #4]
 8001878:	6843      	ldr	r3, [r0, #4]
 800187a:	4319      	orrs	r1, r3
 800187c:	6041      	str	r1, [r0, #4]
 800187e:	4770      	bx	lr

08001880 <USART_LINCmd>:
 8001880:	6842      	ldr	r2, [r0, #4]
 8001882:	2900      	cmp	r1, #0
 8001884:	d103      	bne.n	800188e <USART_LINCmd+0xe>
 8001886:	4b04      	ldr	r3, [pc, #16]	; (8001898 <USART_LINCmd+0x18>)
 8001888:	4013      	ands	r3, r2
 800188a:	6043      	str	r3, [r0, #4]
 800188c:	4770      	bx	lr
 800188e:	2380      	movs	r3, #128	; 0x80
 8001890:	01db      	lsls	r3, r3, #7
 8001892:	4313      	orrs	r3, r2
 8001894:	6043      	str	r3, [r0, #4]
 8001896:	e7f9      	b.n	800188c <USART_LINCmd+0xc>
 8001898:	ffffbfff 	.word	0xffffbfff

0800189c <USART_HalfDuplexCmd>:
 800189c:	2900      	cmp	r1, #0
 800189e:	d104      	bne.n	80018aa <USART_HalfDuplexCmd+0xe>
 80018a0:	6883      	ldr	r3, [r0, #8]
 80018a2:	2208      	movs	r2, #8
 80018a4:	4393      	bics	r3, r2
 80018a6:	6083      	str	r3, [r0, #8]
 80018a8:	4770      	bx	lr
 80018aa:	6882      	ldr	r2, [r0, #8]
 80018ac:	2308      	movs	r3, #8
 80018ae:	4313      	orrs	r3, r2
 80018b0:	6083      	str	r3, [r0, #8]
 80018b2:	e7f9      	b.n	80018a8 <USART_HalfDuplexCmd+0xc>

080018b4 <USART_SetGuardTime>:
 80018b4:	6902      	ldr	r2, [r0, #16]
 80018b6:	23ff      	movs	r3, #255	; 0xff
 80018b8:	4013      	ands	r3, r2
 80018ba:	8203      	strh	r3, [r0, #16]
 80018bc:	6903      	ldr	r3, [r0, #16]
 80018be:	0209      	lsls	r1, r1, #8
 80018c0:	b29b      	uxth	r3, r3
 80018c2:	4319      	orrs	r1, r3
 80018c4:	8201      	strh	r1, [r0, #16]
 80018c6:	4770      	bx	lr

080018c8 <USART_SmartCardCmd>:
 80018c8:	2900      	cmp	r1, #0
 80018ca:	d104      	bne.n	80018d6 <USART_SmartCardCmd+0xe>
 80018cc:	6883      	ldr	r3, [r0, #8]
 80018ce:	2220      	movs	r2, #32
 80018d0:	4393      	bics	r3, r2
 80018d2:	6083      	str	r3, [r0, #8]
 80018d4:	4770      	bx	lr
 80018d6:	6882      	ldr	r2, [r0, #8]
 80018d8:	2320      	movs	r3, #32
 80018da:	4313      	orrs	r3, r2
 80018dc:	6083      	str	r3, [r0, #8]
 80018de:	e7f9      	b.n	80018d4 <USART_SmartCardCmd+0xc>

080018e0 <USART_SmartCardNACKCmd>:
 80018e0:	2900      	cmp	r1, #0
 80018e2:	d104      	bne.n	80018ee <USART_SmartCardNACKCmd+0xe>
 80018e4:	6883      	ldr	r3, [r0, #8]
 80018e6:	2210      	movs	r2, #16
 80018e8:	4393      	bics	r3, r2
 80018ea:	6083      	str	r3, [r0, #8]
 80018ec:	4770      	bx	lr
 80018ee:	6882      	ldr	r2, [r0, #8]
 80018f0:	2310      	movs	r3, #16
 80018f2:	4313      	orrs	r3, r2
 80018f4:	6083      	str	r3, [r0, #8]
 80018f6:	e7f9      	b.n	80018ec <USART_SmartCardNACKCmd+0xc>

080018f8 <USART_SetAutoRetryCount>:
 80018f8:	6882      	ldr	r2, [r0, #8]
 80018fa:	4b04      	ldr	r3, [pc, #16]	; (800190c <USART_SetAutoRetryCount+0x14>)
 80018fc:	0449      	lsls	r1, r1, #17
 80018fe:	4013      	ands	r3, r2
 8001900:	6083      	str	r3, [r0, #8]
 8001902:	6883      	ldr	r3, [r0, #8]
 8001904:	4319      	orrs	r1, r3
 8001906:	6081      	str	r1, [r0, #8]
 8001908:	4770      	bx	lr
 800190a:	46c0      	nop			; (mov r8, r8)
 800190c:	fff1ffff 	.word	0xfff1ffff

08001910 <USART_SetBlockLength>:
 8001910:	6943      	ldr	r3, [r0, #20]
 8001912:	0609      	lsls	r1, r1, #24
 8001914:	021b      	lsls	r3, r3, #8
 8001916:	0a1b      	lsrs	r3, r3, #8
 8001918:	6143      	str	r3, [r0, #20]
 800191a:	6943      	ldr	r3, [r0, #20]
 800191c:	4319      	orrs	r1, r3
 800191e:	6141      	str	r1, [r0, #20]
 8001920:	4770      	bx	lr
 8001922:	46c0      	nop			; (mov r8, r8)

08001924 <USART_IrDAConfig>:
 8001924:	6883      	ldr	r3, [r0, #8]
 8001926:	2204      	movs	r2, #4
 8001928:	4393      	bics	r3, r2
 800192a:	6083      	str	r3, [r0, #8]
 800192c:	6883      	ldr	r3, [r0, #8]
 800192e:	4319      	orrs	r1, r3
 8001930:	6081      	str	r1, [r0, #8]
 8001932:	4770      	bx	lr

08001934 <USART_IrDACmd>:
 8001934:	2900      	cmp	r1, #0
 8001936:	d104      	bne.n	8001942 <USART_IrDACmd+0xe>
 8001938:	6883      	ldr	r3, [r0, #8]
 800193a:	2202      	movs	r2, #2
 800193c:	4393      	bics	r3, r2
 800193e:	6083      	str	r3, [r0, #8]
 8001940:	4770      	bx	lr
 8001942:	6882      	ldr	r2, [r0, #8]
 8001944:	2302      	movs	r3, #2
 8001946:	4313      	orrs	r3, r2
 8001948:	6083      	str	r3, [r0, #8]
 800194a:	e7f9      	b.n	8001940 <USART_IrDACmd+0xc>

0800194c <USART_DECmd>:
 800194c:	6882      	ldr	r2, [r0, #8]
 800194e:	2900      	cmp	r1, #0
 8001950:	d103      	bne.n	800195a <USART_DECmd+0xe>
 8001952:	4b04      	ldr	r3, [pc, #16]	; (8001964 <USART_DECmd+0x18>)
 8001954:	4013      	ands	r3, r2
 8001956:	6083      	str	r3, [r0, #8]
 8001958:	4770      	bx	lr
 800195a:	2380      	movs	r3, #128	; 0x80
 800195c:	01db      	lsls	r3, r3, #7
 800195e:	4313      	orrs	r3, r2
 8001960:	6083      	str	r3, [r0, #8]
 8001962:	e7f9      	b.n	8001958 <USART_DECmd+0xc>
 8001964:	ffffbfff 	.word	0xffffbfff

08001968 <USART_DEPolarityConfig>:
 8001968:	6882      	ldr	r2, [r0, #8]
 800196a:	4b03      	ldr	r3, [pc, #12]	; (8001978 <USART_DEPolarityConfig+0x10>)
 800196c:	4013      	ands	r3, r2
 800196e:	6083      	str	r3, [r0, #8]
 8001970:	6883      	ldr	r3, [r0, #8]
 8001972:	4319      	orrs	r1, r3
 8001974:	6081      	str	r1, [r0, #8]
 8001976:	4770      	bx	lr
 8001978:	ffff7fff 	.word	0xffff7fff

0800197c <USART_SetDEAssertionTime>:
 800197c:	6802      	ldr	r2, [r0, #0]
 800197e:	4b04      	ldr	r3, [pc, #16]	; (8001990 <USART_SetDEAssertionTime+0x14>)
 8001980:	0549      	lsls	r1, r1, #21
 8001982:	4013      	ands	r3, r2
 8001984:	6003      	str	r3, [r0, #0]
 8001986:	6803      	ldr	r3, [r0, #0]
 8001988:	4319      	orrs	r1, r3
 800198a:	6001      	str	r1, [r0, #0]
 800198c:	4770      	bx	lr
 800198e:	46c0      	nop			; (mov r8, r8)
 8001990:	fc1fffff 	.word	0xfc1fffff

08001994 <USART_SetDEDeassertionTime>:
 8001994:	6802      	ldr	r2, [r0, #0]
 8001996:	4b04      	ldr	r3, [pc, #16]	; (80019a8 <USART_SetDEDeassertionTime+0x14>)
 8001998:	0409      	lsls	r1, r1, #16
 800199a:	4013      	ands	r3, r2
 800199c:	6003      	str	r3, [r0, #0]
 800199e:	6803      	ldr	r3, [r0, #0]
 80019a0:	4319      	orrs	r1, r3
 80019a2:	6001      	str	r1, [r0, #0]
 80019a4:	4770      	bx	lr
 80019a6:	46c0      	nop			; (mov r8, r8)
 80019a8:	ffe0ffff 	.word	0xffe0ffff

080019ac <USART_DMACmd>:
 80019ac:	6883      	ldr	r3, [r0, #8]
 80019ae:	2a00      	cmp	r2, #0
 80019b0:	d102      	bne.n	80019b8 <USART_DMACmd+0xc>
 80019b2:	438b      	bics	r3, r1
 80019b4:	6083      	str	r3, [r0, #8]
 80019b6:	4770      	bx	lr
 80019b8:	4319      	orrs	r1, r3
 80019ba:	6081      	str	r1, [r0, #8]
 80019bc:	e7fb      	b.n	80019b6 <USART_DMACmd+0xa>
 80019be:	46c0      	nop			; (mov r8, r8)

080019c0 <USART_DMAReceptionErrorConfig>:
 80019c0:	6882      	ldr	r2, [r0, #8]
 80019c2:	4b03      	ldr	r3, [pc, #12]	; (80019d0 <USART_DMAReceptionErrorConfig+0x10>)
 80019c4:	4013      	ands	r3, r2
 80019c6:	6083      	str	r3, [r0, #8]
 80019c8:	6883      	ldr	r3, [r0, #8]
 80019ca:	4319      	orrs	r1, r3
 80019cc:	6081      	str	r1, [r0, #8]
 80019ce:	4770      	bx	lr
 80019d0:	ffffdfff 	.word	0xffffdfff

080019d4 <USART_ITConfig>:
 80019d4:	b510      	push	{r4, lr}
 80019d6:	24ff      	movs	r4, #255	; 0xff
 80019d8:	b28b      	uxth	r3, r1
 80019da:	4021      	ands	r1, r4
 80019dc:	2401      	movs	r4, #1
 80019de:	408c      	lsls	r4, r1
 80019e0:	0a1b      	lsrs	r3, r3, #8
 80019e2:	1c21      	adds	r1, r4, #0
 80019e4:	2b02      	cmp	r3, #2
 80019e6:	d00a      	beq.n	80019fe <USART_ITConfig+0x2a>
 80019e8:	2b03      	cmp	r3, #3
 80019ea:	d00a      	beq.n	8001a02 <USART_ITConfig+0x2e>
 80019ec:	6803      	ldr	r3, [r0, #0]
 80019ee:	2a00      	cmp	r2, #0
 80019f0:	d102      	bne.n	80019f8 <USART_ITConfig+0x24>
 80019f2:	438b      	bics	r3, r1
 80019f4:	6003      	str	r3, [r0, #0]
 80019f6:	bd10      	pop	{r4, pc}
 80019f8:	4319      	orrs	r1, r3
 80019fa:	6001      	str	r1, [r0, #0]
 80019fc:	e7fb      	b.n	80019f6 <USART_ITConfig+0x22>
 80019fe:	3004      	adds	r0, #4
 8001a00:	e7f4      	b.n	80019ec <USART_ITConfig+0x18>
 8001a02:	3008      	adds	r0, #8
 8001a04:	e7f2      	b.n	80019ec <USART_ITConfig+0x18>
 8001a06:	46c0      	nop			; (mov r8, r8)

08001a08 <USART_RequestCmd>:
 8001a08:	6983      	ldr	r3, [r0, #24]
 8001a0a:	2a00      	cmp	r2, #0
 8001a0c:	d103      	bne.n	8001a16 <USART_RequestCmd+0xe>
 8001a0e:	b29b      	uxth	r3, r3
 8001a10:	438b      	bics	r3, r1
 8001a12:	8303      	strh	r3, [r0, #24]
 8001a14:	4770      	bx	lr
 8001a16:	4319      	orrs	r1, r3
 8001a18:	b289      	uxth	r1, r1
 8001a1a:	8301      	strh	r1, [r0, #24]
 8001a1c:	e7fa      	b.n	8001a14 <USART_RequestCmd+0xc>
 8001a1e:	46c0      	nop			; (mov r8, r8)

08001a20 <USART_OverrunDetectionConfig>:
 8001a20:	6882      	ldr	r2, [r0, #8]
 8001a22:	4b03      	ldr	r3, [pc, #12]	; (8001a30 <USART_OverrunDetectionConfig+0x10>)
 8001a24:	4013      	ands	r3, r2
 8001a26:	6083      	str	r3, [r0, #8]
 8001a28:	6883      	ldr	r3, [r0, #8]
 8001a2a:	4319      	orrs	r1, r3
 8001a2c:	6081      	str	r1, [r0, #8]
 8001a2e:	4770      	bx	lr
 8001a30:	ffffefff 	.word	0xffffefff

08001a34 <USART_GetFlagStatus>:
 8001a34:	69c0      	ldr	r0, [r0, #28]
 8001a36:	4008      	ands	r0, r1
 8001a38:	1e43      	subs	r3, r0, #1
 8001a3a:	4198      	sbcs	r0, r3
 8001a3c:	b2c0      	uxtb	r0, r0
 8001a3e:	4770      	bx	lr

08001a40 <USART_ClearFlag>:
 8001a40:	6201      	str	r1, [r0, #32]
 8001a42:	4770      	bx	lr

08001a44 <USART_GetITStatus>:
 8001a44:	22ff      	movs	r2, #255	; 0xff
 8001a46:	400a      	ands	r2, r1
 8001a48:	b510      	push	{r4, lr}
 8001a4a:	2401      	movs	r4, #1
 8001a4c:	b28b      	uxth	r3, r1
 8001a4e:	4094      	lsls	r4, r2
 8001a50:	0a1b      	lsrs	r3, r3, #8
 8001a52:	1c22      	adds	r2, r4, #0
 8001a54:	2b01      	cmp	r3, #1
 8001a56:	d00f      	beq.n	8001a78 <USART_GetITStatus+0x34>
 8001a58:	2b02      	cmp	r3, #2
 8001a5a:	d010      	beq.n	8001a7e <USART_GetITStatus+0x3a>
 8001a5c:	6884      	ldr	r4, [r0, #8]
 8001a5e:	4022      	ands	r2, r4
 8001a60:	69c3      	ldr	r3, [r0, #28]
 8001a62:	2000      	movs	r0, #0
 8001a64:	2a00      	cmp	r2, #0
 8001a66:	d006      	beq.n	8001a76 <USART_GetITStatus+0x32>
 8001a68:	0c09      	lsrs	r1, r1, #16
 8001a6a:	2001      	movs	r0, #1
 8001a6c:	4088      	lsls	r0, r1
 8001a6e:	4003      	ands	r3, r0
 8001a70:	1e58      	subs	r0, r3, #1
 8001a72:	4183      	sbcs	r3, r0
 8001a74:	b2d8      	uxtb	r0, r3
 8001a76:	bd10      	pop	{r4, pc}
 8001a78:	6804      	ldr	r4, [r0, #0]
 8001a7a:	4022      	ands	r2, r4
 8001a7c:	e7f0      	b.n	8001a60 <USART_GetITStatus+0x1c>
 8001a7e:	6844      	ldr	r4, [r0, #4]
 8001a80:	4022      	ands	r2, r4
 8001a82:	e7ed      	b.n	8001a60 <USART_GetITStatus+0x1c>

08001a84 <USART_ClearITPendingBit>:
 8001a84:	0c09      	lsrs	r1, r1, #16
 8001a86:	2301      	movs	r3, #1
 8001a88:	408b      	lsls	r3, r1
 8001a8a:	6203      	str	r3, [r0, #32]
 8001a8c:	4770      	bx	lr
 8001a8e:	46c0      	nop			; (mov r8, r8)

08001a90 <__aeabi_uidiv>:
 8001a90:	2900      	cmp	r1, #0
 8001a92:	d034      	beq.n	8001afe <.udivsi3_skip_div0_test+0x6a>

08001a94 <.udivsi3_skip_div0_test>:
 8001a94:	2301      	movs	r3, #1
 8001a96:	2200      	movs	r2, #0
 8001a98:	b410      	push	{r4}
 8001a9a:	4288      	cmp	r0, r1
 8001a9c:	d32c      	bcc.n	8001af8 <.udivsi3_skip_div0_test+0x64>
 8001a9e:	2401      	movs	r4, #1
 8001aa0:	0724      	lsls	r4, r4, #28
 8001aa2:	42a1      	cmp	r1, r4
 8001aa4:	d204      	bcs.n	8001ab0 <.udivsi3_skip_div0_test+0x1c>
 8001aa6:	4281      	cmp	r1, r0
 8001aa8:	d202      	bcs.n	8001ab0 <.udivsi3_skip_div0_test+0x1c>
 8001aaa:	0109      	lsls	r1, r1, #4
 8001aac:	011b      	lsls	r3, r3, #4
 8001aae:	e7f8      	b.n	8001aa2 <.udivsi3_skip_div0_test+0xe>
 8001ab0:	00e4      	lsls	r4, r4, #3
 8001ab2:	42a1      	cmp	r1, r4
 8001ab4:	d204      	bcs.n	8001ac0 <.udivsi3_skip_div0_test+0x2c>
 8001ab6:	4281      	cmp	r1, r0
 8001ab8:	d202      	bcs.n	8001ac0 <.udivsi3_skip_div0_test+0x2c>
 8001aba:	0049      	lsls	r1, r1, #1
 8001abc:	005b      	lsls	r3, r3, #1
 8001abe:	e7f8      	b.n	8001ab2 <.udivsi3_skip_div0_test+0x1e>
 8001ac0:	4288      	cmp	r0, r1
 8001ac2:	d301      	bcc.n	8001ac8 <.udivsi3_skip_div0_test+0x34>
 8001ac4:	1a40      	subs	r0, r0, r1
 8001ac6:	431a      	orrs	r2, r3
 8001ac8:	084c      	lsrs	r4, r1, #1
 8001aca:	42a0      	cmp	r0, r4
 8001acc:	d302      	bcc.n	8001ad4 <.udivsi3_skip_div0_test+0x40>
 8001ace:	1b00      	subs	r0, r0, r4
 8001ad0:	085c      	lsrs	r4, r3, #1
 8001ad2:	4322      	orrs	r2, r4
 8001ad4:	088c      	lsrs	r4, r1, #2
 8001ad6:	42a0      	cmp	r0, r4
 8001ad8:	d302      	bcc.n	8001ae0 <.udivsi3_skip_div0_test+0x4c>
 8001ada:	1b00      	subs	r0, r0, r4
 8001adc:	089c      	lsrs	r4, r3, #2
 8001ade:	4322      	orrs	r2, r4
 8001ae0:	08cc      	lsrs	r4, r1, #3
 8001ae2:	42a0      	cmp	r0, r4
 8001ae4:	d302      	bcc.n	8001aec <.udivsi3_skip_div0_test+0x58>
 8001ae6:	1b00      	subs	r0, r0, r4
 8001ae8:	08dc      	lsrs	r4, r3, #3
 8001aea:	4322      	orrs	r2, r4
 8001aec:	2800      	cmp	r0, #0
 8001aee:	d003      	beq.n	8001af8 <.udivsi3_skip_div0_test+0x64>
 8001af0:	091b      	lsrs	r3, r3, #4
 8001af2:	d001      	beq.n	8001af8 <.udivsi3_skip_div0_test+0x64>
 8001af4:	0909      	lsrs	r1, r1, #4
 8001af6:	e7e3      	b.n	8001ac0 <.udivsi3_skip_div0_test+0x2c>
 8001af8:	1c10      	adds	r0, r2, #0
 8001afa:	bc10      	pop	{r4}
 8001afc:	4770      	bx	lr
 8001afe:	2800      	cmp	r0, #0
 8001b00:	d001      	beq.n	8001b06 <.udivsi3_skip_div0_test+0x72>
 8001b02:	2000      	movs	r0, #0
 8001b04:	43c0      	mvns	r0, r0
 8001b06:	b407      	push	{r0, r1, r2}
 8001b08:	4802      	ldr	r0, [pc, #8]	; (8001b14 <.udivsi3_skip_div0_test+0x80>)
 8001b0a:	a102      	add	r1, pc, #8	; (adr r1, 8001b14 <.udivsi3_skip_div0_test+0x80>)
 8001b0c:	1840      	adds	r0, r0, r1
 8001b0e:	9002      	str	r0, [sp, #8]
 8001b10:	bd03      	pop	{r0, r1, pc}
 8001b12:	46c0      	nop			; (mov r8, r8)
 8001b14:	000000d9 	.word	0x000000d9

08001b18 <__aeabi_uidivmod>:
 8001b18:	2900      	cmp	r1, #0
 8001b1a:	d0f0      	beq.n	8001afe <.udivsi3_skip_div0_test+0x6a>
 8001b1c:	b503      	push	{r0, r1, lr}
 8001b1e:	f7ff ffb9 	bl	8001a94 <.udivsi3_skip_div0_test>
 8001b22:	bc0e      	pop	{r1, r2, r3}
 8001b24:	4342      	muls	r2, r0
 8001b26:	1a89      	subs	r1, r1, r2
 8001b28:	4718      	bx	r3
 8001b2a:	46c0      	nop			; (mov r8, r8)

08001b2c <__aeabi_idiv>:
 8001b2c:	2900      	cmp	r1, #0
 8001b2e:	d041      	beq.n	8001bb4 <.divsi3_skip_div0_test+0x84>

08001b30 <.divsi3_skip_div0_test>:
 8001b30:	b410      	push	{r4}
 8001b32:	1c04      	adds	r4, r0, #0
 8001b34:	404c      	eors	r4, r1
 8001b36:	46a4      	mov	ip, r4
 8001b38:	2301      	movs	r3, #1
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	2900      	cmp	r1, #0
 8001b3e:	d500      	bpl.n	8001b42 <.divsi3_skip_div0_test+0x12>
 8001b40:	4249      	negs	r1, r1
 8001b42:	2800      	cmp	r0, #0
 8001b44:	d500      	bpl.n	8001b48 <.divsi3_skip_div0_test+0x18>
 8001b46:	4240      	negs	r0, r0
 8001b48:	4288      	cmp	r0, r1
 8001b4a:	d32c      	bcc.n	8001ba6 <.divsi3_skip_div0_test+0x76>
 8001b4c:	2401      	movs	r4, #1
 8001b4e:	0724      	lsls	r4, r4, #28
 8001b50:	42a1      	cmp	r1, r4
 8001b52:	d204      	bcs.n	8001b5e <.divsi3_skip_div0_test+0x2e>
 8001b54:	4281      	cmp	r1, r0
 8001b56:	d202      	bcs.n	8001b5e <.divsi3_skip_div0_test+0x2e>
 8001b58:	0109      	lsls	r1, r1, #4
 8001b5a:	011b      	lsls	r3, r3, #4
 8001b5c:	e7f8      	b.n	8001b50 <.divsi3_skip_div0_test+0x20>
 8001b5e:	00e4      	lsls	r4, r4, #3
 8001b60:	42a1      	cmp	r1, r4
 8001b62:	d204      	bcs.n	8001b6e <.divsi3_skip_div0_test+0x3e>
 8001b64:	4281      	cmp	r1, r0
 8001b66:	d202      	bcs.n	8001b6e <.divsi3_skip_div0_test+0x3e>
 8001b68:	0049      	lsls	r1, r1, #1
 8001b6a:	005b      	lsls	r3, r3, #1
 8001b6c:	e7f8      	b.n	8001b60 <.divsi3_skip_div0_test+0x30>
 8001b6e:	4288      	cmp	r0, r1
 8001b70:	d301      	bcc.n	8001b76 <.divsi3_skip_div0_test+0x46>
 8001b72:	1a40      	subs	r0, r0, r1
 8001b74:	431a      	orrs	r2, r3
 8001b76:	084c      	lsrs	r4, r1, #1
 8001b78:	42a0      	cmp	r0, r4
 8001b7a:	d302      	bcc.n	8001b82 <.divsi3_skip_div0_test+0x52>
 8001b7c:	1b00      	subs	r0, r0, r4
 8001b7e:	085c      	lsrs	r4, r3, #1
 8001b80:	4322      	orrs	r2, r4
 8001b82:	088c      	lsrs	r4, r1, #2
 8001b84:	42a0      	cmp	r0, r4
 8001b86:	d302      	bcc.n	8001b8e <.divsi3_skip_div0_test+0x5e>
 8001b88:	1b00      	subs	r0, r0, r4
 8001b8a:	089c      	lsrs	r4, r3, #2
 8001b8c:	4322      	orrs	r2, r4
 8001b8e:	08cc      	lsrs	r4, r1, #3
 8001b90:	42a0      	cmp	r0, r4
 8001b92:	d302      	bcc.n	8001b9a <.divsi3_skip_div0_test+0x6a>
 8001b94:	1b00      	subs	r0, r0, r4
 8001b96:	08dc      	lsrs	r4, r3, #3
 8001b98:	4322      	orrs	r2, r4
 8001b9a:	2800      	cmp	r0, #0
 8001b9c:	d003      	beq.n	8001ba6 <.divsi3_skip_div0_test+0x76>
 8001b9e:	091b      	lsrs	r3, r3, #4
 8001ba0:	d001      	beq.n	8001ba6 <.divsi3_skip_div0_test+0x76>
 8001ba2:	0909      	lsrs	r1, r1, #4
 8001ba4:	e7e3      	b.n	8001b6e <.divsi3_skip_div0_test+0x3e>
 8001ba6:	1c10      	adds	r0, r2, #0
 8001ba8:	4664      	mov	r4, ip
 8001baa:	2c00      	cmp	r4, #0
 8001bac:	d500      	bpl.n	8001bb0 <.divsi3_skip_div0_test+0x80>
 8001bae:	4240      	negs	r0, r0
 8001bb0:	bc10      	pop	{r4}
 8001bb2:	4770      	bx	lr
 8001bb4:	2800      	cmp	r0, #0
 8001bb6:	d006      	beq.n	8001bc6 <.divsi3_skip_div0_test+0x96>
 8001bb8:	db03      	blt.n	8001bc2 <.divsi3_skip_div0_test+0x92>
 8001bba:	2000      	movs	r0, #0
 8001bbc:	43c0      	mvns	r0, r0
 8001bbe:	0840      	lsrs	r0, r0, #1
 8001bc0:	e001      	b.n	8001bc6 <.divsi3_skip_div0_test+0x96>
 8001bc2:	2080      	movs	r0, #128	; 0x80
 8001bc4:	0600      	lsls	r0, r0, #24
 8001bc6:	b407      	push	{r0, r1, r2}
 8001bc8:	4802      	ldr	r0, [pc, #8]	; (8001bd4 <.divsi3_skip_div0_test+0xa4>)
 8001bca:	a102      	add	r1, pc, #8	; (adr r1, 8001bd4 <.divsi3_skip_div0_test+0xa4>)
 8001bcc:	1840      	adds	r0, r0, r1
 8001bce:	9002      	str	r0, [sp, #8]
 8001bd0:	bd03      	pop	{r0, r1, pc}
 8001bd2:	46c0      	nop			; (mov r8, r8)
 8001bd4:	00000019 	.word	0x00000019

08001bd8 <__aeabi_idivmod>:
 8001bd8:	2900      	cmp	r1, #0
 8001bda:	d0eb      	beq.n	8001bb4 <.divsi3_skip_div0_test+0x84>
 8001bdc:	b503      	push	{r0, r1, lr}
 8001bde:	f7ff ffa7 	bl	8001b30 <.divsi3_skip_div0_test>
 8001be2:	bc0e      	pop	{r1, r2, r3}
 8001be4:	4342      	muls	r2, r0
 8001be6:	1a89      	subs	r1, r1, r2
 8001be8:	4718      	bx	r3
 8001bea:	46c0      	nop			; (mov r8, r8)

08001bec <__aeabi_idiv0>:
 8001bec:	4770      	bx	lr
 8001bee:	46c0      	nop			; (mov r8, r8)

08001bf0 <main>:
#include "RGB_driver.h"
#include "stm32f0xx_tim.h"
#include "stm32f0xx_tim.h"

int main(void)
{
 8001bf0:	b508      	push	{r3, lr}
	SystemInit();
 8001bf2:	f000 f817 	bl	8001c24 <SystemInit>
	gpio_init();
 8001bf6:	f000 f87b 	bl	8001cf0 <gpio_init>
	utilities_init();
 8001bfa:	f000 f8bb 	bl	8001d74 <utilities_init>
	RGB_init();
 8001bfe:	f000 f903 	bl	8001e08 <RGB_init>

	// Example usage
	send_string("Hello World!\n");
 8001c02:	4806      	ldr	r0, [pc, #24]	; (8001c1c <main+0x2c>)
 8001c04:	f000 f8ec 	bl	8001de0 <send_string>
	write_RGB(250,1000,750);
 8001c08:	20fa      	movs	r0, #250	; 0xfa
 8001c0a:	0081      	lsls	r1, r0, #2
 8001c0c:	4a04      	ldr	r2, [pc, #16]	; (8001c20 <main+0x30>)
 8001c0e:	f000 f937 	bl	8001e80 <write_RGB>
	write_debug_led(1000);
 8001c12:	20fa      	movs	r0, #250	; 0xfa
 8001c14:	0080      	lsls	r0, r0, #2
 8001c16:	f000 f955 	bl	8001ec4 <write_debug_led>
 8001c1a:	e7fe      	b.n	8001c1a <main+0x2a>
 8001c1c:	08001f7c 	.word	0x08001f7c
 8001c20:	000002ee 	.word	0x000002ee

08001c24 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{    
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001c24:	4b25      	ldr	r3, [pc, #148]	; (8001cbc <SystemInit+0x98>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{    
 8001c26:	b513      	push	{r0, r1, r4, lr}
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001c28:	6819      	ldr	r1, [r3, #0]
 8001c2a:	2201      	movs	r2, #1
 8001c2c:	4311      	orrs	r1, r2
 8001c2e:	6019      	str	r1, [r3, #0]

  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 8001c30:	6858      	ldr	r0, [r3, #4]
 8001c32:	4923      	ldr	r1, [pc, #140]	; (8001cc0 <SystemInit+0x9c>)

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8001c34:	240f      	movs	r4, #15
{    
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 8001c36:	4001      	ands	r1, r0
 8001c38:	6059      	str	r1, [r3, #4]
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001c3a:	6818      	ldr	r0, [r3, #0]
 8001c3c:	4921      	ldr	r1, [pc, #132]	; (8001cc4 <SystemInit+0xa0>)
 8001c3e:	4001      	ands	r1, r0
 8001c40:	6019      	str	r1, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001c42:	6818      	ldr	r0, [r3, #0]
 8001c44:	4920      	ldr	r1, [pc, #128]	; (8001cc8 <SystemInit+0xa4>)
 8001c46:	4001      	ands	r1, r0
 8001c48:	6019      	str	r1, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;
 8001c4a:	6858      	ldr	r0, [r3, #4]
 8001c4c:	491f      	ldr	r1, [pc, #124]	; (8001ccc <SystemInit+0xa8>)
 8001c4e:	4008      	ands	r0, r1
 8001c50:	6058      	str	r0, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8001c52:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001c54:	43a0      	bics	r0, r4
 8001c56:	62d8      	str	r0, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
 8001c58:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8001c5a:	481d      	ldr	r0, [pc, #116]	; (8001cd0 <SystemInit+0xac>)
 8001c5c:	4020      	ands	r0, r4
 8001c5e:	6318      	str	r0, [r3, #48]	; 0x30

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 8001c60:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c62:	4390      	bics	r0, r2

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001c64:	2200      	movs	r2, #0

  /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 8001c66:	6358      	str	r0, [r3, #52]	; 0x34

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001c68:	609a      	str	r2, [r3, #8]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8001c6a:	9200      	str	r2, [sp, #0]
 8001c6c:	9201      	str	r2, [sp, #4]
  /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 8001c6e:	4a19      	ldr	r2, [pc, #100]	; (8001cd4 <SystemInit+0xb0>)
 8001c70:	2011      	movs	r0, #17
 8001c72:	6010      	str	r0, [r2, #0]
 
  /* HCLK = SYSCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8001c74:	685a      	ldr	r2, [r3, #4]
 8001c76:	605a      	str	r2, [r3, #4]
      
  /* PCLK = HCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 8001c78:	685a      	ldr	r2, [r3, #4]
 8001c7a:	605a      	str	r2, [r3, #4]

  /* PLL configuration = (HSI/2) * 12 = ~48 MHz */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 8001c7c:	685a      	ldr	r2, [r3, #4]
 8001c7e:	4011      	ands	r1, r2
 8001c80:	6059      	str	r1, [r3, #4]
  RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL12);
 8001c82:	6859      	ldr	r1, [r3, #4]
 8001c84:	22a0      	movs	r2, #160	; 0xa0
 8001c86:	0392      	lsls	r2, r2, #14
 8001c88:	430a      	orrs	r2, r1
 8001c8a:	605a      	str	r2, [r3, #4]
            
  /* Enable PLL */
  RCC->CR |= RCC_CR_PLLON;
 8001c8c:	6819      	ldr	r1, [r3, #0]
 8001c8e:	2280      	movs	r2, #128	; 0x80
 8001c90:	4082      	lsls	r2, r0
 8001c92:	430a      	orrs	r2, r1
 8001c94:	601a      	str	r2, [r3, #0]

  /* Wait till PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8001c96:	6819      	ldr	r1, [r3, #0]
 8001c98:	4a08      	ldr	r2, [pc, #32]	; (8001cbc <SystemInit+0x98>)
 8001c9a:	0188      	lsls	r0, r1, #6
 8001c9c:	d5fb      	bpl.n	8001c96 <SystemInit+0x72>
  {
  }

  /* Select PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8001c9e:	6851      	ldr	r1, [r2, #4]
 8001ca0:	2003      	movs	r0, #3
 8001ca2:	4381      	bics	r1, r0
 8001ca4:	6051      	str	r1, [r2, #4]
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 8001ca6:	6851      	ldr	r1, [r2, #4]
 8001ca8:	2002      	movs	r0, #2
 8001caa:	4301      	orrs	r1, r0
 8001cac:	6051      	str	r1, [r2, #4]

  /* Wait till PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 8001cae:	6859      	ldr	r1, [r3, #4]
 8001cb0:	220c      	movs	r2, #12
 8001cb2:	400a      	ands	r2, r1
 8001cb4:	2a08      	cmp	r2, #8
 8001cb6:	d1fa      	bne.n	8001cae <SystemInit+0x8a>
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;

  /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
  SetSysClock();
}
 8001cb8:	bd13      	pop	{r0, r1, r4, pc}
 8001cba:	46c0      	nop			; (mov r8, r8)
 8001cbc:	40021000 	.word	0x40021000
 8001cc0:	f8ffb80c 	.word	0xf8ffb80c
 8001cc4:	fef6ffff 	.word	0xfef6ffff
 8001cc8:	fffbffff 	.word	0xfffbffff
 8001ccc:	ffc0ffff 	.word	0xffc0ffff
 8001cd0:	fffffeac 	.word	0xfffffeac
 8001cd4:	40022000 	.word	0x40022000

08001cd8 <gpiopin_to_gpiopinsource>:


// Used by gpio_init to do something. Not used anywhere else, so don't worry abou tit.
int gpiopin_to_gpiopinsource(int input)
{
  if(input == 0) return 0;
 8001cd8:	2300      	movs	r3, #0
 8001cda:	4298      	cmp	r0, r3
 8001cdc:	d005      	beq.n	8001cea <gpiopin_to_gpiopinsource+0x12>
  int index = 0;
  while(index < 16)
    {
      if((input & 0x01) == 1) return index;
 8001cde:	07c2      	lsls	r2, r0, #31
 8001ce0:	d403      	bmi.n	8001cea <gpiopin_to_gpiopinsource+0x12>
      index++;
 8001ce2:	3301      	adds	r3, #1
      input = input >> 1;
 8001ce4:	1040      	asrs	r0, r0, #1
// Used by gpio_init to do something. Not used anywhere else, so don't worry abou tit.
int gpiopin_to_gpiopinsource(int input)
{
  if(input == 0) return 0;
  int index = 0;
  while(index < 16)
 8001ce6:	2b10      	cmp	r3, #16
 8001ce8:	d1f9      	bne.n	8001cde <gpiopin_to_gpiopinsource+0x6>
      if((input & 0x01) == 1) return index;
      index++;
      input = input >> 1;
    }
  return index;
}
 8001cea:	1c18      	adds	r0, r3, #0
 8001cec:	4770      	bx	lr
	...

08001cf0 <gpio_init>:


// I wanted a way to be able to define each pin and then this script would
// set up each pin. Not very size efficient.
void gpio_init(void)
{
 8001cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8001cf2:	2080      	movs	r0, #128	; 0x80


// I wanted a way to be able to define each pin and then this script would
// set up each pin. Not very size efficient.
void gpio_init(void)
{
 8001cf4:	b085      	sub	sp, #20
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8001cf6:	0280      	lsls	r0, r0, #10
 8001cf8:	2101      	movs	r1, #1
 8001cfa:	f7fe fce7 	bl	80006cc <RCC_AHBPeriphClockCmd>
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 8001cfe:	2080      	movs	r0, #128	; 0x80
 8001d00:	02c0      	lsls	r0, r0, #11
 8001d02:	2101      	movs	r1, #1
 8001d04:	f7fe fce2 	bl	80006cc <RCC_AHBPeriphClockCmd>
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 8001d08:	2080      	movs	r0, #128	; 0x80
 8001d0a:	0300      	lsls	r0, r0, #12
 8001d0c:	2101      	movs	r1, #1
 8001d0e:	f7fe fcdd 	bl	80006cc <RCC_AHBPeriphClockCmd>
 8001d12:	4c12      	ldr	r4, [pc, #72]	; (8001d5c <gpio_init+0x6c>)

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
 8001d14:	4b12      	ldr	r3, [pc, #72]	; (8001d60 <gpio_init+0x70>)
 8001d16:	429c      	cmp	r4, r3
 8001d18:	d01e      	beq.n	8001d58 <gpio_init+0x68>
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
 8001d1a:	79a7      	ldrb	r7, [r4, #6]
 8001d1c:	79e2      	ldrb	r2, [r4, #7]
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8001d1e:	466b      	mov	r3, sp
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
 8001d20:	6825      	ldr	r5, [r4, #0]
 8001d22:	9201      	str	r2, [sp, #4]
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8001d24:	731f      	strb	r7, [r3, #12]
 8001d26:	466a      	mov	r2, sp
 8001d28:	2303      	movs	r3, #3
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
 8001d2a:	88a6      	ldrh	r6, [r4, #4]
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8001d2c:	7353      	strb	r3, [r2, #13]
 8001d2e:	2300      	movs	r3, #0
 8001d30:	7393      	strb	r3, [r2, #14]
                                my_pin.gpio_mode,         // Pin Mode
                                GPIO_Speed_50MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_UP};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8001d32:	1c28      	adds	r0, r5, #0
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8001d34:	2301      	movs	r3, #1
                                my_pin.gpio_mode,         // Pin Mode
                                GPIO_Speed_50MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_UP};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8001d36:	a902      	add	r1, sp, #8
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

  for(int i = 0; i < sizeof(gpio_pin_mapping)/sizeof(gpio_pin_mapping[0]); i++)
  {
    gpio_struct_t my_pin = gpio_pin_mapping[i];
    GPIO_InitTypeDef pin_def = {my_pin.gpio_pin,          // Pin number
 8001d38:	9602      	str	r6, [sp, #8]
 8001d3a:	73d3      	strb	r3, [r2, #15]
                                my_pin.gpio_mode,         // Pin Mode
                                GPIO_Speed_50MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_UP};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
 8001d3c:	f7fe fa14 	bl	8000168 <GPIO_Init>
    if(my_pin.gpio_mode == (0x02)) GPIO_PinAFConfig(my_pin.gpio_port,
 8001d40:	2f02      	cmp	r7, #2
 8001d42:	d107      	bne.n	8001d54 <gpio_init+0x64>
      gpiopin_to_gpiopinsource(my_pin.gpio_pin),
 8001d44:	1c30      	adds	r0, r6, #0
 8001d46:	f7ff ffc7 	bl	8001cd8 <gpiopin_to_gpiopinsource>
                                my_pin.gpio_mode,         // Pin Mode
                                GPIO_Speed_50MHz,         // Pin Speed
                                GPIO_OType_PP,            // Output Type
                                GPIO_PuPd_UP};        // Pull Direction
    GPIO_Init(my_pin.gpio_port, &pin_def);
    if(my_pin.gpio_mode == (0x02)) GPIO_PinAFConfig(my_pin.gpio_port,
 8001d4a:	9a01      	ldr	r2, [sp, #4]
 8001d4c:	b281      	uxth	r1, r0
 8001d4e:	1c28      	adds	r0, r5, #0
 8001d50:	f7fe faa8 	bl	80002a4 <GPIO_PinAFConfig>
 8001d54:	3408      	adds	r4, #8
 8001d56:	e7dd      	b.n	8001d14 <gpio_init+0x24>
      gpiopin_to_gpiopinsource(my_pin.gpio_pin),
      my_pin.gpio_af_selection);
  }
}
 8001d58:	b005      	add	sp, #20
 8001d5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d5c:	08001f8c 	.word	0x08001f8c
 8001d60:	08001ff4 	.word	0x08001ff4

08001d64 <SysTick_Handler>:
	while((msTicks - startTicks) < ms_delay);
}


void SysTick_Handler(void) {
	msTicks++;
 8001d64:	4b02      	ldr	r3, [pc, #8]	; (8001d70 <SysTick_Handler+0xc>)
 8001d66:	681a      	ldr	r2, [r3, #0]
 8001d68:	3201      	adds	r2, #1
 8001d6a:	601a      	str	r2, [r3, #0]
} 
 8001d6c:	4770      	bx	lr
 8001d6e:	46c0      	nop			; (mov r8, r8)
 8001d70:	20000014 	.word	0x20000014

08001d74 <utilities_init>:

void utilities_init()
{
 8001d74:	b510      	push	{r4, lr}
	// Initialize Systick
	SysTick_Config(SystemCoreClock/1000);
 8001d76:	4b16      	ldr	r3, [pc, #88]	; (8001dd0 <utilities_init+0x5c>)
 8001d78:	21fa      	movs	r1, #250	; 0xfa
void SysTick_Handler(void) {
	msTicks++;
} 

void utilities_init()
{
 8001d7a:	b086      	sub	sp, #24
	// Initialize Systick
	SysTick_Config(SystemCoreClock/1000);
 8001d7c:	6818      	ldr	r0, [r3, #0]
 8001d7e:	0089      	lsls	r1, r1, #2
 8001d80:	f7ff fe86 	bl	8001a90 <__aeabi_uidiv>
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 8001d84:	4b13      	ldr	r3, [pc, #76]	; (8001dd4 <utilities_init+0x60>)
    \param [in]  priority  Priority to set
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 8001d86:	4a14      	ldr	r2, [pc, #80]	; (8001dd8 <utilities_init+0x64>)
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 8001d88:	3801      	subs	r0, #1
 8001d8a:	6058      	str	r0, [r3, #4]
    \param [in]  priority  Priority to set
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 8001d8c:	6a10      	ldr	r0, [r2, #32]
 8001d8e:	21c0      	movs	r1, #192	; 0xc0
 8001d90:	0200      	lsls	r0, r0, #8
 8001d92:	0a00      	lsrs	r0, r0, #8
 8001d94:	0609      	lsls	r1, r1, #24
 8001d96:	4301      	orrs	r1, r0
 8001d98:	6211      	str	r1, [r2, #32]
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	609a      	str	r2, [r3, #8]

  // Initialize UART
  	RCC_APB2PeriphClockCmd(RCC_APB2ENR_USART1EN, ENABLE);
 8001d9e:	2080      	movs	r0, #128	; 0x80
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001da0:	2207      	movs	r2, #7
 8001da2:	601a      	str	r2, [r3, #0]
 8001da4:	4090      	lsls	r0, r2
 8001da6:	2101      	movs	r1, #1
 8001da8:	f7fe fc9c 	bl	80006e4 <RCC_APB2PeriphClockCmd>
	USART_InitTypeDef usart_init;
	USART_StructInit(&usart_init);
	usart_init.USART_BaudRate = 115200;
	USART_Init(USART1, &usart_init);
 8001dac:	4c0b      	ldr	r4, [pc, #44]	; (8001ddc <utilities_init+0x68>)
	SysTick_Config(SystemCoreClock/1000);

  // Initialize UART
  	RCC_APB2PeriphClockCmd(RCC_APB2ENR_USART1EN, ENABLE);
	USART_InitTypeDef usart_init;
	USART_StructInit(&usart_init);
 8001dae:	4668      	mov	r0, sp
 8001db0:	f7ff fc56 	bl	8001660 <USART_StructInit>
	usart_init.USART_BaudRate = 115200;
 8001db4:	23e1      	movs	r3, #225	; 0xe1
 8001db6:	025b      	lsls	r3, r3, #9
	USART_Init(USART1, &usart_init);
 8001db8:	1c20      	adds	r0, r4, #0
 8001dba:	4669      	mov	r1, sp

  // Initialize UART
  	RCC_APB2PeriphClockCmd(RCC_APB2ENR_USART1EN, ENABLE);
	USART_InitTypeDef usart_init;
	USART_StructInit(&usart_init);
	usart_init.USART_BaudRate = 115200;
 8001dbc:	9300      	str	r3, [sp, #0]
	USART_Init(USART1, &usart_init);
 8001dbe:	f7ff fbff 	bl	80015c0 <USART_Init>
	USART_Cmd(USART1, ENABLE);
 8001dc2:	1c20      	adds	r0, r4, #0
 8001dc4:	2101      	movs	r1, #1
 8001dc6:	f7ff fc6d 	bl	80016a4 <USART_Cmd>
}
 8001dca:	b006      	add	sp, #24
 8001dcc:	bd10      	pop	{r4, pc}
 8001dce:	46c0      	nop			; (mov r8, r8)
 8001dd0:	20000010 	.word	0x20000010
 8001dd4:	e000e010 	.word	0xe000e010
 8001dd8:	e000ed00 	.word	0xe000ed00
 8001ddc:	40013800 	.word	0x40013800

08001de0 <send_string>:

// We're just going to block for now. 
// Move to DMA once we know it works this way
void send_string(char * string)
{
 8001de0:	b510      	push	{r4, lr}
 8001de2:	1c04      	adds	r4, r0, #0
	while (*string != 0)
 8001de4:	7823      	ldrb	r3, [r4, #0]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d00b      	beq.n	8001e02 <send_string+0x22>
	{
		while (USART_GetFlagStatus(USART1,USART_FLAG_TXE) == 0);
 8001dea:	4806      	ldr	r0, [pc, #24]	; (8001e04 <send_string+0x24>)
 8001dec:	2180      	movs	r1, #128	; 0x80
 8001dee:	f7ff fe21 	bl	8001a34 <USART_GetFlagStatus>
 8001df2:	2800      	cmp	r0, #0
 8001df4:	d0f9      	beq.n	8001dea <send_string+0xa>
      	USART_SendData(USART1, (uint16_t) *string++);
 8001df6:	7821      	ldrb	r1, [r4, #0]
 8001df8:	4802      	ldr	r0, [pc, #8]	; (8001e04 <send_string+0x24>)
 8001dfa:	f7ff fd07 	bl	800180c <USART_SendData>
 8001dfe:	3401      	adds	r4, #1
 8001e00:	e7f0      	b.n	8001de4 <send_string+0x4>
	}
}
 8001e02:	bd10      	pop	{r4, pc}
 8001e04:	40013800 	.word	0x40013800

08001e08 <RGB_init>:
#include "stm32f0xx_tim.h"
#include "stm32f0xx_rcc.h"
#include "RGB_driver.h"

void RGB_init(void)
{
 8001e08:	b5f0      	push	{r4, r5, r6, r7, lr}
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
 8001e0a:	2080      	movs	r0, #128	; 0x80
#include "stm32f0xx_tim.h"
#include "stm32f0xx_rcc.h"
#include "RGB_driver.h"

void RGB_init(void)
{
 8001e0c:	b089      	sub	sp, #36	; 0x24
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
 8001e0e:	2101      	movs	r1, #1
 8001e10:	0100      	lsls	r0, r0, #4
	// TIM_InternalClockConfig(TIM1);

	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
	TIM_TimeBaseStructure.TIM_Period = TIMER_PERIOD;
	TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
 8001e12:	4d1a      	ldr	r5, [pc, #104]	; (8001e7c <RGB_init+0x74>)
#include "stm32f0xx_rcc.h"
#include "RGB_driver.h"

void RGB_init(void)
{
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
 8001e14:	f7fe fc66 	bl	80006e4 <RCC_APB2PeriphClockCmd>
	// TIM_InternalClockConfig(TIM1);

	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
 8001e18:	4668      	mov	r0, sp
 8001e1a:	f7fe fdbb 	bl	8000994 <TIM_TimeBaseStructInit>
	TIM_TimeBaseStructure.TIM_Period = TIMER_PERIOD;
 8001e1e:	2380      	movs	r3, #128	; 0x80
	TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);


	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
 8001e20:	ac03      	add	r4, sp, #12
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
	// TIM_InternalClockConfig(TIM1);

	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
	TIM_TimeBaseStructure.TIM_Period = TIMER_PERIOD;
 8001e22:	00db      	lsls	r3, r3, #3
	TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
 8001e24:	4669      	mov	r1, sp
 8001e26:	1c28      	adds	r0, r5, #0
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);
	// TIM_InternalClockConfig(TIM1);

	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
	TIM_TimeBaseStructure.TIM_Period = TIMER_PERIOD;
 8001e28:	9301      	str	r3, [sp, #4]
	TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
 8001e2a:	f7fe fd6d 	bl	8000908 <TIM_TimeBaseInit>


	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
 8001e2e:	1c20      	adds	r0, r4, #0
 8001e30:	f7fe ff52 	bl	8000cd8 <TIM_OCStructInit>
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
 8001e34:	2370      	movs	r3, #112	; 0x70
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 8001e36:	2601      	movs	r6, #1
	TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);


	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
 8001e38:	8023      	strh	r3, [r4, #0]
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
	TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
 8001e3a:	2700      	movs	r7, #0

	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
 8001e3c:	2302      	movs	r3, #2
	TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
	TIM_OC1Init(TIM1, &TIM_OCInitStructure);
 8001e3e:	1c28      	adds	r0, r5, #0
 8001e40:	1c21      	adds	r1, r4, #0

	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
 8001e42:	81a3      	strh	r3, [r4, #12]


	TIM_OCInitTypeDef TIM_OCInitStructure;
	TIM_OCStructInit(&TIM_OCInitStructure);
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2;
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 8001e44:	8066      	strh	r6, [r4, #2]
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
	TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
 8001e46:	8227      	strh	r7, [r4, #16]
	TIM_OC1Init(TIM1, &TIM_OCInitStructure);
 8001e48:	f7fe fe46 	bl	8000ad8 <TIM_OC1Init>
	TIM_OC2Init(TIM1, &TIM_OCInitStructure);
 8001e4c:	1c28      	adds	r0, r5, #0
 8001e4e:	1c21      	adds	r1, r4, #0
 8001e50:	f7fe fe86 	bl	8000b60 <TIM_OC2Init>
	TIM_OC3Init(TIM1, &TIM_OCInitStructure);
 8001e54:	1c28      	adds	r0, r5, #0
 8001e56:	1c21      	adds	r1, r4, #0
 8001e58:	f7fe fec6 	bl	8000be8 <TIM_OC3Init>
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
	TIM_OC4Init(TIM1, &TIM_OCInitStructure);
 8001e5c:	1c28      	adds	r0, r5, #0
 8001e5e:	1c21      	adds	r1, r4, #0
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
	TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
	TIM_OC1Init(TIM1, &TIM_OCInitStructure);
	TIM_OC2Init(TIM1, &TIM_OCInitStructure);
	TIM_OC3Init(TIM1, &TIM_OCInitStructure);
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 8001e60:	81a7      	strh	r7, [r4, #12]
	TIM_OC4Init(TIM1, &TIM_OCInitStructure);
 8001e62:	f7fe ff05 	bl	8000c70 <TIM_OC4Init>
	TIM_Cmd(TIM1, ENABLE);
 8001e66:	1c28      	adds	r0, r5, #0
 8001e68:	1c31      	adds	r1, r6, #0
 8001e6a:	f7fe fdfb 	bl	8000a64 <TIM_Cmd>
	TIM_CtrlPWMOutputs(TIM1, ENABLE);
 8001e6e:	1c28      	adds	r0, r5, #0
 8001e70:	1c31      	adds	r1, r6, #0
 8001e72:	f7fe fe21 	bl	8000ab8 <TIM_CtrlPWMOutputs>
}
 8001e76:	b009      	add	sp, #36	; 0x24
 8001e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e7a:	46c0      	nop			; (mov r8, r8)
 8001e7c:	40012c00 	.word	0x40012c00

08001e80 <write_RGB>:

/*
Set the value between 0 and 1000 to set the compare channels.
*/
void write_RGB(uint16_t red, uint16_t green, uint16_t blue)
{
 8001e80:	b570      	push	{r4, r5, r6, lr}
 8001e82:	1c06      	adds	r6, r0, #0
	TIM_SetCompare1(TIM1, green*TIMER_PERIOD/1000);
 8001e84:	0288      	lsls	r0, r1, #10
 8001e86:	21fa      	movs	r1, #250	; 0xfa
 8001e88:	0089      	lsls	r1, r1, #2

/*
Set the value between 0 and 1000 to set the compare channels.
*/
void write_RGB(uint16_t red, uint16_t green, uint16_t blue)
{
 8001e8a:	1c15      	adds	r5, r2, #0
	TIM_SetCompare1(TIM1, green*TIMER_PERIOD/1000);
 8001e8c:	f7ff fe4e 	bl	8001b2c <__aeabi_idiv>
 8001e90:	4c0b      	ldr	r4, [pc, #44]	; (8001ec0 <write_RGB+0x40>)
 8001e92:	1c01      	adds	r1, r0, #0
 8001e94:	1c20      	adds	r0, r4, #0
 8001e96:	f7fe ff51 	bl	8000d3c <TIM_SetCompare1>
	TIM_SetCompare2(TIM1, red*TIMER_PERIOD/1000);
 8001e9a:	21fa      	movs	r1, #250	; 0xfa
 8001e9c:	02b0      	lsls	r0, r6, #10
 8001e9e:	0089      	lsls	r1, r1, #2
 8001ea0:	f7ff fe44 	bl	8001b2c <__aeabi_idiv>
 8001ea4:	1c01      	adds	r1, r0, #0
 8001ea6:	1c20      	adds	r0, r4, #0
 8001ea8:	f7fe ff4a 	bl	8000d40 <TIM_SetCompare2>
	TIM_SetCompare3(TIM1, blue*TIMER_PERIOD/1000);
 8001eac:	21fa      	movs	r1, #250	; 0xfa
 8001eae:	02a8      	lsls	r0, r5, #10
 8001eb0:	0089      	lsls	r1, r1, #2
 8001eb2:	f7ff fe3b 	bl	8001b2c <__aeabi_idiv>
 8001eb6:	1c01      	adds	r1, r0, #0
 8001eb8:	1c20      	adds	r0, r4, #0
 8001eba:	f7fe ff43 	bl	8000d44 <TIM_SetCompare3>
}
 8001ebe:	bd70      	pop	{r4, r5, r6, pc}
 8001ec0:	40012c00 	.word	0x40012c00

08001ec4 <write_debug_led>:
/*
Set the value between 0 and 1000 to set the compare channel.
*/
void write_debug_led(uint16_t brightness)
{
	TIM_SetCompare4(TIM1, brightness*TIMER_PERIOD/1000);
 8001ec4:	21fa      	movs	r1, #250	; 0xfa

/*
Set the value between 0 and 1000 to set the compare channel.
*/
void write_debug_led(uint16_t brightness)
{
 8001ec6:	b508      	push	{r3, lr}
	TIM_SetCompare4(TIM1, brightness*TIMER_PERIOD/1000);
 8001ec8:	0089      	lsls	r1, r1, #2
 8001eca:	0280      	lsls	r0, r0, #10
 8001ecc:	f7ff fe2e 	bl	8001b2c <__aeabi_idiv>
 8001ed0:	1c01      	adds	r1, r0, #0
 8001ed2:	4802      	ldr	r0, [pc, #8]	; (8001edc <write_debug_led+0x18>)
 8001ed4:	f7fe ff38 	bl	8000d48 <TIM_SetCompare4>
 8001ed8:	bd08      	pop	{r3, pc}
 8001eda:	46c0      	nop			; (mov r8, r8)
 8001edc:	40012c00 	.word	0x40012c00

08001ee0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001ee0:	480d      	ldr	r0, [pc, #52]	; (8001f18 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001ee2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8001ee4:	2100      	movs	r1, #0
  b LoopCopyDataInit
 8001ee6:	e003      	b.n	8001ef0 <LoopCopyDataInit>

08001ee8 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8001ee8:	4b0c      	ldr	r3, [pc, #48]	; (8001f1c <LoopForever+0x6>)
  ldr r3, [r3, r1]
 8001eea:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8001eec:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8001eee:	3104      	adds	r1, #4

08001ef0 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8001ef0:	480b      	ldr	r0, [pc, #44]	; (8001f20 <LoopForever+0xa>)
  ldr r3, =_edata
 8001ef2:	4b0c      	ldr	r3, [pc, #48]	; (8001f24 <LoopForever+0xe>)
  adds r2, r0, r1
 8001ef4:	1842      	adds	r2, r0, r1
  cmp r2, r3
 8001ef6:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8001ef8:	d3f6      	bcc.n	8001ee8 <CopyDataInit>
  ldr r2, =_sbss
 8001efa:	4a0b      	ldr	r2, [pc, #44]	; (8001f28 <LoopForever+0x12>)
  b LoopFillZerobss
 8001efc:	e002      	b.n	8001f04 <LoopFillZerobss>

08001efe <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8001efe:	2300      	movs	r3, #0
  str  r3, [r2]
 8001f00:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001f02:	3204      	adds	r2, #4

08001f04 <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 8001f04:	4b09      	ldr	r3, [pc, #36]	; (8001f2c <LoopForever+0x16>)
  cmp r2, r3
 8001f06:	429a      	cmp	r2, r3
  bcc FillZerobss
 8001f08:	d3f9      	bcc.n	8001efe <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8001f0a:	f7ff fe8b 	bl	8001c24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001f0e:	f000 f811 	bl	8001f34 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001f12:	f7ff fe6d 	bl	8001bf0 <main>

08001f16 <LoopForever>:
  
LoopForever:
    b LoopForever
 8001f16:	e7fe      	b.n	8001f16 <LoopForever>

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001f18:	20001000 	.word	0x20001000
/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
  b LoopCopyDataInit

CopyDataInit:
  ldr r3, =_sidata
 8001f1c:	0800200c 	.word	0x0800200c
  ldr r3, [r3, r1]
  str r3, [r0, r1]
  adds r1, r1, #4

LoopCopyDataInit:
  ldr r0, =_sdata
 8001f20:	20000000 	.word	0x20000000
  ldr r3, =_edata
 8001f24:	20000014 	.word	0x20000014
  adds r2, r0, r1
  cmp r2, r3
  bcc CopyDataInit
  ldr r2, =_sbss
 8001f28:	20000014 	.word	0x20000014
  str  r3, [r2]
  adds r2, r2, #4


LoopFillZerobss:
  ldr r3, = _ebss
 8001f2c:	20000018 	.word	0x20000018

08001f30 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001f30:	e7fe      	b.n	8001f30 <ADC1_COMP_IRQHandler>
	...

08001f34 <__libc_init_array>:
 8001f34:	b570      	push	{r4, r5, r6, lr}
 8001f36:	4e0d      	ldr	r6, [pc, #52]	; (8001f6c <__libc_init_array+0x38>)
 8001f38:	4d0d      	ldr	r5, [pc, #52]	; (8001f70 <__libc_init_array+0x3c>)
 8001f3a:	2400      	movs	r4, #0
 8001f3c:	1bad      	subs	r5, r5, r6
 8001f3e:	10ad      	asrs	r5, r5, #2
 8001f40:	d005      	beq.n	8001f4e <__libc_init_array+0x1a>
 8001f42:	00a3      	lsls	r3, r4, #2
 8001f44:	58f3      	ldr	r3, [r6, r3]
 8001f46:	3401      	adds	r4, #1
 8001f48:	4798      	blx	r3
 8001f4a:	42a5      	cmp	r5, r4
 8001f4c:	d1f9      	bne.n	8001f42 <__libc_init_array+0xe>
 8001f4e:	f000 f851 	bl	8001ff4 <_init>
 8001f52:	4e08      	ldr	r6, [pc, #32]	; (8001f74 <__libc_init_array+0x40>)
 8001f54:	4d08      	ldr	r5, [pc, #32]	; (8001f78 <__libc_init_array+0x44>)
 8001f56:	2400      	movs	r4, #0
 8001f58:	1bad      	subs	r5, r5, r6
 8001f5a:	10ad      	asrs	r5, r5, #2
 8001f5c:	d005      	beq.n	8001f6a <__libc_init_array+0x36>
 8001f5e:	00a3      	lsls	r3, r4, #2
 8001f60:	58f3      	ldr	r3, [r6, r3]
 8001f62:	3401      	adds	r4, #1
 8001f64:	4798      	blx	r3
 8001f66:	42a5      	cmp	r5, r4
 8001f68:	d1f9      	bne.n	8001f5e <__libc_init_array+0x2a>
 8001f6a:	bd70      	pop	{r4, r5, r6, pc}
	...
 8001f7c:	6c6c6548 	.word	0x6c6c6548
 8001f80:	6f57206f 	.word	0x6f57206f
 8001f84:	21646c72 	.word	0x21646c72
 8001f88:	0000000a 	.word	0x0000000a

08001f8c <gpio_pin_mapping>:
 8001f8c:	48000000 02020800 48000000 02020200     ...H.......H....
 8001f9c:	48000000 02020100 48000000 02020400     ...H.......H....
 8001fac:	48000000 00020040 48000000 00020080     ...H@......H....
 8001fbc:	48000000 00020020 48000000 00020010     ...H ......H....
 8001fcc:	48000000 00010004 48000000 00000008     ...H.......H....
 8001fdc:	48000400 00020080 48000400 00020040     ...H.......H@...
 8001fec:	48000400 00000001                       ...H....

08001ff4 <_init>:
 8001ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ff6:	46c0      	nop			; (mov r8, r8)
 8001ff8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001ffa:	bc08      	pop	{r3}
 8001ffc:	469e      	mov	lr, r3
 8001ffe:	4770      	bx	lr

08002000 <_fini>:
 8002000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002002:	46c0      	nop			; (mov r8, r8)
 8002004:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002006:	bc08      	pop	{r3}
 8002008:	469e      	mov	lr, r3
 800200a:	4770      	bx	lr
